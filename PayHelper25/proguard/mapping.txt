android.net.compatibility.WebAddress -> android.net.compatibility.WebAddress:
    5:5:java.lang.String toString() -> toString
    6:6:void setScheme(java.lang.String) -> setScheme
    7:7:java.lang.String getScheme() -> getScheme
    8:8:void setHost(java.lang.String) -> setHost
    9:9:java.lang.String getHost() -> getHost
    10:10:void setPort(int) -> setPort
    11:11:int getPort() -> getPort
    12:12:void setPath(java.lang.String) -> setPath
    13:13:java.lang.String getPath() -> getPath
    14:14:void setAuthInfo(java.lang.String) -> setAuthInfo
    15:15:java.lang.String getAuthInfo() -> getAuthInfo
android.net.http.AndroidHttpClient -> android.net.http.AndroidHttpClient:
    long DEFAULT_SYNC_MIN_GZIP_BYTES -> DEFAULT_SYNC_MIN_GZIP_BYTES
    6:6:android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context) -> newInstance
    7:7:android.net.http.AndroidHttpClient newInstance(java.lang.String) -> newInstance
    8:8:void finalize() -> finalize
    9:9:void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest) -> modifyRequestToAcceptGzipResponse
    10:10:java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity) -> getUngzippedContent
    11:11:void close() -> close
    12:12:org.apache.http.params.HttpParams getParams() -> getParams
    13:13:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    14:14:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    15:15:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    16:16:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    17:17:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    18:18:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    19:19:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    20:20:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    21:21:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    22:22:org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver) -> getCompressedEntity
    23:23:long getMinGzipSize(android.content.ContentResolver) -> getMinGzipSize
    24:24:void enableCurlLogging(java.lang.String,int) -> enableCurlLogging
    25:25:void disableCurlLogging() -> disableCurlLogging
    26:26:long parseDate(java.lang.String) -> parseDate
android.net.http.AndroidHttpClientConnection -> android.net.http.AndroidHttpClientConnection:
    6:6:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    7:7:java.lang.String toString() -> toString
    8:8:boolean isOpen() -> isOpen
    9:9:java.net.InetAddress getLocalAddress() -> getLocalAddress
    10:10:int getLocalPort() -> getLocalPort
    11:11:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    12:12:int getRemotePort() -> getRemotePort
    13:13:void setSocketTimeout(int) -> setSocketTimeout
    14:14:int getSocketTimeout() -> getSocketTimeout
    15:15:void shutdown() -> shutdown
    16:16:void close() -> close
    17:17:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    18:18:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    19:19:void doFlush() -> doFlush
    20:20:void flush() -> flush
    21:21:org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers) -> parseResponseHeader
    22:22:org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers) -> receiveResponseEntity
    23:23:boolean isStale() -> isStale
    24:24:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
android.net.http.CertificateChainValidator -> android.net.http.CertificateChainValidator:
    5:5:android.net.http.CertificateChainValidator getInstance() -> getInstance
    6:6:android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String) -> doHandshakeAndValidateServerCertificates
    7:7:android.net.http.SslError verifyServerCertificates(byte[][],java.lang.String,java.lang.String) -> verifyServerCertificates
    8:8:void handleTrustStorageUpdate() -> handleTrustStorageUpdate
android.net.http.Connection -> android.net.http.Connection:
    android.net.http.SslCertificate mCertificate -> mCertificate
    android.net.http.AndroidHttpClientConnection mHttpClientConnection -> mHttpClientConnection
    5:5:java.lang.String toString() -> toString
android.net.http.DelegatingSSLSession -> android.net.http.DelegatingSSLSession:
    12:12:int getApplicationBufferSize() -> getApplicationBufferSize
    13:13:java.lang.String getCipherSuite() -> getCipherSuite
    14:14:long getCreationTime() -> getCreationTime
    15:15:byte[] getId() -> getId
    16:16:long getLastAccessedTime() -> getLastAccessedTime
    17:17:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    18:18:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    19:19:int getPacketBufferSize() -> getPacketBufferSize
    20:20:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    21:21:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    22:22:java.lang.String getPeerHost() -> getPeerHost
    23:23:int getPeerPort() -> getPeerPort
    24:24:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    25:25:java.lang.String getProtocol() -> getProtocol
    26:26:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    27:27:java.lang.Object getValue(java.lang.String) -> getValue
    28:28:java.lang.String[] getValueNames() -> getValueNames
    29:29:void invalidate() -> invalidate
    30:30:boolean isValid() -> isValid
    31:31:void putValue(java.lang.String,java.lang.Object) -> putValue
    32:32:void removeValue(java.lang.String) -> removeValue
android.net.http.DelegatingSSLSession$CertificateWrap -> android.net.http.DelegatingSSLSession$CertificateWrap:
    9:9:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
android.net.http.EventHandler -> android.net.http.EventHandler:
    int ERROR -> ERROR
    int ERROR_AUTH -> ERROR_AUTH
    int ERROR_BAD_URL -> ERROR_BAD_URL
    int ERROR_CONNECT -> ERROR_CONNECT
    int ERROR_FAILED_SSL_HANDSHAKE -> ERROR_FAILED_SSL_HANDSHAKE
    int ERROR_IO -> ERROR_IO
    int ERROR_LOOKUP -> ERROR_LOOKUP
    int ERROR_PROXYAUTH -> ERROR_PROXYAUTH
    int ERROR_REDIRECT_LOOP -> ERROR_REDIRECT_LOOP
    int ERROR_TIMEOUT -> ERROR_TIMEOUT
    int ERROR_UNSUPPORTED_AUTH_SCHEME -> ERROR_UNSUPPORTED_AUTH_SCHEME
    int ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    int FILE_ERROR -> FILE_ERROR
    int FILE_NOT_FOUND_ERROR -> FILE_NOT_FOUND_ERROR
    int OK -> OK
    int TOO_MANY_REQUESTS_ERROR -> TOO_MANY_REQUESTS_ERROR
    void status(int,int,int,java.lang.String) -> status
    void headers(android.net.http.Headers) -> headers
    void data(byte[],int) -> data
    void endData() -> endData
    void certificate(android.net.http.SslCertificate) -> certificate
    void error(int,java.lang.String) -> error
    boolean handleSslErrorRequest(android.net.http.SslError) -> handleSslErrorRequest
android.net.http.Headers -> android.net.http.Headers:
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    int CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    int CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    int NO_CONN_TYPE -> NO_CONN_TYPE
    long NO_CONTENT_LENGTH -> NO_CONTENT_LENGTH
    long NO_TRANSFER_ENCODING -> NO_TRANSFER_ENCODING
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_CONNECTION -> PROXY_CONNECTION
    java.lang.String REFRESH -> REFRESH
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String X_PERMITTED_CROSS_DOMAIN_POLICIES -> X_PERMITTED_CROSS_DOMAIN_POLICIES
    9:9:void parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    10:10:long getTransferEncoding() -> getTransferEncoding
    11:11:long getContentLength() -> getContentLength
    12:12:int getConnectionType() -> getConnectionType
    13:13:java.lang.String getContentType() -> getContentType
    14:14:java.lang.String getContentEncoding() -> getContentEncoding
    15:15:java.lang.String getLocation() -> getLocation
    16:16:java.lang.String getWwwAuthenticate() -> getWwwAuthenticate
    17:17:java.lang.String getProxyAuthenticate() -> getProxyAuthenticate
    18:18:java.lang.String getContentDisposition() -> getContentDisposition
    19:19:java.lang.String getAcceptRanges() -> getAcceptRanges
    20:20:java.lang.String getExpires() -> getExpires
    21:21:java.lang.String getCacheControl() -> getCacheControl
    22:22:java.lang.String getLastModified() -> getLastModified
    23:23:java.lang.String getEtag() -> getEtag
    24:24:java.util.ArrayList getSetCookie() -> getSetCookie
    25:25:java.lang.String getPragma() -> getPragma
    26:26:java.lang.String getRefresh() -> getRefresh
    27:27:java.lang.String getXPermittedCrossDomainPolicies() -> getXPermittedCrossDomainPolicies
    28:28:void setContentLength(long) -> setContentLength
    29:29:void setContentType(java.lang.String) -> setContentType
    30:30:void setContentEncoding(java.lang.String) -> setContentEncoding
    31:31:void setLocation(java.lang.String) -> setLocation
    32:32:void setWwwAuthenticate(java.lang.String) -> setWwwAuthenticate
    33:33:void setProxyAuthenticate(java.lang.String) -> setProxyAuthenticate
    34:34:void setContentDisposition(java.lang.String) -> setContentDisposition
    35:35:void setAcceptRanges(java.lang.String) -> setAcceptRanges
    36:36:void setExpires(java.lang.String) -> setExpires
    37:37:void setCacheControl(java.lang.String) -> setCacheControl
    38:38:void setLastModified(java.lang.String) -> setLastModified
    39:39:void setEtag(java.lang.String) -> setEtag
    40:40:void setXPermittedCrossDomainPolicies(java.lang.String) -> setXPermittedCrossDomainPolicies
    41:41:void getHeaders(android.net.http.Headers$HeaderCallback) -> getHeaders
android.net.http.Headers$HeaderCallback -> android.net.http.Headers$HeaderCallback:
    void header(java.lang.String,java.lang.String) -> header
android.net.http.HttpAuthHeader -> android.net.http.HttpAuthHeader:
    int BASIC -> BASIC
    java.lang.String BASIC_TOKEN -> BASIC_TOKEN
    int DIGEST -> DIGEST
    java.lang.String DIGEST_TOKEN -> DIGEST_TOKEN
    int UNKNOWN -> UNKNOWN
    5:5:boolean isProxy() -> isProxy
    6:6:void setProxy() -> setProxy
    7:7:java.lang.String getUsername() -> getUsername
    8:8:void setUsername(java.lang.String) -> setUsername
    9:9:java.lang.String getPassword() -> getPassword
    10:10:void setPassword(java.lang.String) -> setPassword
    11:11:boolean isBasic() -> isBasic
    12:12:boolean isDigest() -> isDigest
    13:13:int getScheme() -> getScheme
    14:14:boolean getStale() -> getStale
    15:15:java.lang.String getRealm() -> getRealm
    16:16:java.lang.String getNonce() -> getNonce
    17:17:java.lang.String getOpaque() -> getOpaque
    18:18:java.lang.String getQop() -> getQop
    19:19:java.lang.String getAlgorithm() -> getAlgorithm
    20:20:boolean isSupportedScheme() -> isSupportedScheme
android.net.http.HttpsConnection -> android.net.http.HttpsConnection:
    android.net.http.SslCertificate mCertificate -> mCertificate
    android.net.http.AndroidHttpClientConnection mHttpClientConnection -> mHttpClientConnection
    6:6:void initializeEngine(java.io.File) -> initializeEngine
    2:2:java.lang.String toString() -> toString
android.net.http.LoggingEventHandler -> android.net.http.LoggingEventHandler:
    6:6:void requestSent() -> requestSent
    7:7:void status(int,int,int,java.lang.String) -> status
    8:8:void headers(android.net.http.Headers) -> headers
    9:9:void locationChanged(java.lang.String,boolean) -> locationChanged
    10:10:void data(byte[],int) -> data
    11:11:void endData() -> endData
    12:12:void certificate(android.net.http.SslCertificate) -> certificate
    13:13:void error(int,java.lang.String) -> error
    14:14:boolean handleSslErrorRequest(android.net.http.SslError) -> handleSslErrorRequest
android.net.http.Request -> android.net.http.Request:
    5:5:java.lang.String toString() -> toString
    6:6:void handleSslErrorResponse(boolean) -> handleSslErrorResponse
android.net.http.RequestFeeder -> android.net.http.RequestFeeder:
    android.net.http.Request getRequest() -> getRequest
    android.net.http.Request getRequest(org.apache.http.HttpHost) -> getRequest
    boolean haveRequest(org.apache.http.HttpHost) -> haveRequest
    void requeueRequest(android.net.http.Request) -> requeueRequest
android.net.http.RequestHandle -> android.net.http.RequestHandle:
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    6:6:void cancel() -> cancel
    7:7:void pauseRequest(boolean) -> pauseRequest
    8:8:void handleSslErrorResponse(boolean) -> handleSslErrorResponse
    9:9:boolean isRedirectMax() -> isRedirectMax
    10:10:int getRedirectCount() -> getRedirectCount
    11:11:void setRedirectCount(int) -> setRedirectCount
    12:12:boolean setupRedirect(java.lang.String,int,java.util.Map) -> setupRedirect
    13:13:void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String) -> setupBasicAuthResponse
    14:14:void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setupDigestAuthResponse
    15:15:java.lang.String getMethod() -> getMethod
    16:16:java.lang.String computeBasicAuthResponse(java.lang.String,java.lang.String) -> computeBasicAuthResponse
    17:17:void waitUntilComplete() -> waitUntilComplete
    18:18:void processRequest() -> processRequest
    19:19:java.lang.String authorizationHeader(boolean) -> authorizationHeader
android.net.http.RequestQueue -> android.net.http.RequestQueue:
    7:7:void enablePlatformNotifications() -> enablePlatformNotifications
    8:8:void disablePlatformNotifications() -> disablePlatformNotifications
    9:9:org.apache.http.HttpHost getProxyHost() -> getProxyHost
    10:10:android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueRequest
    11:11:android.net.http.RequestHandle queueRequest(java.lang.String,android.net.compatibility.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueRequest
    12:12:android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.compatibility.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueSynchronousRequest
    13:13:android.net.http.Request getRequest() -> getRequest
    14:14:android.net.http.Request getRequest(org.apache.http.HttpHost) -> getRequest
    15:15:boolean haveRequest(org.apache.http.HttpHost) -> haveRequest
    16:16:void requeueRequest(android.net.http.Request) -> requeueRequest
    17:17:void shutdown() -> shutdown
    18:18:void queueRequest(android.net.http.Request,boolean) -> queueRequest
    19:19:void startTiming() -> startTiming
    20:20:void stopTiming() -> stopTiming
android.net.http.SslCertificate -> android.net.http.SslCertificate:
    17:17:android.os.Bundle saveState(android.net.http.SslCertificate) -> saveState
    18:18:android.net.http.SslCertificate restoreState(android.os.Bundle) -> restoreState
    19:19:java.util.Date getValidNotBeforeDate() -> getValidNotBeforeDate
    21:21:java.lang.String getValidNotBefore() -> getValidNotBefore
    22:22:java.util.Date getValidNotAfterDate() -> getValidNotAfterDate
    24:24:java.lang.String getValidNotAfter() -> getValidNotAfter
    25:25:android.net.http.SslCertificate$DName getIssuedTo() -> getIssuedTo
    26:26:android.net.http.SslCertificate$DName getIssuedBy() -> getIssuedBy
    27:27:java.lang.String toString() -> toString
android.net.http.SslCertificate$DName -> android.net.http.SslCertificate$DName:
    android.net.http.SslCertificate this$0 -> this$0
    7:7:java.lang.String getDName() -> getDName
    8:8:java.lang.String getCName() -> getCName
    9:9:java.lang.String getOName() -> getOName
    10:10:java.lang.String getUName() -> getUName
android.net.http.SslError -> android.net.http.SslError:
    int SSL_DATE_INVALID -> SSL_DATE_INVALID
    int SSL_EXPIRED -> SSL_EXPIRED
    int SSL_IDMISMATCH -> SSL_IDMISMATCH
    int SSL_INVALID -> SSL_INVALID
    int SSL_MAX_ERROR -> SSL_MAX_ERROR
    int SSL_NOTYETVALID -> SSL_NOTYETVALID
    int SSL_UNTRUSTED -> SSL_UNTRUSTED
    10:10:android.net.http.SslCertificate getCertificate() -> getCertificate
    11:11:java.lang.String getUrl() -> getUrl
    12:12:boolean addError(int) -> addError
    13:13:boolean hasError(int) -> hasError
    14:14:int getPrimaryError() -> getPrimaryError
    15:15:java.lang.String toString() -> toString
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    292:292:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    304:304:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    317:317:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    330:330:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    343:343:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    355:382:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    394:408:java.lang.String flagToString(int) -> flagToString
    425:425:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    437:447:java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    71:71:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    76:76:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    81:81:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    86:86:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    91:91:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    96:99:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    106:106:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    43:43:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    47:47:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    51:51:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    55:55:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    59:59:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    63:63:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    29:29:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    33:33:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    37:37:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    41:41:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    45:45:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    28:28:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    219:229:void syncState() -> syncState
    242:251:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    258:258:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    270:273:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    285:293:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    306:313:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    324:328:void onDrawerOpened(android.view.View) -> onDrawerOpened
    339:343:void onDrawerClosed(android.view.View) -> onDrawerClosed
    354:354:void onDrawerStateChanged(int) -> onDrawerStateChanged
    357:360:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    364:370:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    373:379:void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    104:104:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    111:111:java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    117:117:java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    124:124:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    130:130:java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    136:136:java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    393:395:void setOffset(float) -> setOffset
    398:398:float getOffset() -> getOffset
    402:404:void setOffsetBy(float) -> setOffsetBy
    408:413:void draw(android.graphics.Canvas) -> draw
    417:418:void setChangingConfigurations(int) -> setChangingConfigurations
    422:422:int getChangingConfigurations() -> getChangingConfigurations
    427:428:void setDither(boolean) -> setDither
    432:433:void setFilterBitmap(boolean) -> setFilterBitmap
    437:438:void setAlpha(int) -> setAlpha
    442:443:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    447:448:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    452:453:void clearColorFilter() -> clearColorFilter
    457:457:boolean isStateful() -> isStateful
    462:462:boolean setState(int[]) -> setState
    467:467:int[] getState() -> getState
    472:472:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    477:477:boolean setVisible(boolean,boolean) -> setVisible
    482:482:int getOpacity() -> getOpacity
    487:487:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    492:493:boolean onStateChange(int[]) -> onStateChange
    498:500:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    504:504:int getIntrinsicWidth() -> getIntrinsicWidth
    509:509:int getIntrinsicHeight() -> getIntrinsicHeight
    514:514:int getMinimumWidth() -> getMinimumWidth
    519:519:int getMinimumHeight() -> getMinimumHeight
    524:524:boolean getPadding(android.graphics.Rect) -> getPadding
    529:529:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    534:537:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    541:544:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    548:551:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    48:65:java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    70:82:java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    86:89:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    63:67:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    88:93:void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    116:121:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    131:136:void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    34:35:void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    26:27:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    30:31:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    34:35:void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    45:49:android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    74:79:android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    103:108:android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    145:145:android.os.Bundle toBundle() -> toBundle
    155:155:void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    121:121:android.os.Bundle toBundle() -> toBundle
    126:130:void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    29:29:android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    35:35:android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    41:41:android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    52:52:android.os.Bundle toBundle() -> toBundle
    56:57:void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    221:233:java.lang.String toString() -> toString
    237:238:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    241:331:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    338:338:int getId() -> getId
    342:342:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    346:346:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    350:353:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    357:360:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    364:376:void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    379:380:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    384:385:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    389:390:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    394:418:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    421:421:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    425:430:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    434:439:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    443:448:android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    452:457:android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    461:466:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    470:475:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    479:479:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    484:488:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    492:493:android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    497:498:android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    502:508:android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    512:512:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    516:521:android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    525:527:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    531:533:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    537:539:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    543:545:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    549:571:void bumpBackStackNesting(int) -> bumpBackStackNesting
    574:574:int commit() -> commit
    578:578:int commitAllowingStateLoss() -> commitAllowingStateLoss
    582:596:int commitInternal(boolean) -> commitInternal
    600:688:void run() -> run
    691:772:void popFromBackStack(boolean) -> popFromBackStack
    775:775:java.lang.String getName() -> getName
    779:779:int getTransition() -> getTransition
    783:783:int getTransitionStyle() -> getTransitionStyle
    787:787:boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    96:138:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    142:142:int describeContents() -> describeContents
    146:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    160:160:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    164:164:android.support.v4.app.BackStackState[] newArray(int) -> newArray
    158:158:java.lang.Object[] newArray(int) -> newArray
    158:158:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    102:109:void setStyle(int,int) -> setStyle
    123:128:void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    140:145:int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    155:156:void dismiss() -> dismiss
    165:166:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    169:192:void dismissInternal(boolean) -> dismissInternal
    195:195:android.app.Dialog getDialog() -> getDialog
    199:199:int getTheme() -> getTheme
    212:214:void setCancelable(boolean) -> setCancelable
    220:220:boolean isCancelable() -> isCancelable
    241:242:void setShowsDialog(boolean) -> setShowsDialog
    248:248:boolean getShowsDialog() -> getShowsDialog
    253:259:void onAttach(android.app.Activity) -> onAttach
    263:270:void onDetach() -> onDetach
    274:286:void onCreate(android.os.Bundle) -> onCreate
    291:310:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    337:337:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    341:341:void onCancel(android.content.DialogInterface) -> onCancel
    344:351:void onDismiss(android.content.DialogInterface) -> onDismiss
    355:378:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    382:387:void onStart() -> onStart
    391:413:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    417:421:void onStop() -> onStop
    428:437:void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    377:377:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    396:417:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    424:434:void restoreViewState(android.os.Bundle) -> restoreViewState
    437:443:void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    446:446:boolean isInBackStack() -> isInBackStack
    453:453:boolean equals(java.lang.Object) -> equals
    460:460:int hashCode() -> hashCode
    465:480:java.lang.String toString() -> toString
    489:489:int getId() -> getId
    496:496:java.lang.String getTag() -> getTag
    507:511:void setArguments(android.os.Bundle) -> setArguments
    518:518:android.os.Bundle getArguments() -> getArguments
    530:535:void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    549:551:void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    557:557:android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    564:564:int getTargetRequestCode() -> getTargetRequestCode
    571:571:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    578:581:android.content.res.Resources getResources() -> getResources
    591:591:java.lang.CharSequence getText(int) -> getText
    601:601:java.lang.String getString(int) -> getString
    614:614:java.lang.String getString(int,java.lang.Object[]) -> getString
    628:628:android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    636:648:android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    656:656:android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    663:663:boolean isAdded() -> isAdded
    672:672:boolean isDetached() -> isDetached
    681:681:boolean isRemoving() -> isRemoving
    692:692:boolean isInLayout() -> isInLayout
    700:700:boolean isResumed() -> isResumed
    709:709:boolean isVisible() -> isVisible
    721:721:boolean isHidden() -> isHidden
    726:726:boolean hasOptionsMenu() -> hasOptionsMenu
    731:731:boolean isMenuVisible() -> isMenuVisible
    742:742:void onHiddenChanged(boolean) -> onHiddenChanged
    759:764:void setRetainInstance(boolean) -> setRetainInstance
    767:767:boolean getRetainInstance() -> getRetainInstance
    778:784:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    796:802:void setMenuVisibility(boolean) -> setMenuVisibility
    818:823:void setUserVisibleHint(boolean) -> setUserVisibleHint
    830:830:boolean getUserVisibleHint() -> getUserVisibleHint
    837:845:android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    853:857:void startActivity(android.content.Intent) -> startActivity
    864:868:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    885:885:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    893:893:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    939:940:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    947:948:void onAttach(android.app.Activity) -> onAttach
    954:954:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    972:973:void onCreate(android.os.Bundle) -> onCreate
    996:996:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1010:1010:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1019:1019:android.view.View getView() -> getView
    1036:1037:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1051:1052:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    1060:1072:void onStart() -> onStart
    1081:1082:void onResume() -> onResume
    1104:1104:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1107:1108:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1116:1117:void onPause() -> onPause
    1125:1126:void onStop() -> onStop
    1129:1130:void onLowMemory() -> onLowMemory
    1142:1143:void onDestroyView() -> onDestroyView
    1150:1160:void onDestroy() -> onDestroy
    1169:1189:void initState() -> initState
    1196:1197:void onDetach() -> onDetach
    1213:1213:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1230:1230:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1240:1240:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1261:1261:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1272:1272:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1292:1293:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1306:1307:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1317:1318:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    1338:1338:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1351:1425:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1428:1434:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1438:1448:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    1451:1471:void performCreate(android.os.Bundle) -> performCreate
    1475:1478:android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    1482:1494:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    1497:1513:void performStart() -> performStart
    1516:1530:void performResume() -> performResume
    1533:1537:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    1540:1544:void performLowMemory() -> performLowMemory
    1556:1566:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    1570:1580:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    1584:1596:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    1600:1610:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    1614:1622:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    1625:1632:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    1635:1644:void performPause() -> performPause
    1647:1656:void performStop() -> performStop
    1659:1676:void performReallyStop() -> performReallyStop
    1679:1691:void performDestroyView() -> performDestroyView
    1694:1703:void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    1442:1445:android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    322:322:int describeContents() -> describeContents
    327:328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    333:333:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    337:337:android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    331:331:java.lang.Object[] newArray(int) -> newArray
    331:331:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    152:172:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    179:182:void onBackPressed() -> onBackPressed
    189:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    198:216:void onCreate(android.os.Bundle) -> onCreate
    223:234:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    242:317:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    325:333:void onDestroy() -> onDestroy
    340:349:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    357:359:void onLowMemory() -> onLowMemory
    366:378:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    387:393:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    400:407:void onPause() -> onPause
    421:423:void onNewIntent(android.content.Intent) -> onNewIntent
    436:440:void onResume() -> onResume
    447:451:void onPostResume() -> onPostResume
    460:461:void onResumeFragments() -> onResumeFragments
    468:478:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    488:523:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    531:536:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    544:585:void onStart() -> onStart
    592:598:void onStop() -> onStop
    609:609:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    617:619:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    630:640:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    653:677:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    680:742:java.lang.String viewToString(android.view.View) -> viewToString
    746:764:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    767:773:void doReallyStop(boolean) -> doReallyStop
    783:795:void onReallyStop() -> onReallyStop
    805:805:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    812:812:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    821:825:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    832:840:void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    844:851:void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    861:866:android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    870:882:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    89:102:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    109:109:android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    142:142:android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    345:346:void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    445:462:void throwException(java.lang.RuntimeException) -> throwException
    467:467:android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    472:472:boolean executePendingTransactions() -> executePendingTransactions
    477:482:void popBackStack() -> popBackStack
    486:488:boolean popBackStackImmediate() -> popBackStackImmediate
    493:498:void popBackStack(java.lang.String,int) -> popBackStack
    502:504:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    509:517:void popBackStack(int,int) -> popBackStack
    521:526:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    531:531:int getBackStackEntryCount() -> getBackStackEntryCount
    536:536:android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    541:545:void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    549:552:void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    556:561:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    565:578:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    583:583:java.util.List getFragments() -> getFragments
    588:596:android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    601:611:java.lang.String toString() -> toString
    616:725:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    736:746:android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    750:753:android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    758:812:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    816:825:void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    830:1079:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    1082:1083:void moveToState(android.support.v4.app.Fragment) -> moveToState
    1086:1087:void moveToState(int,boolean) -> moveToState
    1090:1120:void moveToState(int,int,int,boolean) -> moveToState
    1123:1131:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1134:1150:void makeActive(android.support.v4.app.Fragment) -> makeActive
    1153:1165:void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    1168:1187:void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    1190:1204:void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    1207:1223:void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    1226:1242:void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    1245:1261:void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    1264:1283:void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    1286:1304:android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    1308:1326:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1330:1338:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1342:1350:void checkStateLoss() -> checkStateLoss
    1353:1369:void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    1372:1388:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    1392:1414:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    1417:1425:void freeBackStackIndex(int) -> freeBackStackIndex
    1431:1480:boolean execPendingActions() -> execPendingActions
    1484:1489:void reportBackStackChanged() -> reportBackStackChanged
    1492:1497:void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    1500:1559:boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    1563:1578:java.util.ArrayList retainNonConfig() -> retainNonConfig
    1582:1595:void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    1598:1627:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    1633:1743:android.os.Parcelable saveAllState() -> saveAllState
    1749:1856:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    1860:1864:void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    1867:1868:void noteStateNotSaved() -> noteStateNotSaved
    1871:1873:void dispatchCreate() -> dispatchCreate
    1876:1878:void dispatchActivityCreated() -> dispatchActivityCreated
    1881:1883:void dispatchStart() -> dispatchStart
    1886:1888:void dispatchResume() -> dispatchResume
    1891:1892:void dispatchPause() -> dispatchPause
    1898:1901:void dispatchStop() -> dispatchStop
    1904:1905:void dispatchReallyStop() -> dispatchReallyStop
    1908:1909:void dispatchDestroyView() -> dispatchDestroyView
    1912:1918:void dispatchDestroy() -> dispatchDestroy
    1921:1929:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    1932:1940:void dispatchLowMemory() -> dispatchLowMemory
    1943:1971:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    1975:1986:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    1990:2000:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    2004:2014:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2018:2026:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    2029:2041:int reverseTransit(int) -> reverseTransit
    2053:2065:int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    440:441:void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    479:480:void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    495:496:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    514:515:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    1010:1015:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1018:1018:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1021:1021:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    364:364:int describeContents() -> describeContents
    368:371:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    376:376:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    380:380:android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    374:374:java.lang.Object[] newArray(int) -> newArray
    374:374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    80:80:void startUpdate(android.view.ViewGroup) -> startUpdate
    84:107:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    112:118:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    122:134:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    138:143:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    147:147:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    152:152:android.os.Parcelable saveState() -> saveState
    157:157:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    169:169:long getItemId(int) -> getItemId
    173:173:java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    89:116:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    120:120:int describeContents() -> describeContents
    124:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    139:139:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    143:143:android.support.v4.app.FragmentState[] newArray(int) -> newArray
    137:137:java.lang.Object[] newArray(int) -> newArray
    137:137:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    86:86:void startUpdate(android.view.ViewGroup) -> startUpdate
    94:121:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    126:140:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    144:156:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    160:165:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    169:169:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    174:191:android.os.Parcelable saveState() -> saveState
    196:224:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    140:172:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    181:181:void setup() -> setup
    186:190:void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    193:205:void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    208:215:void ensureContent() -> ensureContent
    219:220:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    223:242:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    246:281:void onAttachedToWindow() -> onAttachedToWindow
    285:287:void onDetachedFromWindow() -> onDetachedFromWindow
    291:294:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    299:302:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:315:void onTabChanged(java.lang.String) -> onTabChanged
    318:349:android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    83:86:android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    104:106:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    118:118:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    122:122:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    116:116:java.lang.Object[] newArray(int) -> newArray
    116:116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    61:61:android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    61:61:android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    61:61:java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    61:61:java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    61:61:android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    91:136:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    144:146:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    153:159:void onDestroyView() -> onDestroyView
    173:173:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    179:189:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    198:200:void setSelection(int) -> setSelection
    206:207:int getSelectedItemPosition() -> getSelectedItemPosition
    214:215:long getSelectedItemId() -> getSelectedItemId
    222:223:android.widget.ListView getListView() -> getListView
    232:241:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    258:259:void setListShown(boolean) -> setListShown
    266:267:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    280:313:void setListShown(boolean,boolean) -> setListShown
    319:319:android.widget.ListAdapter getListAdapter() -> getListAdapter
    323:374:void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    51:52:void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    58:59:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    177:178:void enableDebugLogging(boolean) -> enableDebugLogging
    184:184:boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    484:485:void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    489:492:android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    498:503:android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    508:515:void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    543:565:android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    593:647:android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    658:678:void destroyLoader(int) -> destroyLoader
    686:697:android.support.v4.content.Loader getLoader(int) -> getLoader
    701:716:void doStart() -> doStart
    719:731:void doStop() -> doStop
    734:747:void doRetain() -> doRetain
    750:758:void finishRetain() -> finishRetain
    761:764:void doReportNextStart() -> doReportNextStart
    767:770:void doReportStart() -> doReportStart
    773:786:void doDestroy() -> doDestroy
    790:796:java.lang.String toString() -> toString
    801:821:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    825:831:boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    235:267:void start() -> start
    270:275:void retain() -> retain
    278:300:void finishRetain() -> finishRetain
    303:311:void reportStart() -> reportStart
    314:324:void stop() -> stop
    327:359:void destroy() -> destroy
    362:415:void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    418:435:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    439:447:java.lang.String toString() -> toString
    451:474:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    158:158:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    174:185:void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    201:202:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    215:215:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    230:240:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    255:265:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    279:282:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    297:300:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    52:66:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    72:73:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    78:81:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    85:91:java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    101:105:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    109:109:android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    114:114:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    119:120:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    124:128:java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    25:25:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    29:29:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    33:34:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    37:37:java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    32:41:android.view.ViewGroup wrap(android.view.View) -> wrap
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    34:34:android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    668:669:android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    676:678:android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    685:686:android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    693:695:android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    735:736:android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    743:745:android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    753:754:android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    231:232:android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    247:248:android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    259:260:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    274:276:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    283:284:android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    291:292:android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    305:306:android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    315:316:android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    323:324:android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    332:335:android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    342:343:android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    355:356:android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    367:368:android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    385:387:android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    395:396:android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    405:407:android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    414:415:android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    422:424:android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    434:436:android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    446:447:android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    456:462:android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    477:478:android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    486:487:android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    497:498:android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    512:516:android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    520:525:void setFlag(int,boolean) -> setFlag
    539:540:android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    560:561:android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    573:579:android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    587:587:android.app.Notification getNotification() -> getNotification
    595:595:android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    797:798:android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    805:807:android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    814:815:android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    87:94:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    100:100:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    108:108:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    117:148:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    614:620:void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    623:627:android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    30:52:android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    31:54:android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    62:63:void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    67:73:void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    78:87:void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    91:99:void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    102:102:android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    173:177:java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    193:197:android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    232:233:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    244:250:void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    58:58:android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    275:275:android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    296:336:android.content.Intent getIntent() -> getIntent
    340:340:android.app.Activity getActivity() -> getActivity
    344:352:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    356:363:void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    373:373:android.content.Intent createChooserIntent() -> createChooserIntent
    386:387:void startChooser() -> startChooser
    396:397:android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    407:407:android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    418:419:android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    431:432:android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    447:452:android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    466:471:android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    486:498:android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    510:514:android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    525:529:android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    540:541:android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    553:554:android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    565:569:android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    580:581:android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    593:594:android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    605:609:android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    620:621:android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    632:633:android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    672:672:android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    691:692:boolean isShareIntent() -> isShareIntent
    704:704:boolean isSingleShare() -> isSingleShare
    715:715:boolean isMultipleShare() -> isMultipleShare
    725:725:java.lang.String getType() -> getType
    735:735:java.lang.CharSequence getText() -> getText
    749:758:java.lang.String getHtmlText() -> getHtmlText
    773:773:android.net.Uri getStream() -> getStream
    786:795:android.net.Uri getStream(int) -> getStream
    807:813:int getStreamCount() -> getStreamCount
    823:823:java.lang.String[] getEmailTo() -> getEmailTo
    833:833:java.lang.String[] getEmailCc() -> getEmailCc
    843:843:java.lang.String[] getEmailBcc() -> getEmailBcc
    853:853:java.lang.String getSubject() -> getSubject
    870:870:java.lang.String getCallingPackage() -> getCallingPackage
    887:887:android.content.ComponentName getCallingActivity() -> getCallingActivity
    901:909:android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    923:931:android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    945:953:java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    87:88:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    91:93:java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    98:120:void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    125:130:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    133:133:boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    139:139:java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    144:144:boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    29:40:void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    23:23:java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    137:137:android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    150:150:android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    161:162:android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    178:186:android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    197:215:android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    226:226:android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    238:249:android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    256:256:int getIntentCount() -> getIntentCount
    270:270:android.content.Intent getIntent(int) -> getIntent
    282:282:android.content.Intent editIntentAt(int) -> editIntentAt
    289:289:java.util.Iterator iterator() -> iterator
    301:302:void startActivities() -> startActivities
    316:330:void startActivities(android.os.Bundle) -> startActivities
    344:344:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    361:371:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    382:391:android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    84:86:android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    93:96:android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    104:107:android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    29:29:android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    28:28:android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    103:107:void setUpdateThrottle(long) -> setUpdateThrottle
    111:116:void onForceLoad() -> onForceLoad
    136:166:boolean cancelLoad() -> cancelLoad
    174:174:void onCanceled(java.lang.Object) -> onCanceled
    177:197:void executePendingTask() -> executePendingTask
    200:208:void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    211:226:void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    242:242:java.lang.Object onLoadInBackground() -> onLoadInBackground
    256:264:void waitForLoader() -> waitForLoader
    268:285:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    51:53:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    61:65:void onPostExecute(java.lang.Object) -> onPostExecute
    71:75:void onCancelled() -> onCancelled
    79:81:void run() -> run
    40:40:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    40:40:java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    57:57:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    89:97:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    28:29:void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    26:27:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    49:56:android.database.Cursor loadInBackground() -> loadInBackground
    62:79:void deliverResult(android.database.Cursor) -> deliverResult
    117:123:void onStartLoading() -> onStartLoading
    131:132:void onStopLoading() -> onStopLoading
    136:139:void onCanceled(android.database.Cursor) -> onCanceled
    143:152:void onReset() -> onReset
    155:155:android.net.Uri getUri() -> getUri
    159:160:void setUri(android.net.Uri) -> setUri
    163:163:java.lang.String[] getProjection() -> getProjection
    167:168:void setProjection(java.lang.String[]) -> setProjection
    171:171:java.lang.String getSelection() -> getSelection
    175:176:void setSelection(java.lang.String) -> setSelection
    179:179:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    183:184:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    187:187:java.lang.String getSortOrder() -> getSortOrder
    191:192:void setSortOrder(java.lang.String) -> setSortOrder
    196:206:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    35:35:java.lang.Object loadInBackground() -> loadInBackground
    35:35:void onCanceled(java.lang.Object) -> onCanceled
    35:35:void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    98:98:boolean onCreate() -> onCreate
    103:114:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    130:131:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    138:162:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    168:179:java.lang.String getType(android.net.Uri) -> getType
    184:184:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    189:189:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    195:196:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    202:204:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    213:228:android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    239:275:android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    412:432:int modeToMode(java.lang.String) -> modeToMode
    436:442:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    446:448:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    452:454:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    326:339:void addRoot(java.lang.String,java.io.File) -> addRoot
    345:375:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    381:403:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    221:221:android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    249:249:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    266:266:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    39:42:android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    51:53:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    58:61:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    68:68:android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    72:72:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    79:79:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    24:24:android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    28:28:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    24:24:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    103:106:void deliverResult(java.lang.Object) -> deliverResult
    112:112:android.content.Context getContext() -> getContext
    119:119:int getId() -> getId
    130:135:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    143:150:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    158:158:boolean isStarted() -> isStarted
    167:167:boolean isAbandoned() -> isAbandoned
    176:176:boolean isReset() -> isReset
    195:199:void startLoading() -> startLoading
    207:207:void onStartLoading() -> onStartLoading
    218:219:void forceLoad() -> forceLoad
    226:226:void onForceLoad() -> onForceLoad
    243:245:void stopLoading() -> stopLoading
    254:254:void onStopLoading() -> onStopLoading
    262:264:void abandon() -> abandon
    276:276:void onAbandon() -> onAbandon
    291:297:void reset() -> reset
    306:306:void onReset() -> onReset
    314:317:boolean takeContentChanged() -> takeContentChanged
    328:329:void commitContentChanged() -> commitContentChanged
    339:342:void rollbackContentChanged() -> rollbackContentChanged
    353:361:void onContentChanged() -> onContentChanged
    368:371:java.lang.String dataToString(java.lang.Object) -> dataToString
    376:381:java.lang.String toString() -> toString
    393:404:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    58:58:boolean deliverSelfNotifications() -> deliverSelfNotifications
    63:64:void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    100:105:android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    134:152:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    164:188:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    201:268:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    277:280:void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    284:300:void executePendingBroadcasts() -> executePendingBroadcasts
    46:46:void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    114:121:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    59:65:java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    106:107:void init() -> init
    111:112:void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    150:154:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    157:160:java.lang.Object postResult(java.lang.Object) -> postResult
    169:169:android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    197:197:void onPreExecute() -> onPreExecute
    213:213:void onPostExecute(java.lang.Object) -> onPostExecute
    226:226:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    244:245:void onCancelled(java.lang.Object) -> onCancelled
    260:260:void onCancelled() -> onCancelled
    273:273:boolean isCancelled() -> isCancelled
    306:306:boolean cancel(boolean) -> cancel
    321:321:java.lang.Object get() -> get
    341:341:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    371:371:android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    406:425:android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    433:434:void execute(java.lang.Runnable) -> execute
    451:455:void publishProgress(java.lang.Object[]) -> publishProgress
    458:464:void finish(java.lang.Object) -> finish
    47:47:java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    47:47:java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    47:47:void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    47:47:void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    58:58:java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    120:123:java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    131:145:void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    470:480:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    89:89:android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    89:89:android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    81:101:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    113:132:boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    35:42:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    50:56:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    71:72:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    39:39:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    48:49:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    26:27:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    54:66:android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    141:141:android.view.Display getDisplay(int) -> getDisplay
    146:146:android.view.Display[] getDisplays() -> getDisplays
    151:151:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    114:118:android.view.Display getDisplay(int) -> getDisplay
    123:123:android.view.Display[] getDisplays() -> getDisplays
    128:128:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    24:24:java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    28:28:android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    32:32:android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    36:36:android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    112:127:boolean isMediaKey(int) -> isMediaKey
    190:190:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    200:200:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    204:205:void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    208:209:void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    212:217:android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    221:227:void reportPlayingChanged() -> reportPlayingChanged
    230:236:void reportTransportControlsChanged() -> reportTransportControlsChanged
    239:244:void pushControllerState() -> pushControllerState
    247:250:void refreshState() -> refreshState
    258:264:void startPlaying() -> startPlaying
    272:278:void pausePlaying() -> pausePlaying
    286:292:void stopPlaying() -> stopPlaying
    296:296:long getDuration() -> getDuration
    301:301:long getCurrentPosition() -> getCurrentPosition
    306:307:void seekTo(long) -> seekTo
    311:311:boolean isPlaying() -> isPlaying
    316:316:int getBufferPercentage() -> getBufferPercentage
    332:332:int getTransportControlFlags() -> getTransportControlFlags
    341:342:void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    61:62:void handleKey(android.view.KeyEvent) -> handleKey
    65:66:void handleAudioFocusChange(int) -> handleAudioFocusChange
    70:70:long getPlaybackPosition() -> getPlaybackPosition
    75:76:void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    133:133:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    137:137:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    142:142:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    147:147:boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    101:101:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    105:108:void destroy() -> destroy
    111:117:void windowAttached() -> windowAttached
    120:128:void gainFocus() -> gainFocus
    131:136:void takeAudioFocus() -> takeAudioFocus
    139:146:void startPlaying() -> startPlaying
    150:150:long onGetPlaybackPosition() -> onGetPlaybackPosition
    155:156:void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    159:164:void refreshState(boolean,long,int) -> refreshState
    167:172:void pausePlaying() -> pausePlaying
    175:180:void stopPlaying() -> stopPlaying
    183:187:void dropAudioFocus() -> dropAudioFocus
    190:196:void loseFocus() -> loseFocus
    199:206:void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    45:46:void onWindowAttached() -> onWindowAttached
    49:50:void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    56:58:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    64:69:void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    75:76:void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    76:76:int onGetBufferPercentage() -> onGetBufferPercentage
    98:98:int onGetTransportControlFlags() -> onGetTransportControlFlags
    127:145:boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    164:164:boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    188:201:void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    30:30:void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    38:38:void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    103:103:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    114:115:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    40:54:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    62:62:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    70:70:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    77:77:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    35:54:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    37:58:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    26:26:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    136:137:void clearThreadStatsTag() -> clearThreadStatsTag
    145:145:int getThreadStatsTag() -> getThreadStatsTag
    156:157:void incrementOperationCount(int) -> incrementOperationCount
    167:168:void incrementOperationCount(int,int) -> incrementOperationCount
    182:183:void setThreadStatsTag(int) -> setThreadStatsTag
    194:195:void tagSocket(java.net.Socket) -> tagSocket
    201:202:void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    54:55:void clearThreadStatsTag() -> clearThreadStatsTag
    59:59:int getThreadStatsTag() -> getThreadStatsTag
    64:64:void incrementOperationCount(int) -> incrementOperationCount
    68:68:void incrementOperationCount(int,int) -> incrementOperationCount
    72:73:void setThreadStatsTag(int) -> setThreadStatsTag
    77:77:void tagSocket(java.net.Socket) -> tagSocket
    81:81:void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    48:48:android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    45:45:java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    87:88:void clearThreadStatsTag() -> clearThreadStatsTag
    92:92:int getThreadStatsTag() -> getThreadStatsTag
    97:98:void incrementOperationCount(int) -> incrementOperationCount
    102:103:void incrementOperationCount(int,int) -> incrementOperationCount
    107:108:void setThreadStatsTag(int) -> setThreadStatsTag
    112:113:void tagSocket(java.net.Socket) -> tagSocket
    117:118:void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    29:30:void clearThreadStatsTag() -> clearThreadStatsTag
    33:33:int getThreadStatsTag() -> getThreadStatsTag
    37:38:void incrementOperationCount(int) -> incrementOperationCount
    41:42:void incrementOperationCount(int,int) -> incrementOperationCount
    45:46:void setThreadStatsTag(int) -> setThreadStatsTag
    49:50:void tagSocket(java.net.Socket) -> tagSocket
    53:54:void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    24:24:android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    234:234:android.support.v4.text.BidiFormatter getInstance() -> getInstance
    243:243:android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    252:252:android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    270:270:boolean isRtlContext() -> isRtlContext
    278:278:boolean getStereoReset() -> getStereoReset
    297:305:java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    324:332:java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    343:343:boolean isRtl(java.lang.String) -> isRtl
    374:391:java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    403:403:java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    416:416:java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    427:427:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    437:437:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    462:462:int getExitDir(java.lang.String) -> getExitDir
    479:479:int getEntryDir(java.lang.String) -> getEntryDir
    78:78:boolean access$000(java.util.Locale) -> access$000
    78:78:android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    78:78:android.support.v4.text.BidiFormatter access$200() -> access$200
    78:78:android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    165:168:void initialize(boolean) -> initialize
    175:180:android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    191:192:android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    196:196:android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    203:207:android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    567:649:int getEntryDir() -> getEntryDir
    665:713:int getExitDir() -> getExitDir
    724:724:byte getCachedDirectionality(char) -> getCachedDirectionality
    737:753:byte dirTypeForward() -> dirTypeForward
    767:783:byte dirTypeBackward() -> dirTypeBackward
    793:809:byte skipTagForward() -> skipTagForward
    822:841:byte skipTagBackward() -> skipTagBackward
    850:851:byte skipEntityForward() -> skipEntityForward
    865:877:byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    70:70:java.lang.String getScript(java.lang.String) -> getScript
    96:96:java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    31:31:java.lang.String getScript(java.lang.String) -> getScript
    36:36:java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    43:43:java.lang.String getScript(java.lang.String) -> getScript
    48:48:java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    48:60:java.lang.String getScript(java.lang.String) -> getScript
    65:77:java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    28:28:int access$100(int) -> access$100
    28:28:int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    125:125:boolean isRtl(char[],int,int) -> isRtl
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    162:162:boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    250:251:boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    31:59:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    73:84:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    100:107:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    61:61:java.io.File getBaseFile() -> getBaseFile
    68:70:void delete() -> delete
    88:112:java.io.FileOutputStream startWrite() -> startWrite
    122:131:void finishWrite(java.io.FileOutputStream) -> finishWrite
    139:149:void failWrite(java.io.FileOutputStream) -> failWrite
    164:168:java.io.FileInputStream openRead() -> openRead
    176:199:byte[] readFully() -> readFully
    205:211:boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    55:63:android.support.v4.util.LongSparseArray clone() -> clone
    71:71:java.lang.Object get(long) -> get
    80:85:java.lang.Object get(long,java.lang.Object) -> get
    93:101:void delete(long) -> delete
    107:108:void remove(long) -> remove
    114:118:void removeAt(int) -> removeAt
    123:146:void gc() -> gc
    154:198:void put(long,java.lang.Object) -> put
    205:209:int size() -> size
    218:222:long keyAt(int) -> keyAt
    232:236:java.lang.Object valueAt(int) -> valueAt
    245:250:void setValueAt(int,java.lang.Object) -> setValueAt
    258:262:int indexOfKey(long) -> indexOfKey
    274:282:int indexOfValue(java.lang.Object) -> indexOfValue
    289:298:void clear() -> clear
    305:332:void append(long,java.lang.Object) -> append
    335:351:int binarySearch(long[],int,int,long) -> binarySearch
    355:359:int idealByteArraySize(int) -> idealByteArraySize
    363:363:int idealLongArraySize(int) -> idealLongArraySize
    24:24:java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    62:105:java.lang.Object get(java.lang.Object) -> get
    116:135:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    149:169:void trimToSize(int) -> trimToSize
    177:193:java.lang.Object remove(java.lang.Object) -> remove
    211:211:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    229:229:java.lang.Object create(java.lang.Object) -> create
    233:237:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    248:248:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    255:256:void evictAll() -> evictAll
    264:264:int size() -> size
    273:273:int maxSize() -> maxSize
    280:280:int hitCount() -> hitCount
    288:288:int missCount() -> missCount
    295:295:int createCount() -> createCount
    302:302:int putCount() -> putCount
    309:309:int evictionCount() -> evictionCount
    317:317:java.util.Map snapshot() -> snapshot
    321:323:java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    52:52:java.lang.Object get(int) -> get
    60:65:java.lang.Object get(int,java.lang.Object) -> get
    73:81:void delete(int) -> delete
    87:88:void remove(int) -> remove
    94:98:void removeAt(int) -> removeAt
    107:111:void removeAtRange(int,int) -> removeAtRange
    116:138:void gc() -> gc
    146:190:void put(int,java.lang.Object) -> put
    197:201:int size() -> size
    210:214:int keyAt(int) -> keyAt
    223:227:java.lang.Object valueAt(int) -> valueAt
    236:241:void setValueAt(int,java.lang.Object) -> setValueAt
    249:253:int indexOfKey(int) -> indexOfKey
    265:273:int indexOfValue(java.lang.Object) -> indexOfValue
    280:289:void clear() -> clear
    296:323:void append(int,java.lang.Object) -> append
    326:342:int binarySearch(int[],int,int,int) -> binarySearch
    346:350:int idealByteArraySize(int) -> idealByteArraySize
    354:354:int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    39:48:int accumField(int,int,boolean,int) -> accumField
    53:72:int printField(char[],int,char,int,boolean,int) -> printField
    76:143:int formatDurationLocked(long,int) -> formatDurationLocked
    148:152:void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    156:160:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    164:165:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    169:174:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    318:318:java.lang.Object getBridge() -> getBridge
    336:337:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    358:359:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    379:379:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    399:400:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    419:420:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    438:439:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    462:462:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    480:480:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    500:500:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    122:122:java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    127:127:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    172:172:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    179:180:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    185:187:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    192:193:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    198:198:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    204:205:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    210:211:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    132:132:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    137:138:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    142:144:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    148:149:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    154:154:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    159:160:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    164:165:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    217:217:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    275:280:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    286:286:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    228:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    233:235:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    239:240:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    245:245:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    250:251:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    255:256:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    260:262:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    267:267:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    57:57:java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    62:62:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    68:68:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    75:75:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    81:81:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    87:87:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    92:92:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    98:98:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    104:104:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    109:109:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    115:115:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    42:42:java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    46:46:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    87:87:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    92:93:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    96:98:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    102:103:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    112:113:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    117:118:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    49:49:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    54:55:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    59:60:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    64:65:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    70:70:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    75:76:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    80:81:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    47:47:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    99:99:java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    104:104:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    51:51:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    56:57:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    61:62:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    66:67:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    72:72:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    77:78:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    82:83:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    87:87:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    92:92:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    86:86:android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    109:109:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    121:121:boolean overridesItemVisibility() -> overridesItemVisibility
    135:135:boolean isVisible() -> isVisible
    145:148:void refreshVisibility() -> refreshVisibility
    182:182:boolean onPerformDefaultAction() -> onPerformDefaultAction
    195:195:boolean hasSubMenu() -> hasSubMenu
    208:208:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    217:220:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    226:227:void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    236:242:void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    526:526:boolean isLongpressEnabled() -> isLongpressEnabled
    538:538:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    551:552:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    562:563:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    166:182:void init(android.content.Context) -> init
    192:193:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    205:206:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    212:212:boolean isLongpressEnabled() -> isLongpressEnabled
    224:405:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    409:422:void cancel() -> cancel
    425:435:void cancelTaps() -> cancelTaps
    439:449:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    453:457:void dispatchLongPress() -> dispatchLongPress
    56:56:android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    56:56:android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    56:56:void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    56:56:android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    56:56:boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    56:56:boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    113:136:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    470:470:boolean isLongpressEnabled() -> isLongpressEnabled
    475:475:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    480:481:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    485:486:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    132:133:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    162:163:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    186:187:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    201:201:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    40:40:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    46:47:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    52:53:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    58:59:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    65:65:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    71:72:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    77:79:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    83:84:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    26:26:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    31:32:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    36:37:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    40:41:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    176:176:int normalizeMetaState(int) -> normalizeMetaState
    180:180:boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    184:184:boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    188:188:boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    192:192:boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    196:197:void startTracking(android.view.KeyEvent) -> startTracking
    200:200:boolean isTracking(android.view.KeyEvent) -> isTracking
    204:204:java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    209:209:boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    55:67:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    73:79:int normalizeMetaState(int) -> normalizeMetaState
    84:89:boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    94:94:boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    99:99:void startTracking(android.view.KeyEvent) -> startTracking
    103:103:boolean isTracking(android.view.KeyEvent) -> isTracking
    108:108:java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    114:114:boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    121:122:void startTracking(android.view.KeyEvent) -> startTracking
    126:126:boolean isTracking(android.view.KeyEvent) -> isTracking
    131:131:java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    137:137:boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    147:147:int normalizeMetaState(int) -> normalizeMetaState
    152:152:boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    157:157:boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    25:25:java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    30:30:boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    34:35:void startTracking(android.view.KeyEvent) -> startTracking
    38:38:boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    26:26:int normalizeMetaState(int) -> normalizeMetaState
    30:30:boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    34:34:boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    147:147:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    162:162:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    177:178:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    192:193:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    201:201:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    211:211:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    222:223:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    231:232:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    43:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    48:48:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    53:54:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    58:59:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    63:63:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    68:68:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    74:74:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    79:79:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    86:86:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    91:91:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    96:97:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    101:102:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    106:106:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    111:111:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    116:117:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    121:122:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    24:24:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    28:28:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    32:33:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    36:37:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    40:40:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    44:44:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    48:49:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    53:54:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    34:35:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    268:273:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    287:290:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    309:312:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    322:325:android.view.View getActionView(android.view.MenuItem) -> getActionView
    344:349:android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    361:367:android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    383:386:boolean expandActionView(android.view.MenuItem) -> expandActionView
    402:405:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    418:421:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    435:438:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    117:117:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    121:121:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    126:126:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    131:131:android.view.View getActionView(android.view.MenuItem) -> getActionView
    136:136:boolean expandActionView(android.view.MenuItem) -> expandActionView
    141:141:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    146:146:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    151:151:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    161:162:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    166:166:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    171:171:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    176:176:android.view.View getActionView(android.view.MenuItem) -> getActionView
    181:181:boolean expandActionView(android.view.MenuItem) -> expandActionView
    186:186:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    191:191:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    196:196:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    203:203:boolean expandActionView(android.view.MenuItem) -> expandActionView
    208:208:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    213:213:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    219:227:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    231:231:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    236:236:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    27:28:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    31:31:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    35:35:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    39:39:android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    24:24:boolean expandActionView(android.view.MenuItem) -> expandActionView
    28:28:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    32:32:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    37:37:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    60:60:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    65:65:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    183:183:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    191:191:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    201:201:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    210:210:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    219:219:float getX(android.view.MotionEvent,int) -> getX
    228:228:float getY(android.view.MotionEvent,int) -> getY
    236:236:int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    43:47:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    51:55:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    59:62:float getX(android.view.MotionEvent,int) -> getX
    66:69:float getY(android.view.MotionEvent,int) -> getY
    73:73:int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    83:83:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    87:87:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    91:91:float getX(android.view.MotionEvent,int) -> getX
    95:95:float getY(android.view.MotionEvent,int) -> getY
    99:99:int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    26:26:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    29:29:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    32:32:float getX(android.view.MotionEvent,int) -> getX
    35:35:float getY(android.view.MotionEvent,int) -> getY
    38:38:int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    95:96:void startUpdate(android.view.ViewGroup) -> startUpdate
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    124:125:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    137:138:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    148:149:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    159:159:void startUpdate(android.view.View) -> startUpdate
    175:175:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    192:192:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    207:207:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    219:219:void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    239:239:android.os.Parcelable saveState() -> saveState
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    268:268:int getItemPosition(java.lang.Object) -> getItemPosition
    276:277:void notifyDataSetChanged() -> notifyDataSetChanged
    285:286:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    294:295:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    307:307:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    318:318:float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    129:132:void setTabIndicatorColor(int) -> setTabIndicatorColor
    140:141:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    147:147:int getTabIndicatorColor() -> getTabIndicatorColor
    152:156:void setPadding(int,int,int,int) -> setPadding
    160:164:void setTextSpacing(int) -> setTextSpacing
    168:172:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    176:180:void setBackgroundColor(int) -> setBackgroundColor
    184:188:void setBackgroundResource(int) -> setBackgroundResource
    197:200:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    210:210:boolean getDrawFullUnderline() -> getDrawFullUnderline
    215:215:int getMinHeight() -> getMinHeight
    220:252:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    257:273:void onDraw(android.graphics.Canvas) -> onDraw
    277:293:void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    106:107:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    114:115:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    108:109:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    176:178:void setTextSpacing(int) -> setTextSpacing
    184:184:int getTextSpacing() -> getTextSpacing
    193:197:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    206:211:void setTextColor(int) -> setTextColor
    224:227:void setTextSize(int,float) -> setTextSize
    236:238:void setGravity(int) -> setGravity
    242:257:void onAttachedToWindow() -> onAttachedToWindow
    261:268:void onDetachedFromWindow() -> onDetachedFromWindow
    271:306:void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    310:313:void requestLayout() -> requestLayout
    316:330:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    333:418:void updateTextPositions(int,float,boolean) -> updateTextPositions
    422:451:void onMeasure(int,int) -> onMeasure
    455:459:void onLayout(boolean,int,int,int,int) -> onLayout
    462:467:int getMinHeight() -> getMinHeight
    45:45:float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    476:481:void onPageScrolled(int,float,int) -> onPageScrolled
    485:492:void onPageSelected(int) -> onPageSelected
    496:497:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    501:502:void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    506:510:void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    88:89:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    94:95:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    28:29:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    42:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    91:91:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    44:44:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    58:58:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    26:26:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    29:29:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    451:451:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    462:462:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    475:475:int getOverScrollMode(android.view.View) -> getOverScrollMode
    491:492:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    528:529:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    561:562:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    597:598:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    612:613:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    624:624:boolean hasTransientState(android.view.View) -> hasTransientState
    635:636:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    648:649:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    666:667:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    680:681:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    697:698:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    713:713:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    729:730:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    747:747:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    774:774:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    785:785:float getAlpha(android.view.View) -> getAlpha
    828:829:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    848:848:int getLayerType(android.view.View) -> getLayerType
    859:859:int getLabelFor(android.view.View) -> getLabelFor
    870:871:void setLabelFor(android.view.View,int) -> setLabelFor
    904:905:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    918:918:int getLayoutDirection(android.view.View) -> getLayoutDirection
    938:939:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    950:950:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    963:963:boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    172:172:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    175:175:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    178:178:int getOverScrollMode(android.view.View) -> getOverScrollMode
    182:182:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    185:185:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    188:188:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    191:191:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    194:194:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    197:197:boolean hasTransientState(android.view.View) -> hasTransientState
    201:201:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    203:204:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    206:207:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    209:210:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    212:213:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    215:215:long getFrameTime() -> getFrameTime
    218:218:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    222:222:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    224:224:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    227:227:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    230:230:float getAlpha(android.view.View) -> getAlpha
    234:234:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    236:236:int getLayerType(android.view.View) -> getLayerType
    239:239:int getLabelFor(android.view.View) -> getLabelFor
    243:243:void setLabelFor(android.view.View,int) -> setLabelFor
    246:246:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    250:250:int getLayoutDirection(android.view.View) -> getLayoutDirection
    256:256:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    260:260:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    265:269:boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    276:276:boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    283:283:int getOverScrollMode(android.view.View) -> getOverScrollMode
    287:288:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    294:294:long getFrameTime() -> getFrameTime
    298:298:float getAlpha(android.view.View) -> getAlpha
    302:303:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    306:306:int getLayerType(android.view.View) -> getLayerType
    312:315:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    321:321:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    325:325:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    329:330:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    333:334:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    337:338:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    341:342:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    348:348:boolean hasTransientState(android.view.View) -> hasTransientState
    352:353:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    356:357:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    360:361:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    364:365:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    368:369:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    372:372:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    376:377:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    380:380:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    384:388:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    393:393:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    401:401:int getLabelFor(android.view.View) -> getLabelFor
    406:407:void setLabelFor(android.view.View,int) -> setLabelFor
    411:412:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    416:416:int getLayoutDirection(android.view.View) -> getLayoutDirection
    421:422:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    24:24:boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    23:23:int getOverScrollMode(android.view.View) -> getOverScrollMode
    27:28:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    25:25:long getFrameTime() -> getFrameTime
    29:29:float getAlpha(android.view.View) -> getAlpha
    33:34:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    37:37:int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    30:30:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    34:34:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    38:39:void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    42:43:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    46:47:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    50:51:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    29:29:boolean hasTransientState(android.view.View) -> hasTransientState
    33:34:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    37:38:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    42:43:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    46:47:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    50:51:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    54:54:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    58:59:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    62:62:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    66:66:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    70:70:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    28:28:int getLabelFor(android.view.View) -> getLabelFor
    32:33:void setLabelFor(android.view.View,int) -> setLabelFor
    36:37:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    40:40:int getLayoutDirection(android.view.View) -> getLayoutDirection
    44:45:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    26:26:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    99:99:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    119:120:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    51:52:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    59:59:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    40:40:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    45:45:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    27:28:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    29:29:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    354:379:void initViewPager() -> initViewPager
    383:385:void onDetachedFromWindow() -> onDetachedFromWindow
    388:400:void setScrollState(int) -> setScrollState
    408:451:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    454:462:void removeNonDecorViews() -> removeNonDecorViews
    470:470:android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    474:475:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    478:478:int getClientWidth() -> getClientWidth
    489:491:void setCurrentItem(int) -> setCurrentItem
    500:502:void setCurrentItem(int,boolean) -> setCurrentItem
    505:505:int getCurrentItem() -> getCurrentItem
    509:510:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    513:553:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    557:583:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    592:593:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    608:620:void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    623:638:void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    642:644:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    654:656:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    667:667:int getOffscreenPageLimit() -> getOffscreenPageLimit
    688:697:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    708:715:void setPageMargin(int) -> setPageMargin
    723:723:int getPageMargin() -> getPageMargin
    732:736:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    744:745:void setPageMarginDrawable(int) -> setPageMarginDrawable
    749:749:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    754:759:void drawableStateChanged() -> drawableStateChanged
    766:768:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    778:779:void smoothScrollTo(int,int) -> smoothScrollTo
    789:827:void smoothScrollTo(int,int,int) -> smoothScrollTo
    830:839:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    845:911:void dataSetChanged() -> dataSetChanged
    914:915:void populate() -> populate
    918:1103:void populate(int) -> populate
    1106:1119:void sortChildDrawingOrder() -> sortChildDrawingOrder
    1122:1205:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    1261:1267:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1272:1288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1292:1314:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1318:1323:void removeView(android.view.View) -> removeView
    1326:1332:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    1337:1343:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1347:1353:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    1358:1360:void onAttachedToWindow() -> onAttachedToWindow
    1369:1455:void onMeasure(int,int) -> onMeasure
    1459:1465:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1468:1494:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    1498:1603:void onLayout(boolean,int,int,int,int) -> onLayout
    1607:1628:void computeScroll() -> computeScroll
    1631:1655:boolean pageScrolled(int) -> pageScrolled
    1672:1733:void onPageScrolled(int,float,int) -> onPageScrolled
    1736:1764:void completeScroll(boolean) -> completeScroll
    1767:1767:boolean isGutterDrag(float,float) -> isGutterDrag
    1771:1777:void enableLayers(boolean) -> enableLayers
    1787:1918:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1923:2039:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2043:2086:boolean performDrag(float) -> performDrag
    2094:2132:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    2137:2152:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2157:2195:void draw(android.graphics.Canvas) -> draw
    2199:2239:void onDraw(android.graphics.Canvas) -> onDraw
    2259:2275:boolean beginFakeDrag() -> beginFakeDrag
    2285:2306:void endFakeDrag() -> endFakeDrag
    2316:2354:void fakeDragBy(float) -> fakeDragBy
    2366:2366:boolean isFakeDragging() -> isFakeDragging
    2370:2382:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    2385:2392:void endDrag() -> endDrag
    2395:2407:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    2410:2421:boolean canScrollHorizontally(int) -> canScrollHorizontally
    2437:2456:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2462:2462:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2474:2496:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2500:2562:boolean arrowScroll(int) -> arrowScroll
    2566:2588:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    2592:2596:boolean pageLeft() -> pageLeft
    2600:2604:boolean pageRight() -> pageRight
    2612:2649:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2659:2668:void addTouchables(java.util.ArrayList) -> addTouchables
    2679:2700:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2706:2723:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2728:2728:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2733:2733:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2738:2738:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2743:2743:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    84:84:void access$000(android.support.v4.view.ViewPager,int) -> access$000
    84:84:android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    84:84:int access$300(android.support.v4.view.ViewPager) -> access$300
    84:84:int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    119:119:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    116:116:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    125:126:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    243:245:void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    2750:2760:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2764:2773:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2777:2794:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2798:2798:boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    2805:2806:void onChanged() -> onChanged
    2809:2810:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1224:1227:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1231:1231:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    1240:1240:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1244:1244:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    1237:1237:java.lang.Object[] newArray(int) -> newArray
    1237:1237:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    296:296:void onPageScrolled(int,float,int) -> onPageScrolled
    301:301:void onPageSelected(int) -> onPageSelected
    306:306:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    2868:2873:int compare(android.view.View,android.view.View) -> compare
    2865:2865:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    96:96:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    56:56:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    42:48:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    29:29:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    194:194:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    206:207:void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    216:216:android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    233:233:android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    56:57:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    61:61:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    66:66:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    39:39:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    43:43:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    48:48:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    28:28:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    32:33:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    36:36:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    144:144:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    156:156:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    167:167:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    186:186:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    196:196:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    31:31:android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    83:83:java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    94:94:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    101:101:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    108:108:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    115:115:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    120:120:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    86:87:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    50:50:java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    55:55:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    60:60:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    65:65:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    70:70:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    74:74:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    36:36:java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    46:46:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    52:52:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    58:58:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    63:63:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    67:67:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    39:40:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    1041:1044:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    1061:1061:java.lang.Object getInfo() -> getInfo
    1072:1072:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1086:1086:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1096:1096:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1107:1107:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1116:1117:void setSource(android.view.View) -> setSource
    1139:1140:void setSource(android.view.View,int) -> setSource
    1154:1154:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1172:1172:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    1181:1181:int getWindowId() -> getWindowId
    1190:1190:int getChildCount() -> getChildCount
    1207:1207:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1222:1223:void addChild(android.view.View) -> addChild
    1240:1241:void addChild(android.view.View,int) -> addChild
    1253:1253:int getActions() -> getActions
    1268:1269:void addAction(int) -> addAction
    1284:1284:boolean performAction(int) -> performAction
    1301:1301:boolean performAction(int,android.os.Bundle) -> performAction
    1317:1318:void setMovementGranularities(int) -> setMovementGranularities
    1326:1326:int getMovementGranularities() -> getMovementGranularities
    1343:1350:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    1364:1364:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    1379:1380:void setParent(android.view.View) -> setParent
    1402:1403:void setParent(android.view.View,int) -> setParent
    1411:1412:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1426:1427:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    1435:1436:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1450:1451:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    1459:1459:boolean isCheckable() -> isCheckable
    1474:1475:void setCheckable(boolean) -> setCheckable
    1483:1483:boolean isChecked() -> isChecked
    1498:1499:void setChecked(boolean) -> setChecked
    1507:1507:boolean isFocusable() -> isFocusable
    1522:1523:void setFocusable(boolean) -> setFocusable
    1531:1531:boolean isFocused() -> isFocused
    1546:1547:void setFocused(boolean) -> setFocused
    1555:1555:boolean isVisibleToUser() -> isVisibleToUser
    1571:1572:void setVisibleToUser(boolean) -> setVisibleToUser
    1580:1580:boolean isAccessibilityFocused() -> isAccessibilityFocused
    1596:1597:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    1605:1605:boolean isSelected() -> isSelected
    1620:1621:void setSelected(boolean) -> setSelected
    1629:1629:boolean isClickable() -> isClickable
    1644:1645:void setClickable(boolean) -> setClickable
    1653:1653:boolean isLongClickable() -> isLongClickable
    1668:1669:void setLongClickable(boolean) -> setLongClickable
    1677:1677:boolean isEnabled() -> isEnabled
    1692:1693:void setEnabled(boolean) -> setEnabled
    1701:1701:boolean isPassword() -> isPassword
    1716:1717:void setPassword(boolean) -> setPassword
    1725:1725:boolean isScrollable() -> isScrollable
    1740:1741:void setScrollable(boolean) -> setScrollable
    1749:1749:java.lang.CharSequence getPackageName() -> getPackageName
    1764:1765:void setPackageName(java.lang.CharSequence) -> setPackageName
    1773:1773:java.lang.CharSequence getClassName() -> getClassName
    1788:1789:void setClassName(java.lang.CharSequence) -> setClassName
    1797:1797:java.lang.CharSequence getText() -> getText
    1812:1813:void setText(java.lang.CharSequence) -> setText
    1821:1821:java.lang.CharSequence getContentDescription() -> getContentDescription
    1836:1837:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    1847:1848:void recycle() -> recycle
    1862:1863:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    1878:1878:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    1883:1883:int hashCode() -> hashCode
    1888:1905:boolean equals(java.lang.Object) -> equals
    1910:1949:java.lang.String toString() -> toString
    1953:1991:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    415:415:java.lang.Object obtain() -> obtain
    420:420:java.lang.Object obtain(android.view.View) -> obtain
    425:425:java.lang.Object obtain(java.lang.Object) -> obtain
    430:431:void addAction(java.lang.Object,int) -> addAction
    435:436:void addChild(java.lang.Object,android.view.View) -> addChild
    440:440:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    445:445:int getActions(java.lang.Object) -> getActions
    450:451:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    455:456:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    460:460:java.lang.Object getChild(java.lang.Object,int) -> getChild
    465:465:int getChildCount(java.lang.Object) -> getChildCount
    470:470:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    475:475:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    480:480:java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    485:485:java.lang.Object getParent(java.lang.Object) -> getParent
    490:490:java.lang.CharSequence getText(java.lang.Object) -> getText
    495:495:int getWindowId(java.lang.Object) -> getWindowId
    500:500:boolean isCheckable(java.lang.Object) -> isCheckable
    505:505:boolean isChecked(java.lang.Object) -> isChecked
    510:510:boolean isClickable(java.lang.Object) -> isClickable
    515:515:boolean isEnabled(java.lang.Object) -> isEnabled
    520:520:boolean isFocusable(java.lang.Object) -> isFocusable
    525:525:boolean isFocused(java.lang.Object) -> isFocused
    530:530:boolean isLongClickable(java.lang.Object) -> isLongClickable
    535:535:boolean isPassword(java.lang.Object) -> isPassword
    540:540:boolean isScrollable(java.lang.Object) -> isScrollable
    545:545:boolean isSelected(java.lang.Object) -> isSelected
    550:550:boolean performAction(java.lang.Object,int) -> performAction
    555:556:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    560:561:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    565:566:void setCheckable(java.lang.Object,boolean) -> setCheckable
    570:571:void setChecked(java.lang.Object,boolean) -> setChecked
    575:576:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    580:581:void setClickable(java.lang.Object,boolean) -> setClickable
    585:586:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    590:591:void setEnabled(java.lang.Object,boolean) -> setEnabled
    595:596:void setFocusable(java.lang.Object,boolean) -> setFocusable
    600:601:void setFocused(java.lang.Object,boolean) -> setFocused
    605:606:void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    610:611:void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    615:616:void setParent(java.lang.Object,android.view.View) -> setParent
    620:621:void setPassword(java.lang.Object,boolean) -> setPassword
    625:626:void setScrollable(java.lang.Object,boolean) -> setScrollable
    630:631:void setSelected(java.lang.Object,boolean) -> setSelected
    635:636:void setSource(java.lang.Object,android.view.View) -> setSource
    640:641:void setText(java.lang.Object,java.lang.CharSequence) -> setText
    645:646:void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    652:652:java.lang.Object obtain(android.view.View,int) -> obtain
    657:657:java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    662:662:java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    667:668:void addChild(java.lang.Object,android.view.View,int) -> addChild
    672:673:void setSource(java.lang.Object,android.view.View,int) -> setSource
    677:677:boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    682:683:void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    687:687:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    692:693:void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    697:697:boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    702:703:void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    707:707:int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    712:713:void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    720:720:java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    725:726:void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    103:103:java.lang.Object obtain() -> obtain
    108:108:java.lang.Object obtain(android.view.View) -> obtain
    113:113:java.lang.Object obtain(android.view.View,int) -> obtain
    118:118:java.lang.Object obtain(java.lang.Object) -> obtain
    124:124:void addAction(java.lang.Object,int) -> addAction
    129:129:void addChild(java.lang.Object,android.view.View) -> addChild
    134:134:void addChild(java.lang.Object,android.view.View,int) -> addChild
    138:138:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    143:143:int getActions(java.lang.Object) -> getActions
    149:149:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    154:154:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    158:158:java.lang.Object getChild(java.lang.Object,int) -> getChild
    163:163:int getChildCount(java.lang.Object) -> getChildCount
    168:168:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    173:173:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    178:178:java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    183:183:java.lang.Object getParent(java.lang.Object) -> getParent
    188:188:java.lang.CharSequence getText(java.lang.Object) -> getText
    193:193:int getWindowId(java.lang.Object) -> getWindowId
    198:198:boolean isCheckable(java.lang.Object) -> isCheckable
    203:203:boolean isChecked(java.lang.Object) -> isChecked
    208:208:boolean isClickable(java.lang.Object) -> isClickable
    213:213:boolean isEnabled(java.lang.Object) -> isEnabled
    218:218:boolean isFocusable(java.lang.Object) -> isFocusable
    223:223:boolean isFocused(java.lang.Object) -> isFocused
    228:228:boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    233:233:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    238:238:boolean isLongClickable(java.lang.Object) -> isLongClickable
    243:243:boolean isPassword(java.lang.Object) -> isPassword
    248:248:boolean isScrollable(java.lang.Object) -> isScrollable
    253:253:boolean isSelected(java.lang.Object) -> isSelected
    258:258:boolean performAction(java.lang.Object,int) -> performAction
    263:263:boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    269:269:void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    273:273:int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    279:279:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    284:284:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    289:289:void setCheckable(java.lang.Object,boolean) -> setCheckable
    294:294:void setChecked(java.lang.Object,boolean) -> setChecked
    299:299:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    304:304:void setClickable(java.lang.Object,boolean) -> setClickable
    309:309:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    314:314:void setEnabled(java.lang.Object,boolean) -> setEnabled
    319:319:void setFocusable(java.lang.Object,boolean) -> setFocusable
    324:324:void setFocused(java.lang.Object,boolean) -> setFocused
    329:329:void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    334:334:void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    339:339:void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    344:344:void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    349:349:void setParent(java.lang.Object,android.view.View) -> setParent
    354:354:void setPassword(java.lang.Object,boolean) -> setPassword
    359:359:void setScrollable(java.lang.Object,boolean) -> setScrollable
    364:364:void setSelected(java.lang.Object,boolean) -> setSelected
    369:369:void setSource(java.lang.Object,android.view.View) -> setSource
    374:374:void setSource(java.lang.Object,android.view.View,int) -> setSource
    378:378:java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    383:383:java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    389:389:void setText(java.lang.Object,java.lang.CharSequence) -> setText
    394:394:void recycle(java.lang.Object) -> recycle
    399:399:void setParent(java.lang.Object,android.view.View,int) -> setParent
    403:403:java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    409:409:void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    31:31:java.lang.Object obtain() -> obtain
    35:35:java.lang.Object obtain(android.view.View) -> obtain
    39:39:java.lang.Object obtain(java.lang.Object) -> obtain
    43:44:void addAction(java.lang.Object,int) -> addAction
    47:48:void addChild(java.lang.Object,android.view.View) -> addChild
    52:53:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    57:57:int getActions(java.lang.Object) -> getActions
    61:62:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    65:66:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    69:69:java.lang.Object getChild(java.lang.Object,int) -> getChild
    73:73:int getChildCount(java.lang.Object) -> getChildCount
    77:77:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    81:81:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    85:85:java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    89:89:java.lang.Object getParent(java.lang.Object) -> getParent
    93:93:java.lang.CharSequence getText(java.lang.Object) -> getText
    97:97:int getWindowId(java.lang.Object) -> getWindowId
    101:101:boolean isCheckable(java.lang.Object) -> isCheckable
    105:105:boolean isChecked(java.lang.Object) -> isChecked
    109:109:boolean isClickable(java.lang.Object) -> isClickable
    113:113:boolean isEnabled(java.lang.Object) -> isEnabled
    117:117:boolean isFocusable(java.lang.Object) -> isFocusable
    121:121:boolean isFocused(java.lang.Object) -> isFocused
    125:125:boolean isLongClickable(java.lang.Object) -> isLongClickable
    129:129:boolean isPassword(java.lang.Object) -> isPassword
    133:133:boolean isScrollable(java.lang.Object) -> isScrollable
    137:137:boolean isSelected(java.lang.Object) -> isSelected
    141:141:boolean performAction(java.lang.Object,int) -> performAction
    145:146:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    149:150:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    153:154:void setCheckable(java.lang.Object,boolean) -> setCheckable
    157:158:void setChecked(java.lang.Object,boolean) -> setChecked
    161:162:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    165:166:void setClickable(java.lang.Object,boolean) -> setClickable
    169:170:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    173:174:void setEnabled(java.lang.Object,boolean) -> setEnabled
    177:178:void setFocusable(java.lang.Object,boolean) -> setFocusable
    181:182:void setFocused(java.lang.Object,boolean) -> setFocused
    185:186:void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    189:190:void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    193:194:void setParent(java.lang.Object,android.view.View) -> setParent
    197:198:void setPassword(java.lang.Object,boolean) -> setPassword
    201:202:void setScrollable(java.lang.Object,boolean) -> setScrollable
    205:206:void setSelected(java.lang.Object,boolean) -> setSelected
    209:210:void setSource(java.lang.Object,android.view.View) -> setSource
    213:214:void setText(java.lang.Object,java.lang.CharSequence) -> setText
    217:218:void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    29:30:void addChild(java.lang.Object,android.view.View,int) -> addChild
    33:34:void setSource(java.lang.Object,android.view.View,int) -> setSource
    37:37:boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    41:42:void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    45:45:boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    49:50:void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    53:53:int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    57:57:java.lang.Object obtain(android.view.View,int) -> obtain
    61:61:java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    65:65:java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    69:70:void setParent(java.lang.Object,android.view.View,int) -> setParent
    73:73:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    77:78:void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    24:25:void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    28:28:java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    117:117:java.lang.Object getProvider() -> getProvider
    143:143:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    160:160:boolean performAction(int,int,android.os.Bundle) -> performAction
    179:179:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    47:47:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    52:52:boolean performAction(int,int,android.os.Bundle) -> performAction
    58:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    72:77:java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    39:39:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    38:38:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    41:41:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    49:49:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    55:55:boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    539:539:java.lang.Object getImpl() -> getImpl
    550:550:android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    560:560:android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    571:572:void setSource(android.view.View) -> setSource
    589:590:void setSource(android.view.View,int) -> setSource
    605:605:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    614:614:int getWindowId() -> getWindowId
    623:623:boolean isChecked() -> isChecked
    634:635:void setChecked(boolean) -> setChecked
    643:643:boolean isEnabled() -> isEnabled
    654:655:void setEnabled(boolean) -> setEnabled
    663:663:boolean isPassword() -> isPassword
    674:675:void setPassword(boolean) -> setPassword
    683:683:boolean isFullScreen() -> isFullScreen
    694:695:void setFullScreen(boolean) -> setFullScreen
    703:703:boolean isScrollable() -> isScrollable
    714:715:void setScrollable(boolean) -> setScrollable
    723:723:int getItemCount() -> getItemCount
    734:735:void setItemCount(int) -> setItemCount
    743:743:int getCurrentItemIndex() -> getCurrentItemIndex
    754:755:void setCurrentItemIndex(int) -> setCurrentItemIndex
    766:766:int getFromIndex() -> getFromIndex
    780:781:void setFromIndex(int) -> setFromIndex
    790:790:int getToIndex() -> getToIndex
    800:801:void setToIndex(int) -> setToIndex
    809:809:int getScrollX() -> getScrollX
    818:819:void setScrollX(int) -> setScrollX
    827:827:int getScrollY() -> getScrollY
    836:837:void setScrollY(int) -> setScrollY
    845:845:int getMaxScrollX() -> getMaxScrollX
    853:854:void setMaxScrollX(int) -> setMaxScrollX
    862:862:int getMaxScrollY() -> getMaxScrollY
    871:872:void setMaxScrollY(int) -> setMaxScrollY
    880:880:int getAddedCount() -> getAddedCount
    891:892:void setAddedCount(int) -> setAddedCount
    900:900:int getRemovedCount() -> getRemovedCount
    911:912:void setRemovedCount(int) -> setRemovedCount
    920:920:java.lang.CharSequence getClassName() -> getClassName
    931:932:void setClassName(java.lang.CharSequence) -> setClassName
    941:941:java.util.List getText() -> getText
    950:950:java.lang.CharSequence getBeforeText() -> getBeforeText
    961:962:void setBeforeText(java.lang.CharSequence) -> setBeforeText
    970:970:java.lang.CharSequence getContentDescription() -> getContentDescription
    981:982:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    990:990:android.os.Parcelable getParcelableData() -> getParcelableData
    1001:1002:void setParcelableData(android.os.Parcelable) -> setParcelableData
    1014:1015:void recycle() -> recycle
    1019:1019:int hashCode() -> hashCode
    1025:1042:boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    271:271:java.lang.Object obtain() -> obtain
    276:276:java.lang.Object obtain(java.lang.Object) -> obtain
    281:281:int getAddedCount(java.lang.Object) -> getAddedCount
    286:286:java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    291:291:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    296:296:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    301:301:int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    306:306:int getFromIndex(java.lang.Object) -> getFromIndex
    311:311:int getItemCount(java.lang.Object) -> getItemCount
    316:316:android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    321:321:int getRemovedCount(java.lang.Object) -> getRemovedCount
    326:326:int getScrollX(java.lang.Object) -> getScrollX
    331:331:int getScrollY(java.lang.Object) -> getScrollY
    336:336:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    342:342:java.util.List getText(java.lang.Object) -> getText
    347:347:int getToIndex(java.lang.Object) -> getToIndex
    352:352:int getWindowId(java.lang.Object) -> getWindowId
    357:357:boolean isChecked(java.lang.Object) -> isChecked
    362:362:boolean isEnabled(java.lang.Object) -> isEnabled
    367:367:boolean isFullScreen(java.lang.Object) -> isFullScreen
    372:372:boolean isPassword(java.lang.Object) -> isPassword
    377:377:boolean isScrollable(java.lang.Object) -> isScrollable
    382:383:void recycle(java.lang.Object) -> recycle
    387:388:void setAddedCount(java.lang.Object,int) -> setAddedCount
    392:393:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    397:398:void setChecked(java.lang.Object,boolean) -> setChecked
    402:403:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    407:408:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    412:413:void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    417:418:void setEnabled(java.lang.Object,boolean) -> setEnabled
    422:423:void setFromIndex(java.lang.Object,int) -> setFromIndex
    427:428:void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    432:433:void setItemCount(java.lang.Object,int) -> setItemCount
    437:438:void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    442:443:void setPassword(java.lang.Object,boolean) -> setPassword
    447:448:void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    452:453:void setScrollX(java.lang.Object,int) -> setScrollX
    457:458:void setScrollY(java.lang.Object,int) -> setScrollY
    462:463:void setScrollable(java.lang.Object,boolean) -> setScrollable
    467:468:void setSource(java.lang.Object,android.view.View) -> setSource
    472:473:void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    479:479:int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    484:484:int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    489:490:void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    494:495:void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    501:502:void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    84:84:java.lang.Object obtain() -> obtain
    88:88:java.lang.Object obtain(java.lang.Object) -> obtain
    92:92:int getAddedCount(java.lang.Object) -> getAddedCount
    96:96:java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    100:100:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    104:104:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    108:108:int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    112:112:int getFromIndex(java.lang.Object) -> getFromIndex
    116:116:int getItemCount(java.lang.Object) -> getItemCount
    120:120:int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    124:124:int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    128:128:android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    132:132:int getRemovedCount(java.lang.Object) -> getRemovedCount
    136:136:int getScrollX(java.lang.Object) -> getScrollX
    140:140:int getScrollY(java.lang.Object) -> getScrollY
    144:144:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    148:148:java.util.List getText(java.lang.Object) -> getText
    152:152:int getToIndex(java.lang.Object) -> getToIndex
    156:156:int getWindowId(java.lang.Object) -> getWindowId
    160:160:boolean isChecked(java.lang.Object) -> isChecked
    164:164:boolean isEnabled(java.lang.Object) -> isEnabled
    168:168:boolean isFullScreen(java.lang.Object) -> isFullScreen
    172:172:boolean isPassword(java.lang.Object) -> isPassword
    176:176:boolean isScrollable(java.lang.Object) -> isScrollable
    181:181:void recycle(java.lang.Object) -> recycle
    185:185:void setAddedCount(java.lang.Object,int) -> setAddedCount
    189:189:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    193:193:void setChecked(java.lang.Object,boolean) -> setChecked
    197:197:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    201:201:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    205:205:void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    209:209:void setEnabled(java.lang.Object,boolean) -> setEnabled
    213:213:void setFromIndex(java.lang.Object,int) -> setFromIndex
    217:217:void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    221:221:void setItemCount(java.lang.Object,int) -> setItemCount
    225:225:void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    229:229:void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    233:233:void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    237:237:void setPassword(java.lang.Object,boolean) -> setPassword
    241:241:void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    245:245:void setScrollX(java.lang.Object,int) -> setScrollX
    249:249:void setScrollY(java.lang.Object,int) -> setScrollY
    253:253:void setScrollable(java.lang.Object,boolean) -> setScrollable
    257:257:void setSource(java.lang.Object,android.view.View) -> setSource
    261:261:void setSource(java.lang.Object,android.view.View,int) -> setSource
    265:265:void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    31:31:java.lang.Object obtain() -> obtain
    35:35:java.lang.Object obtain(java.lang.Object) -> obtain
    39:39:int getAddedCount(java.lang.Object) -> getAddedCount
    43:43:java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    47:47:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    51:51:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    55:55:int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    59:59:int getFromIndex(java.lang.Object) -> getFromIndex
    63:63:int getItemCount(java.lang.Object) -> getItemCount
    67:67:android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    71:71:int getRemovedCount(java.lang.Object) -> getRemovedCount
    75:75:int getScrollX(java.lang.Object) -> getScrollX
    79:79:int getScrollY(java.lang.Object) -> getScrollY
    83:83:java.lang.Object getSource(java.lang.Object) -> getSource
    87:87:java.util.List getText(java.lang.Object) -> getText
    91:91:int getToIndex(java.lang.Object) -> getToIndex
    95:95:int getWindowId(java.lang.Object) -> getWindowId
    99:99:boolean isChecked(java.lang.Object) -> isChecked
    103:103:boolean isEnabled(java.lang.Object) -> isEnabled
    107:107:boolean isFullScreen(java.lang.Object) -> isFullScreen
    111:111:boolean isPassword(java.lang.Object) -> isPassword
    115:115:boolean isScrollable(java.lang.Object) -> isScrollable
    119:120:void recycle(java.lang.Object) -> recycle
    123:124:void setAddedCount(java.lang.Object,int) -> setAddedCount
    127:128:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    131:132:void setChecked(java.lang.Object,boolean) -> setChecked
    135:136:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    139:140:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    143:144:void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    147:148:void setEnabled(java.lang.Object,boolean) -> setEnabled
    151:152:void setFromIndex(java.lang.Object,int) -> setFromIndex
    155:156:void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    159:160:void setItemCount(java.lang.Object,int) -> setItemCount
    163:164:void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    167:168:void setPassword(java.lang.Object,boolean) -> setPassword
    171:172:void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    175:176:void setScrollX(java.lang.Object,int) -> setScrollX
    179:180:void setScrollY(java.lang.Object,int) -> setScrollY
    183:184:void setScrollable(java.lang.Object,boolean) -> setScrollable
    187:188:void setSource(java.lang.Object,android.view.View) -> setSource
    191:192:void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    27:27:int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    31:31:int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    34:35:void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    38:39:void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    28:29:void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    160:161:void init(android.content.Context,android.database.Cursor,boolean) -> init
    164:187:void init(android.content.Context,android.database.Cursor,int) -> init
    194:194:android.database.Cursor getCursor() -> getCursor
    201:204:int getCount() -> getCount
    212:216:java.lang.Object getItem(int) -> getItem
    224:231:long getItemId(int) -> getItemId
    237:237:boolean hasStableIds() -> hasStableIds
    244:257:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    262:273:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    296:296:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    315:319:void changeCursor(android.database.Cursor) -> changeCursor
    332:354:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    367:367:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    396:400:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    404:407:android.widget.Filter getFilter() -> getFilter
    420:420:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    436:437:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    447:451:void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    460:460:boolean deliverSelfNotifications() -> deliverSelfNotifications
    465:466:void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    472:474:void onChanged() -> onChanged
    478:480:void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    265:275:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    285:286:void setDrawerShadow(int,int) -> setDrawerShadow
    294:296:void setScrimColor(int) -> setScrimColor
    305:306:void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    322:324:void setDrawerLockMode(int) -> setDrawerLockMode
    346:373:void setDrawerLockMode(int,int) -> setDrawerLockMode
    394:399:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    409:416:int getDrawerLockMode(int) -> getDrawerLockMode
    427:434:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    442:470:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    473:481:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    484:492:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    495:498:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    501:508:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    511:511:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    515:516:int getDrawerViewGravity(android.view.View) -> getDrawerViewGravity
    520:521:boolean checkDrawerViewGravity(android.view.View,int) -> checkDrawerViewGravity
    525:532:android.view.View findOpenDrawer() -> findOpenDrawer
    536:544:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    547:556:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    566:572:java.lang.String gravityToString(int) -> gravityToString
    577:579:void onDetachedFromWindow() -> onDetachedFromWindow
    583:585:void onAttachedToWindow() -> onAttachedToWindow
    589:661:void onMeasure(int,int) -> onMeasure
    665:744:void onLayout(boolean,int,int,int,int) -> onLayout
    748:751:void requestLayout() -> requestLayout
    755:767:void computeScroll() -> computeScroll
    770:774:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    779:836:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    840:840:boolean isContentView(android.view.View) -> isContentView
    844:847:boolean isDrawerView(android.view.View) -> isDrawerView
    852:892:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    897:944:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    952:958:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    964:965:void closeDrawers() -> closeDrawers
    968:997:void closeDrawers(boolean) -> closeDrawers
    1005:1022:void openDrawer(android.view.View) -> openDrawer
    1031:1040:void openDrawer(int) -> openDrawer
    1048:1065:void closeDrawer(android.view.View) -> closeDrawer
    1074:1083:void closeDrawer(int) -> closeDrawer
    1096:1099:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1112:1116:boolean isDrawerOpen(int) -> isDrawerOpen
    1128:1131:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1143:1147:boolean isDrawerVisible(int) -> isDrawerVisible
    1151:1158:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1163:1163:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1168:1168:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1177:1177:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1182:1182:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1186:1186:boolean hasVisibleDrawer() -> hasVisibleDrawer
    1190:1197:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1202:1213:void cancelChildViewTouch() -> cancelChildViewTouch
    1217:1221:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1226:1233:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1238:1250:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1254:1276:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    71:71:int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    1525:1544:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1549:1552:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1556:1557:boolean filter(android.view.View) -> filter
    1567:1589:void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1298:1300:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    1306:1306:android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1311:1311:android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    1303:1303:java.lang.Object[] newArray(int) -> newArray
    1303:1303:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    201:201:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    205:205:void onDrawerOpened(android.view.View) -> onDrawerOpened
    209:209:void onDrawerClosed(android.view.View) -> onDrawerClosed
    213:213:void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mGravity -> mGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    1331:1332:void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    1335:1336:void removeCallbacks() -> removeCallbacks
    1342:1342:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    1348:1349:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1354:1366:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1370:1374:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1377:1382:void closeOtherDrawer() -> closeOtherDrawer
    1388:1401:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1405:1406:void onEdgeTouched(int,int) -> onEdgeTouched
    1411:1433:void peekDrawer() -> peekDrawer
    1444:1444:boolean onEdgeLock(int) -> onEdgeLock
    1450:1459:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1463:1463:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1468:1472:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1478:1478:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1316:1316:void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    1322:1323:void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    143:144:void setSize(int,int) -> setSize
    154:154:boolean isFinished() -> isFinished
    162:163:void finish() -> finish
    177:177:boolean onPull(float) -> onPull
    189:189:boolean onRelease() -> onRelease
    204:204:boolean onAbsorb(int) -> onAbsorb
    218:218:boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    64:64:void setSize(java.lang.Object,int,int) -> setSize
    67:67:boolean isFinished(java.lang.Object) -> isFinished
    71:71:void finish(java.lang.Object) -> finish
    74:74:boolean onPull(java.lang.Object,float) -> onPull
    78:78:boolean onRelease(java.lang.Object) -> onRelease
    82:82:boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    96:97:void setSize(java.lang.Object,int,int) -> setSize
    100:100:boolean isFinished(java.lang.Object) -> isFinished
    104:105:void finish(java.lang.Object) -> finish
    108:108:boolean onPull(java.lang.Object,float) -> onPull
    112:112:boolean onRelease(java.lang.Object) -> onRelease
    116:116:boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    30:30:java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    34:35:void setSize(java.lang.Object,int,int) -> setSize
    38:38:boolean isFinished(java.lang.Object) -> isFinished
    42:43:void finish(java.lang.Object) -> finish
    46:47:boolean onPull(java.lang.Object,float) -> onPull
    51:53:boolean onRelease(java.lang.Object) -> onRelease
    57:58:boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    62:62:boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    107:110:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    133:151:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    173:183:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    194:195:void invalidateRoot() -> invalidateRoot
    207:209:void invalidateVirtualView(int) -> invalidateVirtualView
    218:218:int getFocusedVirtualView() -> getFocusedVirtualView
    230:242:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    255:259:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    271:273:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    287:306:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    320:324:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    335:346:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    378:437:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    441:445:boolean performAction(int,int,android.os.Bundle) -> performAction
    450:450:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    454:459:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    464:470:boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    484:514:boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    523:523:boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    539:552:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    563:570:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    56:56:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    56:56:boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    716:716:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    721:721:boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    106:106:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    111:111:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    120:121:void setViewResource(int) -> setViewResource
    129:130:void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    251:251:android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    255:255:android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    268:268:boolean isFinished() -> isFinished
    277:277:int getCurrX() -> getCurrX
    286:286:int getCurrY() -> getCurrY
    293:293:int getFinalX() -> getFinalX
    300:300:int getFinalY() -> getFinalY
    314:314:float getCurrVelocity() -> getCurrVelocity
    323:323:boolean computeScrollOffset() -> computeScrollOffset
    341:342:void startScroll(int,int,int,int) -> startScroll
    358:359:void startScroll(int,int,int,int,int) -> startScroll
    382:383:void fling(int,int,int,int,int,int,int,int) -> fling
    410:412:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    419:420:void abortAnimation() -> abortAnimation
    437:438:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    454:455:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    471:471:boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    58:58:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    64:64:boolean isFinished(java.lang.Object) -> isFinished
    69:69:int getCurrX(java.lang.Object) -> getCurrX
    74:74:int getCurrY(java.lang.Object) -> getCurrY
    79:79:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    84:84:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    89:90:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    95:96:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    101:102:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    107:108:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    112:113:void abortAnimation(java.lang.Object) -> abortAnimation
    119:119:void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    124:124:void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    129:129:boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    134:134:int getFinalX(java.lang.Object) -> getFinalX
    139:139:int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    146:146:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    151:151:boolean isFinished(java.lang.Object) -> isFinished
    156:156:int getCurrX(java.lang.Object) -> getCurrX
    161:161:int getCurrY(java.lang.Object) -> getCurrY
    166:166:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    171:171:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    176:177:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    182:183:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    188:190:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    195:197:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    201:202:void abortAnimation(java.lang.Object) -> abortAnimation
    207:208:void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    212:213:void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    217:217:boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    222:222:int getFinalX(java.lang.Object) -> getFinalX
    227:227:int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    234:234:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    26:26:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    31:31:boolean isFinished(java.lang.Object) -> isFinished
    35:35:int getCurrX(java.lang.Object) -> getCurrX
    39:39:int getCurrY(java.lang.Object) -> getCurrY
    43:43:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    47:48:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    52:53:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    57:58:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    62:64:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    67:68:void abortAnimation(java.lang.Object) -> abortAnimation
    72:73:void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    76:77:void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    80:80:boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    84:84:int getFinalX(java.lang.Object) -> getFinalX
    88:88:int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    26:26:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    276:276:android.view.View newSearchView(android.content.Context) -> newSearchView
    290:291:void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    303:304:void setImeOptions(android.view.View,int) -> setImeOptions
    316:317:void setInputType(android.view.View,int) -> setInputType
    327:328:void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    376:377:void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    408:408:java.lang.CharSequence getQuery(android.view.View) -> getQuery
    421:422:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    432:433:void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    447:448:void setIconified(android.view.View,boolean) -> setIconified
    458:458:boolean isIconified(android.view.View) -> isIconified
    471:472:void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    481:481:boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    500:501:void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    509:509:boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    517:518:void setMaxWidth(android.view.View,int) -> setMaxWidth
    30:30:android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    396:396:boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    353:353:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    365:365:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    139:139:android.view.View newSearchView(android.content.Context) -> newSearchView
    144:145:void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    149:149:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    164:165:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    169:169:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    180:181:void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    185:185:java.lang.CharSequence getQuery(android.view.View) -> getQuery
    190:191:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    195:196:void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    200:201:void setIconified(android.view.View,boolean) -> setIconified
    205:205:boolean isIconified(android.view.View) -> isIconified
    210:211:void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    215:215:boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    220:221:void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    225:225:boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    230:231:void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    153:153:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    157:157:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    173:173:boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    238:238:android.view.View newSearchView(android.content.Context) -> newSearchView
    243:244:void setImeOptions(android.view.View,int) -> setImeOptions
    248:249:void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    57:57:android.view.View newSearchView(android.content.Context) -> newSearchView
    62:62:void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    66:66:void setImeOptions(android.view.View,int) -> setImeOptions
    70:70:void setInputType(android.view.View,int) -> setInputType
    74:74:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    79:79:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    83:83:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    88:88:void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    92:92:java.lang.CharSequence getQuery(android.view.View) -> getQuery
    97:97:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    101:101:void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    105:105:void setIconified(android.view.View,boolean) -> setIconified
    109:109:boolean isIconified(android.view.View) -> isIconified
    114:114:void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    118:118:boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    123:123:void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    127:127:boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    132:132:void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    42:42:android.view.View newSearchView(android.content.Context) -> newSearchView
    46:50:void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    53:53:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    67:68:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    71:71:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    80:81:void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    84:84:java.lang.CharSequence getQuery(android.view.View) -> getQuery
    88:89:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    92:93:void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    96:97:void setIconified(android.view.View,boolean) -> setIconified
    100:100:boolean isIconified(android.view.View) -> isIconified
    104:105:void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    108:108:boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    112:113:void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    116:116:boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    120:121:void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    56:56:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    61:61:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    74:74:boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    43:43:android.view.View newSearchView(android.content.Context) -> newSearchView
    47:48:void setImeOptions(android.view.View,int) -> setImeOptions
    51:52:void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    37:39:void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    121:151:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    162:162:android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    175:176:void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    195:199:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    213:214:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    228:228:int getStringConversionColumn() -> getStringConversionColumn
    246:247:void setStringConversionColumn(int) -> setStringConversionColumn
    262:262:android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    278:279:void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    294:300:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    310:322:void findColumns(java.lang.String[]) -> findColumns
    326:329:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    344:348:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    277:279:void setParallaxDistance(int) -> setParallaxDistance
    287:287:int getParallaxDistance() -> getParallaxDistance
    296:297:void setSliderFadeColor(int) -> setSliderFadeColor
    303:303:int getSliderFadeColor() -> getSliderFadeColor
    313:314:void setCoveredFadeColor(int) -> setCoveredFadeColor
    320:320:int getCoveredFadeColor() -> getCoveredFadeColor
    324:325:void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    328:331:void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    334:338:void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    341:345:void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    348:386:void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    389:395:void setAllChildrenVisible() -> setAllChildrenVisible
    398:409:boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    414:416:void onAttachedToWindow() -> onAttachedToWindow
    420:428:void onDetachedFromWindow() -> onDetachedFromWindow
    432:635:void onMeasure(int,int) -> onMeasure
    640:707:void onLayout(boolean,int,int,int,int) -> onLayout
    711:716:void onSizeChanged(int,int,int,int) -> onSizeChanged
    720:724:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    728:783:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    788:824:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    828:832:boolean closePane(android.view.View,int) -> closePane
    836:840:boolean openPane(android.view.View,int) -> openPane
    848:849:void smoothSlideOpen() -> smoothSlideOpen
    858:858:boolean openPane() -> openPane
    866:867:void smoothSlideClosed() -> smoothSlideClosed
    876:876:boolean closePane() -> closePane
    886:886:boolean isOpen() -> isOpen
    895:895:boolean canSlide() -> canSlide
    905:905:boolean isSlideable() -> isSlideable
    909:922:void onPanelDragged(int) -> onPanelDragged
    925:947:void dimChildView(android.view.View,float,int) -> dimChildView
    951:987:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    991:992:void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    1001:1016:boolean smoothSlideTo(float,int) -> smoothSlideTo
    1021:1029:void computeScroll() -> computeScroll
    1038:1039:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1048:1049:void setShadowResource(int) -> setShadowResource
    1053:1068:void draw(android.graphics.Canvas) -> draw
    1071:1089:void parallaxOtherViews(float) -> parallaxOtherViews
    1103:1122:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    1126:1130:boolean isDimmed(android.view.View) -> isDimmed
    1135:1135:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1140:1140:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1147:1147:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1152:1152:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1157:1162:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1167:1176:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    88:88:boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    88:88:android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    88:88:float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    88:88:android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    88:88:boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    88:88:void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    88:88:int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    88:88:void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    88:88:java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    1400:1425:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1429:1432:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1437:1440:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1444:1444:boolean filter(android.view.View) -> filter
    1454:1478:void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    1490:1495:void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    1182:1186:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    1191:1201:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1206:1207:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1211:1213:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1217:1224:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1228:1228:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1233:1239:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1244:1245:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1317:1319:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    1324:1324:android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1328:1328:android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    1322:1322:java.lang.Object[] newArray(int) -> newArray
    1322:1322:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    234:234:void onPanelSlide(android.view.View,float) -> onPanelSlide
    237:237:void onPanelOpened(android.view.View) -> onPanelOpened
    240:240:void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    1339:1341:void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    1372:1385:void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    1391:1392:void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    347:347:android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    360:362:android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    401:402:void setMinVelocity(float) -> setMinVelocity
    412:412:float getMinVelocity() -> getMinVelocity
    421:421:int getViewDragState() -> getViewDragState
    437:438:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    448:448:int getEdgeSize() -> getEdgeSize
    460:469:void captureChildView(android.view.View,int) -> captureChildView
    475:475:android.view.View getCapturedView() -> getCapturedView
    483:483:int getActivePointerId() -> getActivePointerId
    490:490:int getTouchSlop() -> getTouchSlop
    498:505:void cancel() -> cancel
    512:522:void abort() -> abort
    539:542:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    557:562:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    577:593:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    597:614:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    618:636:int computeAxisDuration(int,int,int) -> computeAxisDuration
    650:653:int clampMag(int,int,int) -> clampMag
    667:670:float clampMag(float,float,float) -> clampMag
    674:676:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    690:701:void flingCapturedView(int,int,int,int) -> flingCapturedView
    715:749:boolean continueSettling(boolean) -> continueSettling
    759:767:void dispatchViewReleased(float,float) -> dispatchViewReleased
    770:781:void clearMotionHistory() -> clearMotionHistory
    784:795:void clearMotionHistory(int) -> clearMotionHistory
    798:825:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    828:833:void saveInitialMotion(float,float,int) -> saveInitialMotion
    836:844:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    860:860:boolean isPointerDown(int) -> isPointerDown
    864:871:void setDragState(int) -> setDragState
    883:892:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    908:927:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    939:1036:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    1046:1194:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1197:1215:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    1218:1231:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1245:1258:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1276:1282:boolean checkTouchSlop(int) -> checkTouchSlop
    1301:1318:boolean checkTouchSlop(int,int) -> checkTouchSlop
    1331:1337:boolean isEdgeTouched(int) -> isEdgeTouched
    1351:1351:boolean isEdgeTouched(int,int) -> isEdgeTouched
    1355:1363:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1366:1385:void dragTo(int,int,int,int) -> dragTo
    1397:1397:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1410:1413:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1428:1436:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    1440:1447:int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    328:329:float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    335:336:void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    159:159:void onViewDragStateChanged(int) -> onViewDragStateChanged
    170:170:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    181:181:void onViewCaptured(android.view.View,int) -> onViewCaptured
    201:201:void onViewReleased(android.view.View,float,float) -> onViewReleased
    214:214:void onEdgeTouched(int,int) -> onEdgeTouched
    226:226:boolean onEdgeLock(int) -> onEdgeLock
    240:240:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    249:249:int getOrderedChildIndex(int) -> getOrderedChildIndex
    260:260:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    271:271:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    304:304:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    319:319:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.android.internal.http.multipart.ByteArrayPartSource -> com.android.internal.http.multipart.ByteArrayPartSource:
    6:6:long getLength() -> getLength
    7:7:java.lang.String getFileName() -> getFileName
    8:8:java.io.InputStream createInputStream() -> createInputStream
com.android.internal.http.multipart.FilePart -> com.android.internal.http.multipart.FilePart:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    java.lang.String FILE_NAME -> FILE_NAME
    11:11:void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    12:12:void sendData(java.io.OutputStream) -> sendData
    13:13:com.android.internal.http.multipart.PartSource getSource() -> getSource
    14:14:long lengthOfData() -> lengthOfData
com.android.internal.http.multipart.FilePartSource -> com.android.internal.http.multipart.FilePartSource:
    7:7:long getLength() -> getLength
    8:8:java.lang.String getFileName() -> getFileName
    9:9:java.io.InputStream createInputStream() -> createInputStream
com.android.internal.http.multipart.MultipartEntity -> com.android.internal.http.multipart.MultipartEntity:
    java.lang.String MULTIPART_BOUNDARY -> MULTIPART_BOUNDARY
    com.android.internal.http.multipart.Part[] parts -> parts
    7:7:byte[] getMultipartBoundary() -> getMultipartBoundary
    8:8:boolean isRepeatable() -> isRepeatable
    9:9:void writeTo(java.io.OutputStream) -> writeTo
    10:10:org.apache.http.Header getContentType() -> getContentType
    11:11:long getContentLength() -> getContentLength
    12:12:java.io.InputStream getContent() -> getContent
    13:13:boolean isStreaming() -> isStreaming
com.android.internal.http.multipart.Part -> com.android.internal.http.multipart.Part:
    java.lang.String BOUNDARY -> BOUNDARY
    byte[] BOUNDARY_BYTES -> BOUNDARY_BYTES
    java.lang.String CHARSET -> CHARSET
    byte[] CHARSET_BYTES -> CHARSET_BYTES
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    byte[] CONTENT_DISPOSITION_BYTES -> CONTENT_DISPOSITION_BYTES
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    byte[] CONTENT_TRANSFER_ENCODING_BYTES -> CONTENT_TRANSFER_ENCODING_BYTES
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] CONTENT_TYPE_BYTES -> CONTENT_TYPE_BYTES
    java.lang.String CRLF -> CRLF
    byte[] CRLF_BYTES -> CRLF_BYTES
    java.lang.String EXTRA -> EXTRA
    byte[] EXTRA_BYTES -> EXTRA_BYTES
    java.lang.String QUOTE -> QUOTE
    byte[] QUOTE_BYTES -> QUOTE_BYTES
    6:6:java.lang.String getBoundary() -> getBoundary
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    11:11:byte[] getPartBoundary() -> getPartBoundary
    12:12:boolean isRepeatable() -> isRepeatable
    13:13:void sendStart(java.io.OutputStream) -> sendStart
    14:14:void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    15:15:void sendContentTypeHeader(java.io.OutputStream) -> sendContentTypeHeader
    16:16:void sendTransferEncodingHeader(java.io.OutputStream) -> sendTransferEncodingHeader
    17:17:void sendEndOfHeader(java.io.OutputStream) -> sendEndOfHeader
    void sendData(java.io.OutputStream) -> sendData
    long lengthOfData() -> lengthOfData
    20:20:void sendEnd(java.io.OutputStream) -> sendEnd
    21:21:void send(java.io.OutputStream) -> send
    22:22:long length() -> length
    23:23:java.lang.String toString() -> toString
    24:24:void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[]) -> sendParts
    25:25:void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[],byte[]) -> sendParts
    26:26:long getLengthOfParts(com.android.internal.http.multipart.Part[]) -> getLengthOfParts
    27:27:long getLengthOfParts(com.android.internal.http.multipart.Part[],byte[]) -> getLengthOfParts
com.android.internal.http.multipart.PartBase -> com.android.internal.http.multipart.PartBase:
    6:6:java.lang.String getName() -> getName
    7:7:java.lang.String getContentType() -> getContentType
    8:8:java.lang.String getCharSet() -> getCharSet
    9:9:java.lang.String getTransferEncoding() -> getTransferEncoding
    10:10:void setCharSet(java.lang.String) -> setCharSet
    11:11:void setContentType(java.lang.String) -> setContentType
    12:12:void setName(java.lang.String) -> setName
    13:13:void setTransferEncoding(java.lang.String) -> setTransferEncoding
com.android.internal.http.multipart.PartSource -> com.android.internal.http.multipart.PartSource:
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
com.android.internal.http.multipart.StringPart -> com.android.internal.http.multipart.StringPart:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    7:7:void sendData(java.io.OutputStream) -> sendData
    8:8:long lengthOfData() -> lengthOfData
    9:9:void setCharSet(java.lang.String) -> setCharSet
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.BarcodeFormat[] values() -> values
    1:1:com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    39:39:com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    80:80:int getWidth() -> getWidth
    84:84:int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    44:44:int getWidth() -> getWidth
    51:51:int getHeight() -> getHeight
    66:66:com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    84:87:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    94:94:boolean isCropSupported() -> isCropSupported
    108:109:com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    116:116:boolean isRotateSupported() -> isRotateSupported
    126:127:com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    137:138:com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
    144:146:java.lang.String toString() -> toString
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    38:41:com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
    46:49:com.google.zxing.ChecksumException getChecksumInstance(java.lang.Throwable) -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType ASSUME_GS1 -> ASSUME_GS1
    com.google.zxing.DecodeHintType RETURN_CODABAR_START_END -> RETURN_CODABAR_START_END
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    com.google.zxing.DecodeHintType ALLOWED_EAN_EXTENSIONS -> ALLOWED_EAN_EXTENSIONS
    java.lang.Class valueType -> valueType
    com.google.zxing.DecodeHintType[] ENUM$VALUES -> ENUM$VALUES
    119:119:java.lang.Class getValueType() -> getValueType
    1:1:com.google.zxing.DecodeHintType[] values() -> values
    1:1:com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.Dimension -> com.google.zxing.Dimension:
    int width -> width
    int height -> height
    36:36:int getWidth() -> getWidth
    40:40:int getHeight() -> getHeight
    45:49:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE -> DATA_MATRIX_SHAPE
    com.google.zxing.EncodeHintType MIN_SIZE -> MIN_SIZE
    com.google.zxing.EncodeHintType MAX_SIZE -> MAX_SIZE
    com.google.zxing.EncodeHintType MARGIN -> MARGIN
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType AZTEC_LAYERS -> AZTEC_LAYERS
    com.google.zxing.EncodeHintType[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.EncodeHintType[] values() -> values
    1:1:com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    38:41:com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
    46:49:com.google.zxing.FormatException getFormatInstance(java.lang.Throwable) -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    com.google.zxing.LuminanceSource delegate -> delegate
    36:41:byte[] getRow(int,byte[]) -> getRow
    46:52:byte[] getMatrix() -> getMatrix
    57:57:boolean isCropSupported() -> isCropSupported
    62:62:com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    67:67:boolean isRotateSupported() -> isRotateSupported
    75:75:com.google.zxing.LuminanceSource invert() -> invert
    80:80:com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    85:85:com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    66:66:int getWidth() -> getWidth
    73:73:int getHeight() -> getHeight
    80:80:boolean isCropSupported() -> isCropSupported
    94:94:com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    101:101:boolean isRotateSupported() -> isRotateSupported
    109:109:com.google.zxing.LuminanceSource invert() -> invert
    119:119:com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    129:129:com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    134:154:java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    54:55:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    68:69:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    82:85:com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    96:156:void setHints(java.util.Map) -> setHints
    160:165:void reset() -> reset
    168:177:com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat -> $SWITCH_TABLE$com$google$zxing$BarcodeFormat
    47:47:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    57:94:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    40:40:int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat() -> $SWITCH_TABLE$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    34:34:com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    int THUMBNAIL_SCALE_FACTOR -> THUMBNAIL_SCALE_FACTOR
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    65:74:byte[] getRow(int,byte[]) -> getRow
    79:105:byte[] getMatrix() -> getMatrix
    110:110:boolean isCropSupported() -> isCropSupported
    115:122:com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    126:140:int[] renderThumbnail() -> renderThumbnail
    147:147:int getThumbnailWidth() -> getThumbnailWidth
    154:154:int getThumbnailHeight() -> getThumbnailHeight
    158:167:void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.RGBLuminanceSource -> com.google.zxing.RGBLuminanceSource:
    byte[] luminances -> luminances
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    83:92:byte[] getRow(int,byte[]) -> getRow
    97:123:byte[] getMatrix() -> getMatrix
    128:128:boolean isCropSupported() -> isCropSupported
    133:139:com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    boolean isStackTrace -> isStackTrace
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    60:60:java.lang.String getText() -> getText
    67:67:byte[] getRawBytes() -> getRawBytes
    76:76:com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    83:83:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    92:92:java.util.Map getResultMetadata() -> getResultMetadata
    96:100:void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    103:110:void putAllMetadata(java.util.Map) -> putAllMetadata
    113:122:void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    125:125:long getTimestamp() -> getTimestamp
    130:130:java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA -> PDF417_EXTRA_METADATA
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_SEQUENCE -> STRUCTURED_APPEND_SEQUENCE
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_PARITY -> STRUCTURED_APPEND_PARITY
    com.google.zxing.ResultMetadataType[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.ResultMetadataType[] values() -> values
    1:1:com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    38:38:float getX() -> getX
    42:42:float getY() -> getY
    47:51:boolean equals(java.lang.Object) -> equals
    56:56:int hashCode() -> hashCode
    61:67:java.lang.String toString() -> toString
    79:114:void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    123:123:float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    132:134:float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    41:41:int getNbLayers() -> getNbLayers
    45:45:int getNbDatablocks() -> getNbDatablocks
    49:49:boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    52:52:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    59:109:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    115:115:void reset() -> reset
com.google.zxing.aztec.AztecWriter -> com.google.zxing.aztec.AztecWriter:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    35:35:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    40:49:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    55:59:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    63:86:com.google.zxing.common.BitMatrix renderResult(com.google.zxing.aztec.encoder.AztecCode,int,int) -> renderResult
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table -> $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table
    74:79:com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    84:84:java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    93:144:java.lang.String getEncodedData(boolean[]) -> getEncodedData
    151:164:com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    175:188:java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    202:263:boolean[] correctBits(boolean[]) -> correctBits
    272:318:boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    325:332:int readCode(boolean[],int,int) -> readCode
    336:336:int totalBitsInLayer(int,boolean) -> totalBitsInLayer
    35:35:int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table() -> $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    1:1:com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    int[] EXPECTED_CORNER_BITS -> EXPECTED_CORNER_BITS
    52:52:com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    65:90:com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    100:147:void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    166:184:int getRotation(int[],int) -> getRotation
    198:223:int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    237:286:com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    304:349:com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    359:359:com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    373:389:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    401:414:int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
    426:453:boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    463:487:int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    494:515:com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    527:543:com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],float,float) -> expandSquare
    547:547:boolean isValid(int,int) -> isValid
    551:553:boolean isValid(com.google.zxing.ResultPoint) -> isValid
    557:557:float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    561:561:float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    565:571:int getDimension() -> getDimension
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    579:579:com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    588:588:int getX() -> getX
    592:592:int getY() -> getY
    597:597:java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.AztecCode -> com.google.zxing.aztec.encoder.AztecCode:
    boolean compact -> compact
    int size -> size
    int layers -> layers
    int codeWords -> codeWords
    com.google.zxing.common.BitMatrix matrix -> matrix
    38:38:boolean isCompact() -> isCompact
    42:43:void setCompact(boolean) -> setCompact
    49:49:int getSize() -> getSize
    53:54:void setSize(int) -> setSize
    60:60:int getLayers() -> getLayers
    64:65:void setLayers(int) -> setLayers
    71:71:int getCodeWords() -> getCodeWords
    75:76:void setCodeWords(int) -> setCodeWords
    82:82:com.google.zxing.common.BitMatrix getMatrix() -> getMatrix
    86:87:void setMatrix(com.google.zxing.common.BitMatrix) -> setMatrix
com.google.zxing.aztec.encoder.BinaryShiftToken -> com.google.zxing.aztec.encoder.BinaryShiftToken:
    short binaryShiftStart -> binaryShiftStart
    short binaryShiftByteCount -> binaryShiftByteCount
    36:53:void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    57:57:java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Encoder -> com.google.zxing.aztec.encoder.Encoder:
    int DEFAULT_EC_PERCENT -> DEFAULT_EC_PERCENT
    int DEFAULT_AZTEC_LAYERS -> DEFAULT_AZTEC_LAYERS
    int MAX_NB_BITS -> MAX_NB_BITS
    int MAX_NB_BITS_COMPACT -> MAX_NB_BITS_COMPACT
    int[] WORD_SIZE -> WORD_SIZE
    51:51:com.google.zxing.aztec.encoder.AztecCode encode(byte[]) -> encode
    65:200:com.google.zxing.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    204:218:void drawBullsEye(com.google.zxing.common.BitMatrix,int,int) -> drawBullsEye
    221:231:com.google.zxing.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    235:269:void drawModeMessage(com.google.zxing.common.BitMatrix,boolean,int,com.google.zxing.common.BitArray) -> drawModeMessage
    273:284:com.google.zxing.common.BitArray generateCheckWords(com.google.zxing.common.BitArray,int,int) -> generateCheckWords
    288:298:int[] bitsToWords(com.google.zxing.common.BitArray,int,int) -> bitsToWords
    302:314:com.google.zxing.common.reedsolomon.GenericGF getGF(int) -> getGF
    319:340:com.google.zxing.common.BitArray stuffBits(com.google.zxing.common.BitArray,int) -> stuffBits
    344:344:int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.encoder.HighLevelEncoder -> com.google.zxing.aztec.encoder.HighLevelEncoder:
    java.lang.String[] MODE_NAMES -> MODE_NAMES
    int MODE_UPPER -> MODE_UPPER
    int MODE_LOWER -> MODE_LOWER
    int MODE_DIGIT -> MODE_DIGIT
    int MODE_MIXED -> MODE_MIXED
    int MODE_PUNCT -> MODE_PUNCT
    int[][] LATCH_TABLE -> LATCH_TABLE
    int[][] CHAR_MAP -> CHAR_MAP
    int[][] SHIFT_TABLE -> SHIFT_TABLE
    byte[] text -> text
    161:199:com.google.zxing.common.BitArray encode() -> encode
    206:210:java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    217:252:void updateStateForChar(com.google.zxing.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    255:259:java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
    263:284:void updateStateForPair(com.google.zxing.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    287:304:java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
com.google.zxing.aztec.encoder.HighLevelEncoder$1 -> com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    com.google.zxing.aztec.encoder.HighLevelEncoder this$0 -> this$0
    195:195:int compare(com.google.zxing.aztec.encoder.State,com.google.zxing.aztec.encoder.State) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.aztec.encoder.SimpleToken -> com.google.zxing.aztec.encoder.SimpleToken:
    short value -> value
    short bitCount -> bitCount
    35:36:void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    40:42:java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.State -> com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.State INITIAL_STATE -> INITIAL_STATE
    int mode -> mode
    com.google.zxing.aztec.encoder.Token token -> token
    int binaryShiftByteCount -> binaryShiftByteCount
    int bitCount -> bitCount
    58:58:int getMode() -> getMode
    62:62:com.google.zxing.aztec.encoder.Token getToken() -> getToken
    66:66:int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    70:70:int getBitCount() -> getBitCount
    77:86:com.google.zxing.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    93:98:com.google.zxing.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    104:122:com.google.zxing.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    128:134:com.google.zxing.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    140:145:boolean isBetterThanOrEqualTo(com.google.zxing.aztec.encoder.State) -> isBetterThanOrEqualTo
    151:161:com.google.zxing.common.BitArray toBitArray(byte[]) -> toBitArray
    166:166:java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Token -> com.google.zxing.aztec.encoder.Token:
    com.google.zxing.aztec.encoder.Token EMPTY -> EMPTY
    com.google.zxing.aztec.encoder.Token previous -> previous
    32:32:com.google.zxing.aztec.encoder.Token getPrevious() -> getPrevious
    36:36:com.google.zxing.aztec.encoder.Token add(int,int) -> add
    41:41:com.google.zxing.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    32:32:java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    36:36:java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    36:67:com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    74:88:java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    40:80:com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    84:89:java.lang.String parseName(java.lang.String) -> parseName
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String[] nicknames -> nicknames
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String[] urls -> urls
    java.lang.String[] geo -> geo
    102:102:java.lang.String[] getNames() -> getNames
    106:106:java.lang.String[] getNicknames() -> getNicknames
    116:116:java.lang.String getPronunciation() -> getPronunciation
    120:120:java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    128:128:java.lang.String[] getPhoneTypes() -> getPhoneTypes
    132:132:java.lang.String[] getEmails() -> getEmails
    140:140:java.lang.String[] getEmailTypes() -> getEmailTypes
    144:144:java.lang.String getInstantMessenger() -> getInstantMessenger
    148:148:java.lang.String getNote() -> getNote
    152:152:java.lang.String[] getAddresses() -> getAddresses
    160:160:java.lang.String[] getAddressTypes() -> getAddressTypes
    164:164:java.lang.String getTitle() -> getTitle
    168:168:java.lang.String getOrg() -> getOrg
    172:172:java.lang.String[] getURLs() -> getURLs
    179:179:java.lang.String getBirthday() -> getBirthday
    186:186:java.lang.String[] getGeo() -> getGeo
    191:205:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    39:69:com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    75:89:java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    93:96:java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    28:38:com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.util.regex.Pattern RFC2445_DURATION -> RFC2445_DURATION
    long[] RFC2445_DURATION_FIELD_UNITS -> RFC2445_DURATION_FIELD_UNITS
    java.util.regex.Pattern DATE_TIME -> DATE_TIME
    java.lang.String summary -> summary
    java.util.Date start -> start
    boolean startAllDay -> startAllDay
    java.util.Date end -> end
    boolean endAllDay -> endAllDay
    java.lang.String location -> location
    java.lang.String organizer -> organizer
    java.lang.String[] attendees -> attendees
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    101:101:java.lang.String getSummary() -> getSummary
    108:108:java.util.Date getStart() -> getStart
    115:115:boolean isStartAllDay() -> isStartAllDay
    123:123:java.util.Date getEnd() -> getEnd
    130:130:boolean isEndAllDay() -> isEndAllDay
    134:134:java.lang.String getLocation() -> getLocation
    138:138:java.lang.String getOrganizer() -> getOrganizer
    142:142:java.lang.String[] getAttendees() -> getAttendees
    146:146:java.lang.String getDescription() -> getDescription
    150:150:double getLatitude() -> getLatitude
    154:154:double getLongitude() -> getLongitude
    159:167:java.lang.String getDisplayResult() -> getDisplayResult
    178:201:java.util.Date parseDate(java.lang.String) -> parseDate
    206:212:java.lang.String format(boolean,java.util.Date) -> format
    216:230:long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
    234:239:java.text.DateFormat buildDateFormat() -> buildDateFormat
    243:243:java.text.DateFormat buildDateTimeFormat() -> buildDateTimeFormat
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String[] tos -> tos
    java.lang.String[] ccs -> ccs
    java.lang.String[] bccs -> bccs
    java.lang.String subject -> subject
    java.lang.String body -> body
    53:53:java.lang.String getEmailAddress() -> getEmailAddress
    57:57:java.lang.String[] getTos() -> getTos
    61:61:java.lang.String[] getCCs() -> getCCs
    65:65:java.lang.String[] getBCCs() -> getBCCs
    69:69:java.lang.String getSubject() -> getSubject
    73:73:java.lang.String getBody() -> getBody
    82:82:java.lang.String getMailtoURI() -> getMailtoURI
    87:93:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    java.util.regex.Pattern COMMA -> COMMA
    36:77:com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    36:51:com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    61:61:boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String rawText -> rawText
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    92:110:boolean equals(java.lang.Object) -> equals
    114:114:boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    119:133:int hashCode() -> hashCode
    137:137:int hashNotNull(java.lang.Object) -> hashNotNull
    141:141:java.lang.String getRawText() -> getRawText
    145:145:java.lang.String getProductID() -> getProductID
    149:149:java.lang.String getSscc() -> getSscc
    153:153:java.lang.String getLotNumber() -> getLotNumber
    157:157:java.lang.String getProductionDate() -> getProductionDate
    161:161:java.lang.String getPackagingDate() -> getPackagingDate
    165:165:java.lang.String getBestBeforeDate() -> getBestBeforeDate
    169:169:java.lang.String getExpirationDate() -> getExpirationDate
    173:173:java.lang.String getWeight() -> getWeight
    177:177:java.lang.String getWeightType() -> getWeightType
    181:181:java.lang.String getWeightIncrement() -> getWeightIncrement
    185:185:java.lang.String getPrice() -> getPrice
    189:189:java.lang.String getPriceIncrement() -> getPriceIncrement
    193:193:java.lang.String getPriceCurrency() -> getPriceCurrency
    197:197:java.util.Map getUncommonAIs() -> getUncommonAIs
    202:202:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    45:172:com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    176:195:java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    199:216:java.lang.String findValue(int,java.lang.String) -> findValue
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    38:51:java.lang.String getGeoURI() -> getGeoURI
    58:58:double getLatitude() -> getLatitude
    65:65:double getLongitude() -> getLongitude
    72:72:double getAltitude() -> getAltitude
    79:79:java.lang.String getQuery() -> getQuery
    84:98:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    39:70:com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    32:32:java.lang.String getISBN() -> getISBN
    37:37:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    34:47:com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    39:39:com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    46:46:java.lang.String toString() -> toString
    50:57:void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    60:65:void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType VIN -> VIN
    com.google.zxing.client.result.ParsedResultType[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.client.result.ParsedResultType[] values() -> values
    1:1:com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    38:38:java.lang.String getProductID() -> getProductID
    42:42:java.lang.String getNormalizedProductID() -> getNormalizedProductID
    47:47:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    33:52:com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    81:85:java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    89:95:com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    99:103:void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    106:112:void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    115:115:java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    119:136:java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    140:149:int parseHexDigit(char) -> parseHexDigit
    153:153:boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    157:161:boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    165:173:java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    177:188:void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    192:194:java.lang.String urlDecode(java.lang.String) -> urlDecode
    199:239:java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    243:251:int countPrecedingBackslashes(java.lang.CharSequence,int) -> countPrecedingBackslashes
    255:256:java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    45:86:com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    92:107:void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    52:83:java.lang.String getSMSURI() -> getSMSURI
    87:87:java.lang.String[] getNumbers() -> getNumbers
    91:91:java.lang.String[] getVias() -> getVias
    95:95:java.lang.String getSubject() -> getSubject
    99:99:java.lang.String getBody() -> getBody
    104:108:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    35:49:com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    31:52:com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    36:36:java.lang.String getNumber() -> getNumber
    40:40:java.lang.String getTelURI() -> getTelURI
    44:44:java.lang.String getTitle() -> getTitle
    49:52:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    30:39:com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    37:37:java.lang.String getText() -> getText
    41:41:java.lang.String getLanguage() -> getLanguage
    46:46:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    38:38:java.lang.String getURI() -> getURI
    42:42:java.lang.String getTitle() -> getTitle
    54:54:boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    59:62:java.lang.String getDisplayResult() -> getDisplayResult
    70:79:java.lang.String massageURI(java.lang.String) -> massageURI
    83:88:boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    40:47:com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    51:60:boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    32:42:com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    java.util.regex.Pattern COMMA -> COMMA
    java.util.regex.Pattern SEMICOLON_OR_COMMA -> SEMICOLON_OR_COMMA
    54:99:com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    106:206:java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    210:239:java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    245:260:void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    266:267:java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    271:271:java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    275:285:java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    289:310:java.lang.String[] toTypes(java.util.Collection) -> toTypes
    314:314:boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    324:346:void formatNames(java.lang.Iterable) -> formatNames
    349:355:void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    33:88:com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    95:96:java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    100:109:java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    113:116:java.lang.String stripMailto(java.lang.String) -> stripMailto
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VINParsedResult -> com.google.zxing.client.result.VINParsedResult:
    java.lang.String vin -> vin
    java.lang.String worldManufacturerID -> worldManufacturerID
    java.lang.String vehicleDescriptorSection -> vehicleDescriptorSection
    java.lang.String vehicleIdentifierSection -> vehicleIdentifierSection
    java.lang.String countryCode -> countryCode
    java.lang.String vehicleAttributes -> vehicleAttributes
    int modelYear -> modelYear
    char plantCode -> plantCode
    java.lang.String sequentialNumber -> sequentialNumber
    55:55:java.lang.String getVIN() -> getVIN
    59:59:java.lang.String getWorldManufacturerID() -> getWorldManufacturerID
    63:63:java.lang.String getVehicleDescriptorSection() -> getVehicleDescriptorSection
    67:67:java.lang.String getVehicleIdentifierSection() -> getVehicleIdentifierSection
    71:71:java.lang.String getCountryCode() -> getCountryCode
    75:75:java.lang.String getVehicleAttributes() -> getVehicleAttributes
    79:79:int getModelYear() -> getModelYear
    83:83:char getPlantCode() -> getPlantCode
    87:87:java.lang.String getSequentialNumber() -> getSequentialNumber
    92:102:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.VINResultParser -> com.google.zxing.client.result.VINResultParser:
    java.util.regex.Pattern IOQ -> IOQ
    java.util.regex.Pattern AZ09 -> AZ09
    36:59:com.google.zxing.client.result.VINParsedResult parse(com.google.zxing.Result) -> parse
    64:70:boolean checkChecksum(java.lang.CharSequence) -> checkChecksum
    74:86:int vinCharValue(char) -> vinCharValue
    90:102:int vinPositionWeight(int) -> vinPositionWeight
    106:112:char checkChar(int) -> checkChar
    116:137:int modelYear(char) -> modelYear
    141:206:java.lang.String countryCode(java.lang.CharSequence) -> countryCode
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    boolean hidden -> hidden
    42:42:java.lang.String getSsid() -> getSsid
    46:46:java.lang.String getNetworkEncryption() -> getNetworkEncryption
    50:50:java.lang.String getPassword() -> getPassword
    54:54:boolean isHidden() -> isHidden
    59:64:java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    35:49:com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    1:1:com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    48:48:int getSize() -> getSize
    52:52:int getSizeInBytes() -> getSizeInBytes
    56:61:void ensureCapacity(int) -> ensureCapacity
    68:68:boolean get(int) -> get
    77:78:void set(int) -> set
    86:87:void flip(int) -> flip
    96:110:int getNextSet(int) -> getNextSet
    119:133:int getNextUnset(int) -> getNextUnset
    144:145:void setBulk(int,int) -> setBulk
    154:177:void setRange(int,int) -> setRange
    183:187:void clear() -> clear
    199:227:boolean isRange(int,int,boolean) -> isRange
    231:236:void appendBit(boolean) -> appendBit
    247:254:void appendBits(int,int) -> appendBits
    257:262:void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    265:273:void xor(com.google.zxing.common.BitArray) -> xor
    284:294:void toBytes(int,byte[],int,int) -> toBytes
    301:301:int[] getBitArray() -> getBitArray
    308:338:void reverse() -> reverse
    341:341:int[] makeArray(int) -> makeArray
    346:350:boolean equals(java.lang.Object) -> equals
    355:355:int hashCode() -> hashCode
    360:367:java.lang.String toString() -> toString
    372:372:com.google.zxing.common.BitArray clone() -> clone
    1:1:java.lang.Object clone() -> clone
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    66:122:com.google.zxing.common.BitMatrix parse(java.lang.String,java.lang.String,java.lang.String) -> parse
    133:134:boolean get(int,int) -> get
    144:146:void set(int,int) -> set
    149:151:void unset(int,int) -> unset
    160:162:void flip(int,int) -> flip
    171:183:void xor(com.google.zxing.common.BitMatrix) -> xor
    189:193:void clear() -> clear
    204:221:void setRegion(int,int,int,int) -> setRegion
    232:241:com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    249:250:void setRow(int,com.google.zxing.common.BitArray) -> setRow
    256:268:void rotate180() -> rotate180
    276:320:int[] getEnclosingRectangle() -> getEnclosingRectangle
    329:345:int[] getTopLeftOnBit() -> getTopLeftOnBit
    349:367:int[] getBottomRightOnBit() -> getBottomRightOnBit
    374:374:int getWidth() -> getWidth
    381:381:int getHeight() -> getHeight
    388:388:int getRowSize() -> getRowSize
    393:398:boolean equals(java.lang.Object) -> equals
    403:408:int hashCode() -> hashCode
    413:413:java.lang.String toString() -> toString
    417:417:java.lang.String toString(java.lang.String,java.lang.String) -> toString
    421:428:java.lang.String toString(java.lang.String,java.lang.String,java.lang.String) -> toString
    433:433:com.google.zxing.common.BitMatrix clone() -> clone
    1:1:java.lang.Object clone() -> clone
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    46:46:int getBitOffset() -> getBitOffset
    53:53:int getByteOffset() -> getByteOffset
    63:101:int readBits(int) -> readBits
    108:108:int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] ENUM$VALUES -> ENUM$VALUES
    93:93:int getValue() -> getValue
    103:106:com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    115:115:com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
    1:1:com.google.zxing.common.CharacterSetECI[] values() -> values
    1:1:com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    java.lang.Integer errorsCorrected -> errorsCorrected
    java.lang.Integer erasures -> erasures
    java.lang.Object other -> other
    int structuredAppendParity -> structuredAppendParity
    int structuredAppendSequenceNumber -> structuredAppendSequenceNumber
    62:62:byte[] getRawBytes() -> getRawBytes
    66:66:java.lang.String getText() -> getText
    70:70:java.util.List getByteSegments() -> getByteSegments
    74:74:java.lang.String getECLevel() -> getECLevel
    78:78:java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    82:83:void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    86:86:java.lang.Integer getErasures() -> getErasures
    90:91:void setErasures(java.lang.Integer) -> setErasures
    94:94:java.lang.Object getOther() -> getOther
    98:99:void setOther(java.lang.Object) -> setOther
    102:102:boolean hasStructuredAppend() -> hasStructuredAppend
    106:106:int getStructuredAppendParity() -> getStructuredAppendParity
    110:110:int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    39:43:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    51:85:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    39:39:com.google.zxing.common.BitMatrix getBits() -> getBits
    43:43:com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    53:82:com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    88:122:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    127:127:com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    131:137:void initArrays(int) -> initArrays
    141:193:int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    48:49:void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    55:55:com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    121:171:void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    63:88:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    93:93:com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    108:131:void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    134:134:int cap(int,int,int) -> cap
    146:154:void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    166:234:int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    61:63:com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    67:84:void transformPoints(float[]) -> transformPoints
    87:95:void transformPoints(float[],float[]) -> transformPoints
    101:118:com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    127:127:com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    132:140:com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    144:152:com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    52:210:java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    34:34:int round(float) -> round
    38:40:float distance(float,float,float,float) -> distance
    44:46:float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    51:79:com.google.zxing.ResultPoint[] detect() -> detect
    109:151:com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    170:212:int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    87:248:com.google.zxing.ResultPoint[] detect() -> detect
    253:264:com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    290:310:com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    325:339:boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    int generatorBase -> generatorBase
    85:85:com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    89:89:com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    96:104:com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    113:113:int addOrSubtract(int,int) -> addOrSubtract
    120:120:int exp(int) -> exp
    127:130:int log(int) -> log
    137:140:int inverse(int) -> inverse
    147:150:int multiply(int,int) -> multiply
    154:154:int getSize() -> getSize
    158:158:int getGeneratorBase() -> getGeneratorBase
    163:163:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    70:70:int[] getCoefficients() -> getCoefficients
    77:77:int getDegree() -> getDegree
    84:84:boolean isZero() -> isZero
    91:91:int getCoefficient(int) -> getCoefficient
    98:115:int evaluateAt(int) -> evaluateAt
    119:145:com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    149:167:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    171:182:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    186:197:com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    201:223:com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    228:261:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    59:86:void decode(int[],int) -> decode
    91:140:com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    145:160:int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    165:187:int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    40:49:com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    53:72:void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    59:59:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    67:86:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    92:92:void reset() -> reset
    104:140:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    144:158:int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.DataMatrixWriter -> com.google.zxing.datamatrix.DataMatrixWriter:
    43:43:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    49:97:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    108:153:com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
    163:177:com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    47:47:com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    62:64:com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    77:142:byte[] readCodewords() -> readCodewords
    156:165:boolean readModule(int,int,int,int) -> readModule
    180:212:int readUtah(int,int,int,int) -> readUtah
    225:257:int readCorner1(int,int) -> readCorner1
    270:302:int readCorner2(int,int) -> readCorner2
    315:347:int readCorner3(int,int) -> readCorner3
    360:392:int readCorner4(int,int) -> readCorner4
    403:437:com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    49:107:com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    111:111:int getNumDataCodewords() -> getNumDataCodewords
    115:115:byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT2_SET_CHARS -> TEXT_SHIFT2_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
    86:120:com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    129:185:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    195:271:void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    280:361:void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    371:403:void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    406:413:void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    419:444:void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    454:485:void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    492:494:int unrandomize255State(int,int) -> unrandomize255State
    37:37:int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode() -> $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    1:1:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    51:60:com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    75:105:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    117:134:void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    63:63:int getVersionNumber() -> getVersionNumber
    67:67:int getSymbolSizeRows() -> getSymbolSizeRows
    71:71:int getSymbolSizeColumns() -> getSymbolSizeColumns
    75:75:int getDataRegionSizeRows() -> getDataRegionSizeRows
    79:79:int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    83:83:int getTotalCodewords() -> getTotalCodewords
    87:87:com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    99:109:com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    166:166:java.lang.String toString() -> toString
    173:233:com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    156:156:int getCount() -> getCount
    160:160:int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    133:133:int getECCodewords() -> getECCodewords
    137:137:com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    59:213:com.google.zxing.common.DetectorResult detect() -> detect
    227:260:com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    273:302:com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    306:306:boolean isValid(com.google.zxing.ResultPoint) -> isValid
    310:310:int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    317:319:void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    329:349:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    357:393:com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    412:412:com.google.zxing.ResultPoint getFrom() -> getFrom
    416:416:com.google.zxing.ResultPoint getTo() -> getTo
    420:420:int getTransitions() -> getTransitions
    425:425:java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    436:436:int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.datamatrix.encoder.ASCIIEncoder -> com.google.zxing.datamatrix.encoder.ASCIIEncoder:
    23:23:int getEncodingMode() -> getEncodingMode
    29:72:void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    75:79:char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.google.zxing.datamatrix.encoder.Base256Encoder -> com.google.zxing.datamatrix.encoder.Base256Encoder:
    23:23:int getEncodingMode() -> getEncodingMode
    28:62:void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    65:70:char randomize255State(char,int) -> randomize255State
com.google.zxing.datamatrix.encoder.C40Encoder -> com.google.zxing.datamatrix.encoder.C40Encoder:
    23:23:int getEncodingMode() -> getEncodingMode
    29:68:void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    72:78:int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    82:84:void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
    93:128:void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    131:166:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    171:177:java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144:
    27:27:int getInterleavedBlockCount() -> getInterleavedBlockCount
    32:32:int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
com.google.zxing.datamatrix.encoder.DefaultPlacement -> com.google.zxing.datamatrix.encoder.DefaultPlacement:
    java.lang.CharSequence codewords -> codewords
    int numrows -> numrows
    int numcols -> numcols
    byte[] bits -> bits
    47:47:int getNumrows() -> getNumrows
    51:51:int getNumcols() -> getNumcols
    55:55:byte[] getBits() -> getBits
    59:59:boolean getBit(int,int) -> getBit
    63:64:void setBit(int,int,boolean) -> setBit
    67:67:boolean hasBit(int,int) -> hasBit
    71:119:void place() -> place
    122:134:void module(int,int,int,int) -> module
    144:152:void utah(int,int,int) -> utah
    155:163:void corner1(int) -> corner1
    166:174:void corner2(int) -> corner2
    177:185:void corner3(int) -> corner3
    188:196:void corner4(int) -> corner4
com.google.zxing.datamatrix.encoder.EdifactEncoder -> com.google.zxing.datamatrix.encoder.EdifactEncoder:
    23:23:int getEncodingMode() -> getEncodingMode
    29:49:void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    59:100:void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
    103:110:void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    113:134:java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.Encoder -> com.google.zxing.datamatrix.encoder.Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
com.google.zxing.datamatrix.encoder.EncoderContext -> com.google.zxing.datamatrix.encoder.EncoderContext:
    java.lang.String msg -> msg
    com.google.zxing.datamatrix.encoder.SymbolShapeHint shape -> shape
    com.google.zxing.Dimension minSize -> minSize
    com.google.zxing.Dimension maxSize -> maxSize
    java.lang.StringBuilder codewords -> codewords
    int pos -> pos
    int newEncoding -> newEncoding
    com.google.zxing.datamatrix.encoder.SymbolInfo symbolInfo -> symbolInfo
    int skipAtEnd -> skipAtEnd
    53:54:void setSymbolShape(com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    57:59:void setSizeConstraints(com.google.zxing.Dimension,com.google.zxing.Dimension) -> setSizeConstraints
    62:62:java.lang.String getMessage() -> getMessage
    66:67:void setSkipAtEnd(int) -> setSkipAtEnd
    70:70:char getCurrentChar() -> getCurrentChar
    74:74:char getCurrent() -> getCurrent
    78:78:java.lang.StringBuilder getCodewords() -> getCodewords
    82:83:void writeCodewords(java.lang.String) -> writeCodewords
    86:87:void writeCodeword(char) -> writeCodeword
    90:90:int getCodewordCount() -> getCodewordCount
    94:94:int getNewEncoding() -> getNewEncoding
    98:99:void signalEncoderChange(int) -> signalEncoderChange
    102:103:void resetEncoderSignal() -> resetEncoderSignal
    106:106:boolean hasMoreCharacters() -> hasMoreCharacters
    110:110:int getTotalMessageCharCount() -> getTotalMessageCharCount
    114:114:int getRemainingCharacters() -> getRemainingCharacters
    118:118:com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    122:123:void updateSymbolInfo() -> updateSymbolInfo
    126:129:void updateSymbolInfo(int) -> updateSymbolInfo
    132:133:void resetSymbolInfo() -> resetSymbolInfo
com.google.zxing.datamatrix.encoder.ErrorCorrection -> com.google.zxing.datamatrix.encoder.ErrorCorrection:
    int[] FACTOR_SETS -> FACTOR_SETS
    int[][] FACTORS -> FACTORS
    int MODULO_VALUE -> MODULO_VALUE
    int[] LOG -> LOG
    int[] ALOG -> ALOG
    102:137:java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeECC200
    142:142:java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    146:181:java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
com.google.zxing.datamatrix.encoder.HighLevelEncoder -> com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    char PAD -> PAD
    char LATCH_TO_C40 -> LATCH_TO_C40
    char LATCH_TO_BASE256 -> LATCH_TO_BASE256
    char UPPER_SHIFT -> UPPER_SHIFT
    char MACRO_05 -> MACRO_05
    char MACRO_06 -> MACRO_06
    char LATCH_TO_ANSIX12 -> LATCH_TO_ANSIX12
    char LATCH_TO_TEXT -> LATCH_TO_TEXT
    char LATCH_TO_EDIFACT -> LATCH_TO_EDIFACT
    char C40_UNLATCH -> C40_UNLATCH
    char X12_UNLATCH -> X12_UNLATCH
    java.lang.String MACRO_05_HEADER -> MACRO_05_HEADER
    java.lang.String MACRO_06_HEADER -> MACRO_06_HEADER
    java.lang.String MACRO_TRAILER -> MACRO_TRAILER
    int ASCII_ENCODATION -> ASCII_ENCODATION
    int C40_ENCODATION -> C40_ENCODATION
    int TEXT_ENCODATION -> TEXT_ENCODATION
    int X12_ENCODATION -> X12_ENCODATION
    int EDIFACT_ENCODATION -> EDIFACT_ENCODATION
    int BASE256_ENCODATION -> BASE256_ENCODATION
    129:131:char randomize253State(char,int) -> randomize253State
    142:142:java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    161:205:java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension) -> encodeHighLevel
    209:352:int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    360:373:int findMinimums(float[],int[],int,byte[]) -> findMinimums
    377:381:int getMinimumCount(byte[]) -> getMinimumCount
    385:385:boolean isDigit(char) -> isDigit
    389:389:boolean isExtendedASCII(char) -> isExtendedASCII
    393:393:boolean isNativeC40(char) -> isNativeC40
    397:397:boolean isNativeText(char) -> isNativeText
    401:401:boolean isNativeX12(char) -> isNativeX12
    405:407:boolean isX12TermSep(char) -> isX12TermSep
    411:411:boolean isNativeEDIFACT(char) -> isNativeEDIFACT
    415:415:boolean isSpecialB256(char) -> isSpecialB256
    426:439:int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    443:445:void illegalCharacter(char) -> illegalCharacter
com.google.zxing.datamatrix.encoder.SymbolInfo -> com.google.zxing.datamatrix.encoder.SymbolInfo:
    com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS -> PROD_SYMBOLS
    com.google.zxing.datamatrix.encoder.SymbolInfo[] symbols -> symbols
    boolean rectangular -> rectangular
    int dataCapacity -> dataCapacity
    int errorCodewords -> errorCodewords
    int matrixWidth -> matrixWidth
    int matrixHeight -> matrixHeight
    int dataRegions -> dataRegions
    int rsBlockData -> rsBlockData
    int rsBlockError -> rsBlockError
    72:73:void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    104:104:com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    108:108:com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> lookup
    112:114:com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    118:118:com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    126:152:com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean) -> lookup
    156:168:int getHorizontalDataRegions() -> getHorizontalDataRegions
    173:185:int getVerticalDataRegions() -> getVerticalDataRegions
    190:190:int getSymbolDataWidth() -> getSymbolDataWidth
    194:194:int getSymbolDataHeight() -> getSymbolDataHeight
    198:198:int getSymbolWidth() -> getSymbolWidth
    202:202:int getSymbolHeight() -> getSymbolHeight
    206:206:int getCodewordCount() -> getCodewordCount
    210:210:int getInterleavedBlockCount() -> getInterleavedBlockCount
    214:214:int getDataCapacity() -> getDataCapacity
    218:218:int getErrorCodewords() -> getErrorCodewords
    222:222:int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    226:226:int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    231:237:java.lang.String toString() -> toString
com.google.zxing.datamatrix.encoder.SymbolShapeHint -> com.google.zxing.datamatrix.encoder.SymbolShapeHint:
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE -> FORCE_NONE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_SQUARE -> FORCE_SQUARE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_RECTANGLE -> FORCE_RECTANGLE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values() -> values
    1:1:com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.encoder.TextEncoder -> com.google.zxing.datamatrix.encoder.TextEncoder:
    23:23:int getEncodingMode() -> getEncodingMode
    28:82:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.google.zxing.datamatrix.encoder.X12Encoder -> com.google.zxing.datamatrix.encoder.X12Encoder:
    23:23:int getEncodingMode() -> getEncodingMode
    29:48:void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    52:67:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    72:83:void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    62:62:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    69:83:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    89:89:void reset() -> reset
    102:123:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    73:85:byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    64:92:com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    96:97:int getBit(int,byte[]) -> getBit
    101:108:int getInt(byte[],byte[]) -> getInt
    112:112:int getCountry(byte[]) -> getCountry
    116:116:int getServiceClass(byte[]) -> getServiceClass
    120:120:int getPostCode2Length(byte[]) -> getPostCode2Length
    124:125:int getPostCode2(byte[]) -> getPostCode2
    129:136:java.lang.String getPostCode3(byte[]) -> getPostCode3
    142:193:java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    49:49:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    54:80:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    88:112:void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    50:50:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    57:98:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    103:104:void reset() -> reset
    107:113:void makeAbsolute(com.google.zxing.ResultPoint[],int,int) -> makeAbsolute
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    int MAX_DEPTH -> MAX_DEPTH
    com.google.zxing.Reader delegate -> delegate
    58:58:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    64:69:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    78:156:void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    159:172:com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    55:55:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    60:95:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    100:163:java.util.List processStructuredAppend(java.util.List) -> processStructuredAppend
com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator -> com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator:
    169:177:int compare(com.google.zxing.Result,com.google.zxing.Result) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    48:69:com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    107:228:com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    232:307:com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    82:83:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    float MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    float PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    82:161:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    166:222:void validatePattern(int) -> validatePattern
    231:251:void setCounters(com.google.zxing.common.BitArray) -> setCounters
    254:261:void counterAppend(int) -> counterAppend
    264:278:int findStartPattern() -> findStartPattern
    282:289:boolean arrayContains(char[],char) -> arrayContains
    294:342:int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    char[] START_END_CHARS -> START_END_CHARS
    char[] ALT_START_END_CHARS -> ALT_START_END_CHARS
    char[] CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED -> CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED
    char DEFAULT_GUARD -> DEFAULT_GUARD
    34:127:boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    170:211:int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    216:231:int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    239:535:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    58:61:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    66:182:boolean[] encode(java.lang.String) -> encode
    186:197:boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    102:175:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    180:210:int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    216:255:int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    259:264:char patternToChar(int) -> patternToChar
    268:320:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    39:42:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    47:79:boolean[] encode(java.lang.String) -> encode
    83:87:void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    69:127:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    132:162:int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    166:185:int toPattern(int[]) -> toPattern
    189:194:char patternToChar(int) -> patternToChar
    198:253:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    257:260:void checkChecksums(java.lang.CharSequence) -> checkChecksums
    264:275:void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    75:109:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    114:114:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    129:135:void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    46:50:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    55:91:boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    40:67:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    72:72:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    45:50:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    58:81:boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    37:51:java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    55:57:void add(int[],java.lang.String) -> add
    60:169:void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    89:131:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    150:174:void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    185:195:int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    215:230:void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    240:246:int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    261:282:int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    300:327:int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    339:353:int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN -> END_PATTERN
    42:46:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    51:73:boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    94:102:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    107:110:void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    74:114:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    119:122:void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    46:46:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    54:79:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    87:87:void reset() -> reset
    105:174:com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    193:221:void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    226:238:void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    253:279:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    37:37:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    53:71:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    78:93:com.google.zxing.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
    105:114:int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    120:120:int getDefaultMargin() -> getDefaultMargin
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    46:46:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    52:52:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    57:57:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    63:63:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    68:68:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    74:74:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    78:82:com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    39:39:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    48:51:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    59:71:java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    39:57:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    61:95:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    104:109:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    43:61:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    65:100:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    104:114:int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    119:124:int determineCheckDigit(int) -> determineCheckDigit
    133:142:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    147:178:java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    32:36:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    105:122:int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    128:128:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    151:240:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    249:249:boolean checkChecksum(java.lang.String) -> checkChecksum
    261:282:boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    286:286:int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    293:293:int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    312:338:int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    355:370:int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    31:31:int getDefaultMargin() -> getDefaultMargin
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    58:81:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    86:86:int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    91:91:boolean checkChecksum(java.lang.String) -> checkChecksum
    97:106:void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    111:111:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    121:152:java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    47:47:int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    51:51:int[] getDataCharacterCounters() -> getDataCharacterCounters
    55:55:float[] getOddRoundingErrors() -> getOddRoundingErrors
    59:59:float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    63:63:int[] getOddCounts() -> getOddCounts
    67:67:int[] getEvenCounts() -> getEvenCounts
    72:78:int parseFinderValue(int[],int[][]) -> parseFinderValue
    82:86:int count(int[]) -> count
    90:99:void increment(int[],float[]) -> increment
    102:111:void decrement(int[],float[]) -> decrement
    114:131:boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    30:30:int getValue() -> getValue
    34:34:int getChecksumPortion() -> getChecksumPortion
    39:39:java.lang.String toString() -> toString
    44:48:boolean equals(java.lang.Object) -> equals
    53:53:int hashCode() -> hashCode
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    37:37:int getValue() -> getValue
    41:41:int[] getStartEnd() -> getStartEnd
    45:45:com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    50:54:boolean equals(java.lang.Object) -> equals
    59:59:int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    30:30:com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    34:34:int getCount() -> getCount
    38:39:void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    68:89:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    93:107:void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    111:113:void reset() -> reset
    116:142:com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    151:160:boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    165:186:com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    193:282:com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    290:330:int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    337:357:com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    362:475:void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    67:100:int getRSSvalue(int[],int,boolean) -> getRSSvalue
    106:126:int combins(int,int) -> combins
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    43:83:com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    53:53:boolean mayBeLast() -> mayBeLast
    57:57:com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    61:61:com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    65:65:com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    69:69:boolean mustBeLast() -> mustBeLast
    74:76:java.lang.String toString() -> toString
    81:88:boolean equals(java.lang.Object) -> equals
    92:92:boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    97:97:int hashCode() -> hashCode
    101:101:int hashNotNull(java.lang.Object) -> hashNotNull
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    java.util.List pairs -> pairs
    int rowNumber -> rowNumber
    boolean wasReversed -> wasReversed
    39:39:java.util.List getPairs() -> getPairs
    43:43:int getRowNumber() -> getRowNumber
    47:47:boolean isReversed() -> isReversed
    51:51:boolean isEquivalent(java.util.List) -> isEquivalent
    56:56:java.lang.String toString() -> toString
    64:68:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    java.util.List rows -> rows
    int[] startEnd -> startEnd
    boolean startFromEven -> startFromEven
    129:141:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    146:148:void reset() -> reset
    153:186:java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    193:214:java.util.List checkRows(boolean) -> checkRows
    220:248:java.util.List checkRows(java.util.List,int) -> checkRows
    254:272:boolean isValidSequence(java.util.List) -> isValidSequence
    277:305:void storeRow(int,boolean) -> storeRow
    309:333:void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    337:357:boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    362:362:java.util.List getRows() -> getRows
    367:379:com.google.zxing.Result constructResult(java.util.List) -> constructResult
    384:410:boolean checkChecksum() -> checkChecksum
    415:422:int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    428:463:com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    468:533:void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    537:543:void reverseCounters(int[]) -> reverseCounters
    551:585:com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    592:689:com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    694:694:boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    699:786:void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    42:43:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    47:47:int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    42:47:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    51:54:int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    47:65:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    47:76:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    53:63:java.lang.String parseInformation() -> parseInformation
    67:94:void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    98:103:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    107:107:int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    46:55:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    47:56:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    44:49:void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    52:64:void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    67:79:void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    41:54:void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    48:48:com.google.zxing.common.BitArray getInformation() -> getInformation
    52:52:com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    58:90:com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    47:48:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    48:48:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    52:52:boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    49:49:int getPosition() -> getPosition
    53:54:void setPosition(int) -> setPosition
    57:58:void incrementPosition(int) -> incrementPosition
    61:61:boolean isAlpha() -> isAlpha
    65:65:boolean isNumeric() -> isNumeric
    69:69:boolean isIsoIec646() -> isIsoIec646
    73:74:void setNumeric() -> setNumeric
    77:78:void setAlpha() -> setAlpha
    81:82:void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    1:1:com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    45:45:char getValue() -> getValue
    49:49:boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    54:54:java.lang.String getNewString() -> getNewString
    58:58:boolean isRemaining() -> isRemaining
    62:62:int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    54:54:int getFirstDigit() -> getFirstDigit
    58:58:int getSecondDigit() -> getSecondDigit
    62:62:int getValue() -> getValue
    66:66:boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    70:70:boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    74:74:boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    41:41:int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    194:255:java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    259:273:java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    278:289:java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    48:68:java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    74:84:boolean isStillNumeric(int) -> isStillNumeric
    88:100:com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    104:104:int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    108:115:int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    119:131:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    138:157:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    161:187:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    191:214:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    218:242:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    246:269:boolean isStillIsoIec646(int) -> isStillIsoIec646
    274:362:com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    366:381:boolean isStillAlpha(int) -> isStillAlpha
    385:420:com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    424:438:boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    443:452:boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    458:467:boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    int NUMBER_OF_CODEWORDS -> NUMBER_OF_CODEWORDS
    int MAX_CODEWORDS_IN_BARCODE -> MAX_CODEWORDS_IN_BARCODE
    int MIN_ROWS_IN_BARCODE -> MIN_ROWS_IN_BARCODE
    int MAX_ROWS_IN_BARCODE -> MAX_ROWS_IN_BARCODE
    int MODULES_IN_CODEWORD -> MODULES_IN_CODEWORD
    int MODULES_IN_STOP_PATTERN -> MODULES_IN_STOP_PATTERN
    int BARS_IN_MODULE -> BARS_IN_MODULE
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    44:48:int getBitCountSum(int[]) -> getBitCountSum
    52:60:int[] toIntArray(java.util.Collection) -> toIntArray
    68:72:int getCodeword(int) -> getCodeword
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    55:55:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    61:65:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    70:70:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    76:78:com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    84:97:com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    101:104:int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    108:111:int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
    115:119:int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    123:127:int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    133:133:void reset() -> reset
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    int segmentIndex -> segmentIndex
    java.lang.String fileId -> fileId
    int[] optionalData -> optionalData
    boolean lastSegment -> lastSegment
    30:30:int getSegmentIndex() -> getSegmentIndex
    34:35:void setSegmentIndex(int) -> setSegmentIndex
    38:38:java.lang.String getFileId() -> getFileId
    42:43:void setFileId(java.lang.String) -> setFileId
    46:46:int[] getOptionalData() -> getOptionalData
    50:51:void setOptionalData(int[]) -> setOptionalData
    54:54:boolean isLastSegment() -> isLastSegment
    58:59:void setLastSegment(boolean) -> setLastSegment
com.google.zxing.pdf417.PDF417Writer -> com.google.zxing.pdf417.PDF417Writer:
    int WHITE_SPACE -> WHITE_SPACE
    48:78:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    86:86:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    97:127:com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int) -> bitMatrixFromEncoder
    139:149:com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    156:165:byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    int columnCount -> columnCount
    int errorCorrectionLevel -> errorCorrectionLevel
    int rowCountUpperPart -> rowCountUpperPart
    int rowCountLowerPart -> rowCountLowerPart
    int rowCount -> rowCount
    39:39:int getColumnCount() -> getColumnCount
    43:43:int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    47:47:int getRowCount() -> getRowCount
    51:51:int getRowCountUpperPart() -> getRowCountUpperPart
    55:55:int getRowCountLowerPart() -> getRowCountLowerPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    java.util.Map values -> values
    37:43:void setValue(int) -> setValue
    50:61:int[] getValue() -> getValue
    65:65:java.lang.Integer getConfidence(int) -> getConfidence
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint topLeft -> topLeft
    com.google.zxing.ResultPoint bottomLeft -> bottomLeft
    com.google.zxing.ResultPoint topRight -> topRight
    com.google.zxing.ResultPoint bottomRight -> bottomRight
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    61:67:void init(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> init
    70:76:com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
    80:116:com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    120:132:void calculateMinMaxValues() -> calculateMinMaxValues
    147:147:int getMinX() -> getMinX
    151:151:int getMaxX() -> getMaxX
    155:155:int getMinY() -> getMinY
    159:159:int getMaxY() -> getMaxY
    163:163:com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    167:167:com.google.zxing.ResultPoint getTopRight() -> getTopRight
    171:171:com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    175:175:com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    int BARCODE_ROW_UNKNOWN -> BARCODE_ROW_UNKNOWN
    int startX -> startX
    int endX -> endX
    int bucket -> bucket
    int value -> value
    int rowNumber -> rowNumber
    40:40:boolean hasValidRowNumber() -> hasValidRowNumber
    44:44:boolean isValidRowNumber(int) -> isValidRowNumber
    48:49:void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    52:52:int getWidth() -> getWidth
    56:56:int getStartX() -> getStartX
    60:60:int getEndX() -> getEndX
    64:64:int getBucket() -> getBucket
    68:68:int getValue() -> getValue
    72:72:int getRowNumber() -> getRowNumber
    76:77:void setRowNumber(int) -> setRowNumber
    81:81:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int ECI_USER_DEFINED -> ECI_USER_DEFINED
    int ECI_GENERAL_PURPOSE -> ECI_GENERAL_PURPOSE
    int ECI_CHARSET -> ECI_CHARSET
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.nio.charset.Charset DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.math.BigInteger[] EXP900 -> EXP900
    int NUMBER_OF_SEQUENCE_CODEWORDS -> NUMBER_OF_SEQUENCE_CODEWORDS
    int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
    100:160:com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    165:209:int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    224:267:int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    294:429:void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    448:533:int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder) -> byteCompaction
    545:583:int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    630:638:java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
    35:35:int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode() -> $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    1:1:com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    int ADJUST_ROW_NUMBER_SKIP -> ADJUST_ROW_NUMBER_SKIP
    com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata -> barcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns -> detectionResultColumns
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    int barcodeColumnCount -> barcodeColumnCount
    43:51:com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    55:59:void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    69:84:int adjustRowNumbers() -> adjustRowNumbers
    88:94:int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    98:119:void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    122:143:int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    147:168:int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    172:183:int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    187:224:void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    230:237:boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    241:241:int getBarcodeColumnCount() -> getBarcodeColumnCount
    245:245:int getBarcodeRowCount() -> getBarcodeRowCount
    249:249:int getBarcodeECLevel() -> getBarcodeECLevel
    253:254:void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    257:257:com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    261:262:void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    265:265:com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    270:293:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    int MAX_NEARBY_DISTANCE -> MAX_NEARBY_DISTANCE
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    com.google.zxing.pdf417.decoder.Codeword[] codewords -> codewords
    37:57:com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    61:61:int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    65:66:void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    69:69:com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    73:73:com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    77:77:com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    82:93:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    boolean isLeft -> isLeft
    36:41:void setRowNumbers() -> setRowNumbers
    48:111:int adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    115:130:int[] getRowHeights() -> getRowHeights
    137:172:int adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    176:217:com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    223:256:void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    259:259:boolean isLeft() -> isLeft
    264:264:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    float[][] RATIOS_TABLE -> RATIOS_TABLE
    51:55:int getDecodedValue(int[]) -> getDecodedValue
    59:73:int[] sampleBitCounts(int[]) -> sampleBitCounts
    77:78:int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    82:88:int getBitValue(int[]) -> getBitValue
    92:114:int getClosestDecodedValue(int[]) -> getClosestDecodedValue
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    int CODEWORD_SKEW_SIZE -> CODEWORD_SKEW_SIZE
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    58:123:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    129:138:com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    143:173:com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    177:181:int getMax(int[]) -> getMax
    187:202:com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    211:230:com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    235:248:void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    252:277:com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    299:326:com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    330:355:com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    359:359:boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    366:398:int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    409:456:com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    465:484:int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    488:488:int getNumberOfECCodeWords(int) -> getNumberOfECCodeWords
    497:511:int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    515:516:boolean checkCodewordSkew(int,int,int) -> checkCodewordSkew
    521:533:com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    546:553:int correctErrors(int[],int[],int) -> correctErrors
    560:580:void verifyCodewordCount(int[],int) -> verifyCodewordCount
    583:597:int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    601:601:int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    605:605:int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    609:625:java.lang.String toString(com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> toString
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    49:94:int decode(int[],int,int[]) -> decode
    100:145:com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    150:162:int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    168:185:int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    56:56:com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    60:60:com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    64:72:com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    76:76:int add(int,int) -> add
    80:80:int subtract(int,int) -> subtract
    84:84:int exp(int) -> exp
    88:91:int log(int) -> log
    95:98:int inverse(int) -> inverse
    102:105:int multiply(int,int) -> multiply
    109:109:int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    56:56:int[] getCoefficients() -> getCoefficients
    63:63:int getDegree() -> getDegree
    70:70:boolean isZero() -> isZero
    77:77:int getCoefficient(int) -> getCoefficient
    84:101:int evaluateAt(int) -> evaluateAt
    105:131:com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    135:141:com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    145:162:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    166:171:com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    175:186:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    190:201:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    205:227:com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    232:257:java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int[] INDEXES_START_PATTERN -> INDEXES_START_PATTERN
    int[] INDEXES_STOP_PATTERN -> INDEXES_STOP_PATTERN
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_PATTERN -> START_PATTERN
    int[] STOP_PATTERN -> STOP_PATTERN
    int MAX_PIXEL_DRIFT -> MAX_PIXEL_DRIFT
    int MAX_PATTERN_DRIFT -> MAX_PATTERN_DRIFT
    int SKIPPED_ROW_COUNT_MAX -> SKIPPED_ROW_COUNT_MAX
    int ROW_STEP -> ROW_STEP
    int BARCODE_MIN_HEIGHT -> BARCODE_MIN_HEIGHT
    79:87:com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    98:140:java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    159:172:com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    176:179:void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    187:241:com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    261:299:int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    314:342:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    java.util.List points -> points
    38:38:com.google.zxing.common.BitMatrix getBits() -> getBits
    42:42:java.util.List getPoints() -> getPoints
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    47:48:void set(int,int,byte) -> set
    57:58:void startRow() -> startRow
    61:61:com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    65:65:byte[][] getMatrix() -> getMatrix
    75:80:byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    43:44:void set(int,byte) -> set
    53:54:void set(int,boolean) -> set
    61:64:void addBar(boolean,int) -> addBar
    79:83:byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    1:1:com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    39:39:int getMinCols() -> getMinCols
    43:43:int getMaxCols() -> getMaxCols
    47:47:int getMinRows() -> getMinRows
    51:51:int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    java.nio.charset.Charset encoding -> encoding
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    539:539:com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    553:557:int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    572:573:int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    577:593:void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    601:638:void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    648:680:void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    691:729:int[] determineDimensions(int,int) -> determineDimensions
    741:745:void setDimensions(int,int,int,int) -> setDimensions
    751:752:void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    758:759:void setCompact(boolean) -> setCompact
    765:766:void setEncoding(java.nio.charset.Charset) -> setEncoding
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    138:141:int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    152:167:int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    178:201:java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    int ECI_USER_DEFINED -> ECI_USER_DEFINED
    int ECI_GENERAL_PURPOSE -> ECI_GENERAL_PURPOSE
    int ECI_CHARSET -> ECI_CHARSET
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    java.nio.charset.Charset DEFAULT_ENCODING -> DEFAULT_ENCODING
    165:236:java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction,java.nio.charset.Charset) -> encodeHighLevel
    255:362:int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    381:417:void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    420:440:void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    444:444:boolean isDigit(char) -> isDigit
    448:448:boolean isAlphaUpper(char) -> isAlphaUpper
    452:452:boolean isAlphaLower(char) -> isAlphaLower
    456:456:boolean isMixed(char) -> isMixed
    460:460:boolean isPunctuation(char) -> isPunctuation
    464:464:boolean isText(char) -> isText
    475:488:int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    499:526:int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    539:567:int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
    571:584:void encodingECI(int,java.lang.StringBuilder) -> encodingECI
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    51:51:com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    64:64:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    72:102:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    108:108:void reset() -> reset
    120:192:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    196:215:float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    44:44:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    54:81:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    87:117:com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    boolean mirror -> mirror
    53:86:com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    98:137:com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    141:142:int copyBit(int,int,int) -> copyBit
    155:204:byte[] readCodewords() -> readCodewords
    211:217:void remask() -> remask
    228:231:void setMirror(boolean) -> setMirror
    235:243:void mirror() -> mirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    51:111:com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    115:115:int getNumDataCodewords() -> getNumDataCodewords
    119:119:byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    59:66:void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    76:79:com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    88:88:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    98:98:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    108:108:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    118:118:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    128:128:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    138:139:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    149:150:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    160:160:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    60:135:com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    145:175:void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    181:211:void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    220:245:void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    248:251:char toAlphaNumericChar(int) -> toAlphaNumericChar
    259:291:void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    297:333:void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    336:351:int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    45:45:com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    60:69:com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    73:73:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    89:138:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    145:172:com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
    184:201:void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] ENUM$VALUES -> ENUM$VALUES
    45:45:int getBits() -> getBits
    53:56:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
    1:1:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    1:1:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    86:95:int numBitsDiffering(int,int) -> numBitsDiffering
    106:114:com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    119:146:com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    150:150:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    154:154:byte getDataMask() -> getDataMask
    159:159:int hashCode() -> hashCode
    164:169:boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] ENUM$VALUES -> ENUM$VALUES
    53:76:com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    86:95:int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    99:99:int getBits() -> getBits
    1:1:com.google.zxing.qrcode.decoder.Mode[] values() -> values
    1:1:com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    boolean mirrored -> mirrored
    39:39:boolean isMirrored() -> isMirrored
    48:55:void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    66:66:int getVersionNumber() -> getVersionNumber
    70:70:int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    74:74:int getTotalCodewords() -> getTotalCodewords
    78:78:int getDimensionForVersion() -> getDimensionForVersion
    82:82:com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    93:99:com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    104:107:com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    111:133:com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    140:175:com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    239:239:java.lang.String toString() -> toString
    246:574:com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    229:229:int getCount() -> getCount
    233:233:int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    194:194:int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    198:202:int getNumBlocks() -> getNumBlocks
    206:206:int getTotalECCodewords() -> getTotalECCodewords
    210:210:com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    41:45:boolean aboutEquals(float,float,float) -> aboutEquals
    53:56:com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    88:153:com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    161:161:float centerFromEnd(int[],int) -> centerFromEnd
    170:177:boolean foundPatternCross(int[]) -> foundPatternCross
    193:241:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    256:274:com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    49:49:com.google.zxing.common.BitMatrix getImage() -> getImage
    53:53:com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    64:64:com.google.zxing.common.DetectorResult detect() -> detect
    77:83:com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    89:141:com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    149:183:com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    190:191:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    202:216:int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    232:233:float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    242:258:float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    268:295:float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    309:359:float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    380:402:com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    44:44:float getEstimatedModuleSize() -> getEstimatedModuleSize
    48:48:int getCount() -> getCount
    62:66:boolean aboutEquals(float,float,float) -> aboutEquals
    75:79:com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    69:69:com.google.zxing.common.BitMatrix getImage() -> getImage
    73:73:java.util.List getPossibleCenters() -> getPossibleCenters
    77:183:com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    191:191:float centerFromEnd(int[],int) -> centerFromEnd
    200:219:boolean foundPatternCross(int[]) -> foundPatternCross
    223:228:int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    244:319:boolean crossCheckDiagonal(int,int,int,int) -> crossCheckDiagonal
    335:397:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    407:466:float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    488:518:boolean handlePossibleCenter(int[],int,int,boolean) -> handlePossibleCenter
    528:549:int findRowSkip() -> findRowSkip
    558:579:boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    590:640:com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    670:675:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    654:656:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    38:38:com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    42:42:com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    46:46:com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    30:30:byte[] getDataBytes() -> getDataBytes
    34:34:byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    38:38:int getHeight() -> getHeight
    42:42:int getWidth() -> getWidth
    46:46:byte get(int,int) -> get
    53:53:byte[][] getArray() -> getArray
    57:58:void set(int,int,byte) -> set
    61:62:void set(int,int,int) -> set
    65:66:void set(int,int,boolean) -> set
    69:74:void clear(byte) -> clear
    78:95:java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode -> $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode
    58:61:int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    72:72:com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> encode
    80:161:com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    169:172:int getAlphanumericCode(int) -> getAlphanumericCode
    176:176:com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    184:206:com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    212:226:boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    234:245:int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    250:264:com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    271:295:void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    308:352:void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    364:423:com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    427:438:byte[] generateECBytes(byte[],int) -> generateECBytes
    445:446:void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    453:458:void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    467:483:void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    486:507:void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    510:531:void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    537:544:void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    549:570:void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    573:576:void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
    38:38:int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode() -> $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int N1 -> N1
    int N2 -> N2
    int N3 -> N3
    int N4 -> N4
    41:41:int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    50:62:int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    71:102:int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    106:111:boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    115:120:boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
    128:142:int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    152:183:boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    191:214:int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    127:128:void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    137:145:void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    155:163:void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    168:193:void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    198:216:void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    223:266:void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    274:279:int findMSBSet(int) -> findMSBSet
    308:320:int calculateBCHCode(int,int) -> calculateBCHCode
    328:344:void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    349:356:void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    360:360:boolean isEmpty(int) -> isEmpty
    366:377:void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    381:385:void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    390:396:void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    401:407:void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    413:418:void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    421:426:void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    431:458:void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    462:483:void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    com.google.zxing.qrcode.decoder.Version version -> version
    int maskPattern -> maskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    42:42:com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    46:46:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    50:50:com.google.zxing.qrcode.decoder.Version getVersion() -> getVersion
    54:54:int getMaskPattern() -> getMaskPattern
    58:58:com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    63:80:java.lang.String toString() -> toString
    84:85:void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    88:89:void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    92:93:void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    96:97:void setMaskPattern(int) -> setMaskPattern
    100:101:void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    105:105:boolean isValidMaskPattern(int) -> isValidMaskPattern
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    93:94:com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    98:99:com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    103:104:com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    108:109:com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    113:114:com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    118:119:com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    123:124:com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    128:129:com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    133:134:com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    138:139:com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    143:144:com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    148:149:com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    153:154:com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    158:159:com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    163:164:com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    168:169:com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    173:174:com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    178:179:com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    183:184:com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    188:189:com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    193:194:com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    198:199:com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    205:206:void display(android.view.View,java.lang.String) -> display
    209:210:void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    213:214:void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    217:272:void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    277:278:void clearCache() -> clearCache
    281:282:void clearMemoryCache() -> clearMemoryCache
    285:286:void clearDiskCache() -> clearDiskCache
    289:290:void clearCache(java.lang.String) -> clearCache
    293:294:void clearMemoryCache(java.lang.String) -> clearMemoryCache
    297:298:void clearDiskCache(java.lang.String) -> clearDiskCache
    301:302:void flushCache() -> flushCache
    305:306:void closeCache() -> closeCache
    309:309:java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    313:316:android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    323:323:boolean supportPause() -> supportPause
    328:328:boolean supportResume() -> supportResume
    333:333:boolean supportCancel() -> supportCancel
    338:340:void pause() -> pause
    344:348:void resume() -> resume
    352:357:void cancel() -> cancel
    361:361:boolean isPaused() -> isPaused
    366:366:boolean isCancelled() -> isCancelled
    373:380:com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    384:394:boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    47:47:java.lang.Object access$0(com.lidroid.xutils.BitmapUtils) -> access$0
    45:45:boolean access$1(com.lidroid.xutils.BitmapUtils) -> access$1
    46:46:boolean access$2(com.lidroid.xutils.BitmapUtils) -> access$2
    50:50:com.lidroid.xutils.bitmap.BitmapGlobalConfig access$3(com.lidroid.xutils.BitmapUtils) -> access$3
    372:372:com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$4(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$4
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    419:445:android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    449:450:void updateProgress(long,long) -> updateProgress
    457:473:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    477:493:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    497:500:void onCancelled(android.graphics.Bitmap) -> onCancelled
    503:510:android.view.View getTargetContainer() -> getTargetContainer
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:void onCancelled(java.lang.Object) -> onCancelled
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    398:398:java.lang.String access$3(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$3
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    63:91:com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    95:96:com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    100:102:com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    106:109:com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    113:117:com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    121:126:com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    130:130:com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    134:135:com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    139:140:com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    144:144:android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    148:148:com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    155:164:void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    167:180:void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    184:193:void replace(java.lang.Object) -> replace
    196:209:void replaceAll(java.util.List) -> replaceAll
    213:222:void save(java.lang.Object) -> save
    225:238:void saveAll(java.util.List) -> saveAll
    241:252:boolean saveBindingId(java.lang.Object) -> saveBindingId
    256:271:void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    274:284:void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    287:297:void delete(java.lang.Object) -> delete
    300:310:void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    313:325:void deleteAll(java.util.List) -> deleteAll
    328:329:void deleteAll(java.lang.Class) -> deleteAll
    332:342:void update(java.lang.Object,java.lang.String[]) -> update
    345:355:void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    358:370:void updateAll(java.util.List,java.lang.String[]) -> updateAll
    373:385:void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    389:416:java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    421:445:java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    449:449:java.lang.Object findFirst(java.lang.Class) -> findFirst
    454:480:java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    484:484:java.util.List findAll(java.lang.Class) -> findAll
    488:500:com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    504:518:com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    522:536:java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    540:556:java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    560:565:long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    569:569:long count(java.lang.Class) -> count
    635:647:android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    652:663:void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    666:679:boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    686:699:long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    703:711:void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    714:736:boolean tableIsExist(java.lang.Class) -> tableIsExist
    740:759:void dropDb() -> dropDb
    762:766:void dropTable(java.lang.Class) -> dropTable
    769:774:void close() -> close
    778:781:void debugSql(java.lang.String) -> debugSql
    787:793:void beginTransaction() -> beginTransaction
    796:799:void setTransactionSuccessful() -> setTransactionSuccessful
    802:809:void endTransaction() -> endTransaction
    813:823:void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    826:832:void execNonQuery(java.lang.String) -> execNonQuery
    835:839:android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    844:848:android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    587:587:android.content.Context getContext() -> getContext
    591:591:java.lang.String getDbName() -> getDbName
    595:598:void setDbName(java.lang.String) -> setDbName
    601:601:int getDbVersion() -> getDbVersion
    605:606:void setDbVersion(int) -> setDbVersion
    609:609:com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    613:614:void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    617:617:java.lang.String getDbDir() -> getDbDir
    626:627:void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    868:871:void put(java.lang.String,java.lang.Object) -> put
    874:874:java.lang.Object get(java.lang.String) -> get
    878:882:void setSeq(long) -> setSeq
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    146:146:org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    152:155:com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    159:160:com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    164:165:com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    169:171:com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    175:176:com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    180:181:com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    185:186:com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    190:193:com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    197:199:com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    203:204:com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    208:210:com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    214:215:com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    219:220:com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    227:227:com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    232:235:com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    239:239:com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    243:246:com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    253:253:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    258:258:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    263:263:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    268:268:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    273:273:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    278:278:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    283:283:com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    288:288:com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    294:309:com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    315:325:com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    330:336:com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    103:106:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    112:125:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    45:46:void inject(android.view.View) -> inject
    49:50:void inject(android.app.Activity) -> inject
    53:54:void inject(android.preference.PreferenceActivity) -> inject
    57:58:void inject(java.lang.Object,android.view.View) -> inject
    61:62:void inject(java.lang.Object,android.app.Activity) -> inject
    65:66:void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    69:70:void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    75:170:void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    35:39:com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    43:72:com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    76:88:int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    42:42:com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    46:47:void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    50:50:android.view.animation.Animation getAnimation() -> getAnimation
    54:55:void setAnimation(android.view.animation.Animation) -> setAnimation
    58:58:android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    62:63:void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    66:66:android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    70:71:void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    74:74:boolean isAutoRotation() -> isAutoRotation
    78:79:void setAutoRotation(boolean) -> setAutoRotation
    82:82:boolean isShowOriginal() -> isShowOriginal
    86:87:void setShowOriginal(boolean) -> setShowOriginal
    90:90:android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    94:95:void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    98:98:com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    102:103:void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    106:106:com.lidroid.xutils.task.Priority getPriority() -> getPriority
    110:111:void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    115:116:java.lang.String toString() -> toString
    120:130:com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    80:89:com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    94:96:void initBitmapCache() -> initBitmapCache
    99:99:java.lang.String getDiskCachePath() -> getDiskCachePath
    103:110:com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    114:115:void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    118:118:long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    122:123:void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    126:126:int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    130:131:void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    134:134:int getDefaultReadTimeout() -> getDefaultReadTimeout
    138:139:void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    142:145:com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    149:149:int getMemoryCacheSize() -> getMemoryCacheSize
    153:161:void setMemoryCacheSize(int) -> setMemoryCacheSize
    167:174:void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    177:177:int getDiskCacheSize() -> getDiskCacheSize
    181:187:void setDiskCacheSize(int) -> setDiskCacheSize
    190:190:int getThreadPoolSize() -> getThreadPoolSize
    194:195:void setThreadPoolSize(int) -> setThreadPoolSize
    198:198:com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    202:202:com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    206:206:boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    210:211:void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    214:214:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    218:219:void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    222:222:com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    226:230:void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    233:233:com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    237:238:void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    241:241:int getMemoryClass() -> getMemoryClass
    359:360:void clearCache() -> clearCache
    363:364:void clearMemoryCache() -> clearMemoryCache
    367:368:void clearDiskCache() -> clearDiskCache
    371:372:void clearCache(java.lang.String) -> clearCache
    375:376:void clearMemoryCache(java.lang.String) -> clearMemoryCache
    379:380:void clearDiskCache(java.lang.String) -> clearDiskCache
    383:384:void flushCache() -> flushCache
    387:388:void closeCache() -> closeCache
    62:62:com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    263:308:java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    313:355:void onPostExecute(java.lang.Object[]) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    60:78:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    82:85:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    35:35:void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    45:45:void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    57:57:void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    81:82:void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    85:92:void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    95:102:void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    105:110:android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    1:1:com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    30:35:void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    39:40:void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    44:50:void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    30:30:com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    35:38:void draw(android.graphics.Canvas) -> draw
    42:45:void setAlpha(int) -> setAlpha
    49:52:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    56:56:int getOpacity() -> getOpacity
    61:64:void setBounds(int,int,int,int) -> setBounds
    68:71:void setBounds(android.graphics.Rect) -> setBounds
    75:78:void setChangingConfigurations(int) -> setChangingConfigurations
    82:82:int getChangingConfigurations() -> getChangingConfigurations
    87:90:void setDither(boolean) -> setDither
    94:97:void setFilterBitmap(boolean) -> setFilterBitmap
    101:104:void invalidateSelf() -> invalidateSelf
    108:111:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    115:118:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    122:125:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    129:132:void clearColorFilter() -> clearColorFilter
    136:136:boolean isStateful() -> isStateful
    141:141:boolean setState(int[]) -> setState
    146:146:int[] getState() -> getState
    151:151:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    156:156:boolean setVisible(boolean,boolean) -> setVisible
    161:161:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    166:166:int getIntrinsicWidth() -> getIntrinsicWidth
    171:171:int getIntrinsicHeight() -> getIntrinsicHeight
    176:176:int getMinimumWidth() -> getMinimumWidth
    181:181:int getMinimumHeight() -> getMinimumHeight
    186:186:boolean getPadding(android.graphics.Rect) -> getPadding
    191:191:android.graphics.drawable.Drawable mutate() -> mutate
    196:196:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    61:81:void initMemoryCache() -> initMemoryCache
    91:109:void initDiskCache() -> initDiskCache
    112:115:void setMemoryCacheSize(int) -> setMemoryCacheSize
    118:123:void setDiskCacheSize(int) -> setDiskCacheSize
    126:131:void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    135:205:android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    209:219:android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    230:234:android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    244:248:java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    261:291:android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    299:301:void clearCache() -> clearCache
    304:307:void clearMemoryCache() -> clearMemoryCache
    310:322:void clearDiskCache() -> clearDiskCache
    326:328:void clearCache(java.lang.String) -> clearCache
    331:337:void clearMemoryCache(java.lang.String) -> clearMemoryCache
    340:349:void clearDiskCache(java.lang.String) -> clearDiskCache
    356:365:void flush() -> flush
    372:384:void close() -> close
    393:414:android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    418:453:android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    77:78:int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    1:1:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    467:478:boolean equals(java.lang.Object) -> equals
    483:483:int hashCode() -> hashCode
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    33:48:android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    54:69:android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    75:90:android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    96:111:android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    117:125:android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    131:139:android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    145:153:android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    159:167:android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    173:192:int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    24:24:com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    31:31:com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    35:35:int getWidth() -> getWidth
    39:39:int getHeight() -> getHeight
    44:44:java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    40:90:long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    40:40:android.content.Context getContext() -> getContext
    44:45:void setContext(android.content.Context) -> setContext
    48:49:void setDefaultExpiry(long) -> setDefaultExpiry
    52:52:long getDefaultExpiry() -> getDefaultExpiry
    56:56:int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    60:61:void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    64:64:int getDefaultReadTimeout() -> getDefaultReadTimeout
    68:69:void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    52:55:java.lang.Long get(java.lang.Object) -> get
    61:64:java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    69:76:boolean containsKey(java.lang.Object) -> containsKey
    81:81:java.lang.Long remove(java.lang.Object) -> remove
    86:87:void clear() -> clear
    1:1:java.lang.Object get(java.lang.Object) -> get
    1:1:java.lang.Object remove(java.lang.Object) -> remove
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    191:234:com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    238:268:void readJournal() -> readJournal
    271:330:void readJournalLine(java.lang.String) -> readJournalLine
    337:353:void processJournal() -> processJournal
    360:397:void rebuildJournal() -> rebuildJournal
    400:403:void deleteIfExists(java.io.File) -> deleteIfExists
    406:412:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    415:421:long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    426:435:java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    440:441:com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    450:505:com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    513:514:com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    518:537:com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    544:544:java.io.File getDirectory() -> getDirectory
    552:552:long getMaxSize() -> getMaxSize
    560:562:void setMaxSize(long) -> setMaxSize
    570:570:long size() -> size
    574:626:void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    633:635:boolean journalRebuildRequired() -> journalRebuildRequired
    639:640:boolean remove(java.lang.String) -> remove
    650:673:boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    680:680:boolean isClosed() -> isClosed
    684:687:void checkNotClosed() -> checkNotClosed
    693:696:void flush() -> flush
    703:714:void close() -> close
    717:721:void trimToSize() -> trimToSize
    729:731:void delete() -> delete
    734:734:java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    1036:1048:java.lang.String readFully(java.io.Reader) -> readFully
    1056:1068:void deleteContents(java.io.File) -> deleteContents
    1216:1216:com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    1220:1223:void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    137:137:java.io.Writer access$0(com.lidroid.xutils.cache.LruDiskCache) -> access$0
    716:716:void access$1(com.lidroid.xutils.cache.LruDiskCache) -> access$1
    632:632:boolean access$2(com.lidroid.xutils.cache.LruDiskCache) -> access$2
    359:359:void access$3(com.lidroid.xutils.cache.LruDiskCache) -> access$3
    140:140:void access$4(com.lidroid.xutils.cache.LruDiskCache,int) -> access$4
    517:517:com.lidroid.xutils.cache.LruDiskCache$Editor access$5(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$5
    733:733:java.lang.String access$6(java.io.InputStream) -> access$6
    135:135:int access$7(com.lidroid.xutils.cache.LruDiskCache) -> access$7
    129:129:java.io.File access$8(com.lidroid.xutils.cache.LruDiskCache) -> access$8
    791:791:java.io.OutputStream access$9() -> access$9
    573:573:void access$10(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$10
    649:649:boolean access$11(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$11
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    156:166:java.lang.Void call() -> call
    1:1:java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    795:795:void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    813:814:void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    821:831:java.io.InputStream newInputStream(int) -> newInputStream
    841:842:java.lang.String getString(int) -> getString
    853:874:java.io.OutputStream newOutputStream(int) -> newOutputStream
    882:889:void set(int,java.lang.String) -> set
    896:903:void commit() -> commit
    910:911:void abort() -> abort
    914:920:void abortUnlessCommitted() -> abortUnlessCommitted
    804:804:void access$0(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$0
    802:802:com.lidroid.xutils.cache.LruDiskCache$Entry access$2(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$2
    803:803:boolean[] access$3(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$3
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    930:934:void write(int) -> write
    939:944:void write(byte[],int,int) -> write
    949:953:void close() -> close
    958:962:void flush() -> flush
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    997:1001:java.lang.String getLengths() -> getLengths
    1008:1019:void setLengths(java.lang.String[],int) -> setLengths
    1022:1022:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    1026:1026:java.io.File getCleanFile(int) -> getCleanFile
    1030:1030:java.io.File getDirtyFile(int) -> getDirtyFile
    979:979:boolean access$0(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$0
    969:969:void access$1(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1
    984:984:com.lidroid.xutils.cache.LruDiskCache$Editor access$2(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$2
    967:967:java.lang.String access$3(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$3
    979:979:void access$5(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$5
    984:984:void access$6(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$6
    1007:1007:void access$7(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$7
    974:974:long[] access$8(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$8
    969:969:long access$9(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$9
    989:989:long access$10(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$10
    989:989:void access$11(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$11
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    759:759:com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    766:766:java.io.FileInputStream getInputStream(int) -> getInputStream
    773:773:java.lang.String getString(int) -> getString
    780:780:long getLength(int) -> getLength
    785:788:void close() -> close
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    1128:1134:void close() -> close
    1145:1192:java.lang.String readLine() -> readLine
    1204:1210:void fillBuf() -> fillBuf
    1076:1076:java.nio.charset.Charset access$0(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$0
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    1170:1174:java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    57:59:void setMaxSize(int) -> setMaxSize
    68:116:java.lang.Object get(java.lang.Object) -> get
    128:128:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    138:158:java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    166:185:void trimToSize(int) -> trimToSize
    193:210:java.lang.Object remove(java.lang.Object) -> remove
    214:214:boolean containsKey(java.lang.Object) -> containsKey
    233:233:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    251:251:java.lang.Object create(java.lang.Object) -> create
    255:262:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    273:273:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    280:282:void evictAll() -> evictAll
    290:290:int size() -> size
    299:299:int maxSize() -> maxSize
    306:306:int hitCount() -> hitCount
    314:314:int missCount() -> missCount
    321:321:int createCount() -> createCount
    328:328:int putCount() -> putCount
    335:335:int evictionCount() -> evictionCount
    343:343:java.util.Map snapshot() -> snapshot
    347:349:java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    18:24:java.lang.String generate(java.lang.String) -> generate
    28:36:java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    15:15:java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    26:27:java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    32:32:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    14:14:byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    19:19:byte[] getFieldValue(java.lang.String) -> getFieldValue
    24:24:java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    29:29:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    15:15:java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    15:15:java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    26:27:java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    32:32:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    19:31:com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    35:39:com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    43:44:void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    47:59:boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    17:17:java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    22:23:java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    28:29:java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    34:34:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    15:15:java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    15:15:java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    15:15:java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    15:15:java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    15:15:java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    26:26:java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    31:31:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    15:15:java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    20:21:java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    26:27:java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    32:32:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    14:14:java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    19:19:java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    24:24:java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    29:29:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    1:1:java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    1:1:java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    1:1:java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> ENUM$VALUES
    18:18:java.lang.String toString() -> toString
    1:1:com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    1:1:com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    29:67:java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    71:79:com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    108:109:void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    113:113:java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    117:121:void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    91:95:long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    48:48:com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    52:53:com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    57:58:com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    62:63:com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    67:68:com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    72:73:com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    77:78:com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    82:83:com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    87:88:com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    92:93:com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    97:98:com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    102:103:com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    107:108:com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    112:113:com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    117:118:com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    122:123:com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    127:127:java.lang.Class getEntityType() -> getEntityType
    132:166:java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    25:33:java.util.List getAllFromDb() -> getAllFromDb
    37:45:java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    35:43:java.util.List getAllFromDb() -> getAllFromDb
    47:55:java.lang.Object getFirstFromDb() -> getFirstFromDb
    59:60:void setColumnValue(java.lang.Object) -> setColumnValue
    63:63:java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    44:44:com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    48:49:com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    53:54:com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    58:59:com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    63:64:com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    68:69:com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    73:74:com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    78:82:com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    86:90:com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    94:94:com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    98:98:com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    102:106:com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    110:114:com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    118:119:com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    123:124:com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    129:145:java.lang.String toString() -> toString
    149:149:java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    167:167:java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    40:40:java.lang.String getSql() -> getSql
    44:45:void setSql(java.lang.String) -> setSql
    48:48:java.util.LinkedList getBindArgs() -> getBindArgs
    52:55:java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    59:67:java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    71:76:void addBindArg(java.lang.Object) -> addBindArg
    79:84:void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    87:92:void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    36:61:com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    68:93:com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    99:99:java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    103:118:com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    122:135:com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    139:146:com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    153:185:com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    190:218:com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    224:260:com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    264:271:com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    276:299:java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    46:46:com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    58:60:com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    72:73:com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    85:86:com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    90:91:com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    95:96:com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    100:100:int getWhereItemSize() -> getWhereItemSize
    105:112:java.lang.String toString() -> toString
    116:238:void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    57:75:void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    79:80:java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    84:101:java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    105:105:com.lidroid.xutils.db.table.Table getTable() -> getTable
    109:110:void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    118:118:int getIndex() -> getIndex
    122:122:java.lang.String getColumnName() -> getColumnName
    126:126:java.lang.Object getDefaultValue() -> getDefaultValue
    130:130:java.lang.reflect.Field getColumnField() -> getColumnField
    134:134:com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    138:138:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    62:62:boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    66:83:java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    87:104:java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    109:129:java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    134:139:java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    143:147:java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    151:151:boolean isTransient(java.lang.reflect.Field) -> isTransient
    155:155:boolean isForeign(java.lang.reflect.Field) -> isForeign
    159:159:boolean isFinder(java.lang.reflect.Field) -> isFinder
    163:163:boolean isUnique(java.lang.reflect.Field) -> isUnique
    167:167:boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    175:179:java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    185:189:java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    194:198:java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    203:215:java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    219:219:boolean isStartWithIs(java.lang.String) -> isStartWithIs
    223:232:java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    236:248:java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    32:32:java.lang.String getString(java.lang.String) -> getString
    36:36:int getInt(java.lang.String) -> getInt
    40:44:boolean getBoolean(java.lang.String) -> getBoolean
    48:48:double getDouble(java.lang.String) -> getDouble
    52:52:float getFloat(java.lang.String) -> getFloat
    56:56:long getLong(java.lang.String) -> getLong
    60:61:java.util.Date getDate(java.lang.String) -> getDate
    65:66:java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    70:71:void add(java.lang.String,java.lang.String) -> add
    77:77:java.util.HashMap getDataMap() -> getDataMap
    85:85:boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    32:32:java.lang.Class getTargetEntityType() -> getTargetEntityType
    36:36:java.lang.String getTargetColumnName() -> getTargetColumnName
    41:74:void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    78:78:java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    83:83:java.lang.Object getDefaultValue() -> getDefaultValue
    88:88:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    44:44:java.lang.String getForeignColumnName() -> getForeignColumnName
    48:48:java.lang.Class getForeignEntityType() -> getForeignEntityType
    54:89:void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    94:143:java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    148:148:com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    158:158:java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    36:41:boolean isAutoIncrement() -> isAutoIncrement
    45:64:void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    68:76:java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    62:69:com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    73:75:void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    78:93:void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    98:98:boolean isCheckedDatabase() -> isCheckedDatabase
    102:103:void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    35:39:java.lang.String getTableName(java.lang.Class) -> getTableName
    43:47:java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    58:67:java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    71:104:void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    108:111:com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    121:156:com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    160:161:java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    165:166:java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    77:77:int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    65:66:void setCacheSize(int) -> setCacheSize
    69:70:void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    73:73:long getDefaultExpiryTime() -> getDefaultExpiryTime
    77:78:void put(java.lang.String,java.lang.String) -> put
    81:84:void put(java.lang.String,java.lang.String,long) -> put
    87:87:java.lang.String get(java.lang.String) -> get
    91:92:void clear() -> clear
    95:98:boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    102:105:boolean isEnabled(java.lang.String) -> isEnabled
    109:110:void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    58:59:int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    1:1:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    48:51:void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    77:77:com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    83:84:void setExpiry(long) -> setExpiry
    87:88:void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    91:91:com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    98:147:com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    154:185:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    196:223:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    227:266:com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    274:292:void cancel() -> cancel
    298:309:boolean updateProgress(long,long,boolean) -> updateProgress
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    349:349:boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    354:354:java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> ENUM$VALUES
    321:335:com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    340:340:int value() -> value
    1:1:com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    1:1:com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    67:67:com.lidroid.xutils.task.Priority getPriority() -> getPriority
    71:72:void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    75:75:java.lang.String getCharset() -> getCharset
    79:80:void setContentType(java.lang.String) -> setContentType
    88:92:void addHeader(org.apache.http.Header) -> addHeader
    101:105:void addHeader(java.lang.String,java.lang.String) -> addHeader
    113:119:void addHeaders(java.util.List) -> addHeaders
    128:132:void setHeader(org.apache.http.Header) -> setHeader
    142:146:void setHeader(java.lang.String,java.lang.String) -> setHeader
    154:160:void setHeaders(java.util.List) -> setHeaders
    163:167:void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    170:174:void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    177:185:void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    188:192:void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    195:199:void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    202:210:void addBodyParameter(java.util.List) -> addBodyParameter
    213:217:void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    220:224:void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    227:231:void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    234:238:void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    241:245:void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    248:252:void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    255:259:void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    262:271:void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    278:307:org.apache.http.HttpEntity getEntity() -> getEntity
    311:311:java.util.List getQueryStringParams() -> getQueryStringParams
    315:315:java.util.List getHeaders() -> getHeaders
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    31:32:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    36:37:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    41:42:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    46:47:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    69:69:java.lang.String getRequestUrl() -> getRequestUrl
    73:73:java.lang.String getRequestMethod() -> getRequestMethod
    77:78:void setRequestMethod(java.lang.String) -> setRequestMethod
    81:81:java.io.InputStream getBaseStream() -> getBaseStream
    85:85:org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    89:90:int getStatusCode() -> getStatusCode
    94:95:java.util.Locale getLocale() -> getLocale
    99:100:java.lang.String getReasonPhrase() -> getReasonPhrase
    104:120:java.lang.String readString() -> readString
    124:140:void readFile(java.lang.String) -> readFile
    144:145:int read() -> read
    150:151:int available() -> available
    156:158:void close() -> close
    162:164:void mark(int) -> mark
    168:169:boolean markSupported() -> markSupported
    174:175:int read(byte[]) -> read
    180:181:int read(byte[],int,int) -> read
    186:188:void reset() -> reset
    192:193:long skip(long) -> skip
    197:198:long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    40:41:void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    59:60:void setExpiry(long) -> setExpiry
    64:98:com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    104:126:com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    31:40:org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    31:90:java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    53:56:int getRate() -> getRate
    60:61:void setRate(int) -> setRate
    64:64:java.lang.Object getUserTag() -> getUserTag
    68:69:void setUserTag(java.lang.Object) -> setUserTag
    72:72:java.lang.String getRequestUrl() -> getRequestUrl
    76:77:void setRequestUrl(java.lang.String) -> setRequestUrl
    80:80:void onStart() -> onStart
    83:83:void onCancelled() -> onCancelled
    86:86:void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    30:60:java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    34:41:com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    75:75:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    80:80:java.net.Socket createSocket() -> createSocket
    1:1:org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    53:53:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    60:60:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    66:66:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    70:71:com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    75:76:com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    80:85:com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    89:106:void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    109:132:void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    137:146:java.net.URI getURI() -> getURI
    152:153:void setURI(java.net.URI) -> setURI
    156:157:void setURI(java.lang.String) -> setURI
    161:161:java.lang.String getMethod() -> getMethod
    166:166:org.apache.http.HttpEntity getEntity() -> getEntity
    171:172:void setEntity(org.apache.http.HttpEntity) -> setEntity
    176:177:boolean expectContinue() -> expectContinue
    182:186:java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> ENUM$VALUES
    209:209:java.lang.String toString() -> toString
    1:1:com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    1:1:com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    59:103:boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    72:74:com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    78:80:com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    84:92:void refreshContent() -> refreshContent
    95:95:boolean isRepeatable() -> isRepeatable
    99:100:long getContentLength() -> getContentLength
    104:105:java.io.InputStream getContent() -> getContent
    109:115:void writeTo(java.io.OutputStream) -> writeTo
    123:123:boolean isStreaming() -> isStreaming
    127:127:java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    54:60:java.io.InputStream getDecompressingStream() -> getDecompressingStream
    69:75:java.io.InputStream getContent() -> getContent
    84:84:long getContentLength() -> getContentLength
    94:119:void writeTo(java.io.OutputStream) -> writeTo
    125:126:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    42:66:void writeTo(java.io.OutputStream) -> writeTo
    72:73:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    40:40:java.io.InputStream decorate(java.io.InputStream) -> decorate
    50:50:org.apache.http.Header getContentEncoding() -> getContentEncoding
    1:1:long getContentLength() -> getContentLength
    1:1:java.io.InputStream getContent() -> getContent
    1:1:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    1:1:void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    50:50:boolean isRepeatable() -> isRepeatable
    54:54:long getContentLength() -> getContentLength
    58:58:java.io.InputStream getContent() -> getContent
    64:107:void writeTo(java.io.OutputStream) -> writeTo
    110:110:boolean isStreaming() -> isStreaming
    120:121:void consumeContent() -> consumeContent
    127:128:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    73:73:java.lang.String getName() -> getName
    77:77:com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    81:81:com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    85:89:void addField(java.lang.String,java.lang.String) -> addField
    92:102:void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    105:112:void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    115:116:void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
    42:45:org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    50:52:void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    56:58:void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    62:64:void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    68:72:void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    76:80:void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    136:137:void setSubType(java.lang.String) -> setSubType
    140:140:java.lang.String getSubType() -> getSubType
    144:144:java.nio.charset.Charset getCharset() -> getCharset
    148:148:com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    152:152:java.util.List getBodyParts() -> getBodyParts
    156:160:void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    163:163:java.lang.String getBoundary() -> getBoundary
    170:171:void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    179:241:void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    251:252:void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    268:285:long getTotalLength() -> getTotalLength
    38:38:int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    1:1:com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    35:35:java.lang.String getName() -> getName
    39:39:java.lang.String getBody() -> getBody
    44:48:java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    35:46:void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    49:49:java.util.List getFields() -> getFields
    53:61:com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    65:73:java.util.List getFields(java.lang.String) -> getFields
    78:87:int removeFields(java.lang.String) -> removeFields
    91:114:void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    117:117:java.util.Iterator iterator() -> iterator
    122:122:java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    43:44:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    134:139:void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    144:151:java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    155:161:java.lang.String generateBoundary() -> generateBoundary
    165:167:void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    170:171:void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    174:175:void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    178:184:boolean isRepeatable() -> isRepeatable
    188:188:boolean isChunked() -> isChunked
    192:192:boolean isStreaming() -> isStreaming
    196:200:long getContentLength() -> getContentLength
    204:204:org.apache.http.Header getContentType() -> getContentType
    208:208:org.apache.http.Header getContentEncoding() -> getContentEncoding
    213:217:void consumeContent() -> consumeContent
    220:221:java.io.InputStream getContent() -> getContent
    225:227:void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    58:61:boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    46:46:java.lang.String getMimeType() -> getMimeType
    50:50:java.lang.String getMediaType() -> getMediaType
    54:54:java.lang.String getSubType() -> getSubType
    61:62:void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    67:67:java.lang.String getFilename() -> getFilename
    71:74:void writeTo(java.io.OutputStream) -> writeTo
    77:77:java.lang.String getCharset() -> getCharset
    81:81:java.lang.String getTransferEncoding() -> getTransferEncoding
    85:85:long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    70:70:java.io.InputStream getInputStream() -> getInputStream
    74:93:void writeTo(java.io.OutputStream) -> writeTo
    96:96:java.lang.String getTransferEncoding() -> getTransferEncoding
    100:100:java.lang.String getCharset() -> getCharset
    104:104:long getContentLength() -> getContentLength
    108:108:java.lang.String getFilename() -> getFilename
    112:112:java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    54:54:java.io.InputStream getInputStream() -> getInputStream
    58:75:void writeTo(java.io.OutputStream) -> writeTo
    78:78:java.lang.String getTransferEncoding() -> getTransferEncoding
    82:82:java.lang.String getCharset() -> getCharset
    86:86:long getContentLength() -> getContentLength
    90:90:java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    40:42:com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    51:51:com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    58:58:com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    115:117:java.io.Reader getReader() -> getReader
    121:135:void writeTo(java.io.OutputStream) -> writeTo
    138:138:java.lang.String getTransferEncoding() -> getTransferEncoding
    142:142:java.lang.String getCharset() -> getCharset
    146:146:long getContentLength() -> getContentLength
    150:150:java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    64:77:void digestURI(java.net.URI) -> digestURI
    80:83:java.util.List parseQuery(java.lang.String) -> parseQuery
    92:92:java.net.URI build(java.nio.charset.Charset) -> build
    96:137:java.lang.String buildString(java.nio.charset.Charset) -> buildString
    141:141:java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    145:145:java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    149:149:java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    153:153:java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    160:161:com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    169:173:com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    181:181:com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    188:191:com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    198:201:com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    208:211:com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    220:223:com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    231:237:com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    245:259:com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    267:269:com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    273:273:java.lang.String getScheme() -> getScheme
    277:277:java.lang.String getUserInfo() -> getUserInfo
    281:281:java.lang.String getHost() -> getHost
    285:285:int getPort() -> getPort
    289:289:java.lang.String getPath() -> getPath
    293:296:java.util.List getQueryParams() -> getQueryParams
    301:301:java.lang.String getFragment() -> getFragment
    305:317:java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    51:61:boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    76:83:java.util.List parse(java.net.URI) -> parse
    99:113:void parse(java.util.List,java.util.Scanner) -> parse
    124:138:java.util.List parse(java.lang.String) -> parse
    151:164:java.lang.String format(java.util.List,java.lang.String) -> format
    178:191:java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    308:327:java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    342:368:java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    379:382:java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    393:396:java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    411:415:java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    430:433:java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    446:446:java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    459:459:java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    472:472:java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    618:618:com.lidroid.xutils.task.Priority getPriority() -> getPriority
    623:628:java.lang.Object getValue() -> getValue
    633:641:void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.lidroid.xutils.task.Priority[] values() -> values
    1:1:com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    50:50:com.lidroid.xutils.task.Priority getPriority() -> getPriority
    54:55:void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    89:93:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    97:100:java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    126:126:void onPreExecute() -> onPreExecute
    141:141:void onPostExecute(java.lang.Object) -> onPostExecute
    153:153:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    170:171:void onCancelled(java.lang.Object) -> onCancelled
    186:186:void onCancelled() -> onCancelled
    199:199:boolean isCancelled() -> isCancelled
    213:214:boolean cancel(boolean) -> cancel
    219:219:boolean supportPause() -> supportPause
    224:224:boolean supportResume() -> supportResume
    229:229:boolean supportCancel() -> supportCancel
    234:234:void pause() -> pause
    238:238:void resume() -> resume
    242:243:void cancel() -> cancel
    247:247:boolean isPaused() -> isPaused
    261:261:java.lang.Object get() -> get
    279:279:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    290:290:com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    302:314:com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    326:327:void execute(java.lang.Runnable) -> execute
    338:339:void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    355:359:void publishProgress(java.lang.Object[]) -> publishProgress
    362:367:void finish(java.lang.Object) -> finish
    361:361:void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$0
    45:45:java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> access$1
    95:95:java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$2
    88:88:void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$3
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    63:67:java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    75:84:void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    378:388:void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    44:44:int getPoolSize() -> getPoolSize
    48:51:void setPoolSize(int) -> setPoolSize
    54:54:boolean isBusy() -> isBusy
    59:60:void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    22:22:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    70:77:void signalNotEmpty() -> signalNotEmpty
    83:90:void signalNotFull() -> signalNotFull
    93:97:java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    103:122:void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    128:134:java.lang.Object _dequeue() -> _dequeue
    141:143:void fullyLock() -> fullyLock
    149:151:void fullyUnlock() -> fullyUnlock
    184:184:int size() -> size
    188:188:int remainingCapacity() -> remainingCapacity
    192:213:void put(java.lang.Object) -> put
    218:239:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    243:263:boolean offer(java.lang.Object) -> offer
    268:285:java.lang.Object take() -> take
    289:310:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    314:333:java.lang.Object poll() -> poll
    337:349:java.lang.Object peek() -> peek
    359:365:void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    368:382:boolean remove(java.lang.Object) -> remove
    386:395:boolean contains(java.lang.Object) -> contains
    399:409:java.lang.Object[] toArray() -> toArray
    414:429:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    433:446:void clear() -> clear
    449:449:int drainTo(java.util.Collection) -> drainTo
    453:489:int drainTo(java.util.Collection,int) -> drainTo
    493:493:java.util.Iterator iterator() -> iterator
    567:581:void writeObject(java.io.ObjectOutputStream) -> writeObject
    589:602:void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    514:514:boolean hasNext() -> hasNext
    518:524:com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    529:540:java.lang.Object next() -> next
    544:561:void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    16:17:void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    33:37:java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    42:49:java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    54:57:boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    38:53:void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    56:56:java.util.Set getFirstKeys() -> getFirstKeys
    60:60:java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    64:65:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    69:70:java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    74:85:java.util.Collection getAllValues() -> getAllValues
    89:92:boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    96:96:boolean containsKey(java.lang.Object) -> containsKey
    100:106:int size() -> size
    110:111:void remove(java.lang.Object) -> remove
    114:118:void remove(java.lang.Object,java.lang.Object) -> remove
    121:127:void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    33:39:void closeQuietly(java.io.Closeable) -> closeQuietly
    42:48:void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    45:50:java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    86:95:void d(java.lang.String) -> d
    98:107:void d(java.lang.String,java.lang.Throwable) -> d
    110:119:void e(java.lang.String) -> e
    122:131:void e(java.lang.String,java.lang.Throwable) -> e
    134:143:void i(java.lang.String) -> i
    146:155:void i(java.lang.String,java.lang.Throwable) -> i
    158:167:void v(java.lang.String) -> v
    170:179:void v(java.lang.String,java.lang.Throwable) -> v
    182:191:void w(java.lang.String) -> w
    194:203:void w(java.lang.String,java.lang.Throwable) -> w
    206:215:void w(java.lang.Throwable) -> w
    219:228:void wtf(java.lang.String) -> wtf
    231:240:void wtf(java.lang.String,java.lang.Throwable) -> wtf
    243:252:void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    31:37:java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    51:101:java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    110:124:java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    129:133:long getAvailableSpace(java.io.File) -> getAvailableSpace
    139:149:boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    153:167:java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    171:192:java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    198:212:long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    217:217:java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    221:221:java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    225:225:java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    232:262:void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    236:236:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    242:242:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    247:247:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    73:87:void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    92:101:void clear() -> clear
    105:129:boolean clearExpired(java.util.Date) -> clearExpired
    134:134:java.util.List getCookies() -> getCookies
    138:138:org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    143:151:java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    155:165:org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    171:179:java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    183:188:byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    203:207:org.apache.http.cookie.Cookie getCookie() -> getCookie
    211:219:void writeObject(java.io.ObjectOutputStream) -> writeObject
    222:231:void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    50:84:void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    95:96:void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    99:99:java.lang.Object getHandler() -> getHandler
    103:104:void setHandler(java.lang.Object) -> setHandler
    108:116:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
    14:52:java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
    11:11:int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType() -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] ENUM$VALUES -> ENUM$VALUES
    1:1:com.lidroid.xutils.view.ResType[] values() -> values
    1:1:com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    40:40:android.view.View findViewById(int) -> findViewById
    44:44:android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    48:59:android.view.View findViewById(int,int) -> findViewById
    64:64:android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    68:71:android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    14:22:boolean equals(java.lang.Object) -> equals
    27:29:int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.tools.payhelper.CustomApplcation -> com.tools.payhelper.CustomApplcation:
    com.tools.payhelper.CustomApplcation mInstance -> a
    android.content.Context context -> b
    23:26:void onCreate() -> onCreate
    29:29:com.tools.payhelper.CustomApplcation getInstance() -> a
com.tools.payhelper.DaemonService -> com.tools.payhelper.DaemonService:
    26:26:android.os.IBinder onBind(android.content.Intent) -> onBind
    32:45:void onCreate() -> onCreate
    52:52:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    58:67:void onDestroy() -> onDestroy
com.tools.payhelper.Main -> com.tools.payhelper.Main:
    java.lang.String WECHAT_PACKAGE -> WECHAT_PACKAGE
    java.lang.String ALIPAY_PACKAGE -> ALIPAY_PACKAGE
    boolean WECHAT_PACKAGE_ISHOOK -> WECHAT_PACKAGE_ISHOOK
    boolean ALIPAY_PACKAGE_ISHOOK -> ALIPAY_PACKAGE_ISHOOK
    29:84:void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage$LoadPackageParam) -> handleLoadPackage
    24:24:boolean access$0(com.tools.payhelper.Main) -> access$0
    24:24:void access$1(com.tools.payhelper.Main,boolean) -> access$1
    25:25:boolean access$2(com.tools.payhelper.Main) -> access$2
    25:25:void access$3(com.tools.payhelper.Main,boolean) -> access$3
com.tools.payhelper.Main$1 -> com.tools.payhelper.Main$1:
    com.tools.payhelper.Main this$0 -> a
    java.lang.String val$processName -> b
    java.lang.String val$packageName -> c
com.tools.payhelper.Main$2 -> com.tools.payhelper.Main$2:
    com.tools.payhelper.Main this$0 -> a
    java.lang.String val$processName -> b
    java.lang.String val$packageName -> c
com.tools.payhelper.MainActivity -> com.tools.payhelper.MainActivity:
    android.widget.TextView console -> a
    com.tools.payhelper.MainActivity$BillReceived billReceived -> f
    java.lang.String BILLRECEIVED_ACTION -> b
    java.lang.String QRCODERECEIVED_ACTION -> c
    java.lang.String MSGRECEIVED_ACTION -> d
    com.tools.payhelper.WebServer mVideoServer -> g
    android.os.Handler handler -> e
    49:102:void onCreate(android.os.Bundle) -> onCreate
    122:125:void onDestroy() -> onDestroy
    128:129:void onResume() -> onResume
    133:147:void sendmsg(java.lang.String) -> a
    151:152:void onBackPressed() -> onBackPressed
    156:159:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.tools.payhelper.MainActivity$1 -> com.tools.payhelper.MainActivity$1:
    108:117:void handleMessage(android.os.Message) -> handleMessage
com.tools.payhelper.MainActivity$2 -> com.tools.payhelper.MainActivity$2:
    com.tools.payhelper.MainActivity this$0 -> a
    64:70:void onClick(android.view.View) -> onClick
com.tools.payhelper.MainActivity$3 -> com.tools.payhelper.MainActivity$3:
    com.tools.payhelper.MainActivity this$0 -> a
    77:83:void onClick(android.view.View) -> onClick
com.tools.payhelper.MainActivity$4 -> com.tools.payhelper.MainActivity$4:
    com.tools.payhelper.MainActivity this$0 -> a
    90:92:void onClick(android.view.View) -> onClick
com.tools.payhelper.MainActivity$BillReceived -> com.tools.payhelper.MainActivity$a:
    com.tools.payhelper.MainActivity this$0 -> a
    167:200:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    203:240:void notify(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.tools.payhelper.MainActivity$BillReceived$1 -> com.tools.payhelper.MainActivity$a$1:
    com.tools.payhelper.MainActivity$BillReceived this$1 -> a
    227:228:void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    232:238:void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.tools.payhelper.SettingActivity -> com.tools.payhelper.SettingActivity:
    android.widget.EditText et_returnurl -> a
    android.widget.EditText et_notifyurl -> b
    android.widget.EditText et_signkey -> c
    android.widget.EditText et_wxid -> d
    android.widget.Button bt_save -> e
    android.widget.Button bt_back -> f
    android.widget.RelativeLayout rl_back -> g
    24:50:void onCreate(android.os.Bundle) -> onCreate
    53:54:void onDestroy() -> onDestroy
    57:58:void onResume() -> onResume
    61:99:void onClick(android.view.View) -> onClick
com.tools.payhelper.WebServer -> com.tools.payhelper.a:
    java.lang.String TAG -> a
    java.lang.String MSGRECEIVED_ACTION -> b
    android.content.Context context -> d
    42:161:fi.iki.elonen.NanoHTTPD$Response serve(fi.iki.elonen.NanoHTTPD$IHTTPSession) -> a
    166:170:fi.iki.elonen.NanoHTTPD$Response responseRootPage(fi.iki.elonen.NanoHTTPD$IHTTPSession) -> b
    174:189:fi.iki.elonen.NanoHTTPD$Response responseQRCode(fi.iki.elonen.NanoHTTPD$IHTTPSession,java.lang.String,java.lang.String) -> a
    192:199:fi.iki.elonen.NanoHTTPD$Response responseText(fi.iki.elonen.NanoHTTPD$IHTTPSession,java.lang.String) -> a
    202:203:fi.iki.elonen.NanoHTTPD$Response responseJson(fi.iki.elonen.NanoHTTPD$IHTTPSession,java.lang.String) -> b
    207:211:fi.iki.elonen.NanoHTTPD$Response response404(fi.iki.elonen.NanoHTTPD$IHTTPSession,java.lang.String) -> c
com.tools.payhelper.utils.AbSharedUtil -> com.tools.payhelper.utils.a:
    23:23:android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context) -> a
    39:43:void putString(android.content.Context,java.lang.String,java.lang.String) -> a
    46:47:java.lang.String getString(android.content.Context,java.lang.String) -> a
com.tools.payhelper.utils.BitmapUtil -> com.tools.payhelper.utils.b:
    59:92:android.graphics.Bitmap createQRImage(java.lang.String,int,android.graphics.Bitmap) -> a
    99:136:java.lang.String bitmapToBase64(android.graphics.Bitmap) -> a
    144:182:android.graphics.Bitmap addLogo(android.graphics.Bitmap,android.graphics.Bitmap) -> a
com.tools.payhelper.utils.DBHelper -> com.tools.payhelper.utils.c:
    14:18:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    23:23:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tools.payhelper.utils.DBManager -> com.tools.payhelper.utils.d:
    android.database.sqlite.SQLiteDatabase db -> a
    com.tools.payhelper.utils.DBHelper helper -> b
    18:26:void addQrCode(com.tools.payhelper.utils.QrCodeBean) -> a
    28:36:void addOrder(com.tools.payhelper.utils.OrderBean) -> a
    55:68:java.util.ArrayList FindQrCodes(java.lang.String) -> a
    87:100:java.util.ArrayList FindOrders(java.lang.String) -> b
    110:111:android.database.Cursor ExecSQLForCursor(java.lang.String) -> c
com.tools.payhelper.utils.MD5 -> com.tools.payhelper.utils.e:
    14:34:java.lang.String md5(java.lang.String) -> a
com.tools.payhelper.utils.OrderBean -> com.tools.payhelper.utils.OrderBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String money -> money
    java.lang.String mark -> mark
    java.lang.String type -> type
    java.lang.String no -> no
    java.lang.String dt -> dt
    24:24:java.lang.String getMoney() -> getMoney
    27:28:void setMoney(java.lang.String) -> setMoney
    30:30:java.lang.String getMark() -> getMark
    33:34:void setMark(java.lang.String) -> setMark
    36:36:java.lang.String getType() -> getType
    39:40:void setType(java.lang.String) -> setType
    42:42:java.lang.String getNo() -> getNo
    45:46:void setNo(java.lang.String) -> setNo
    48:48:java.lang.String getDt() -> getDt
    51:52:void setDt(java.lang.String) -> setDt
com.tools.payhelper.utils.PayHelperUtils -> com.tools.payhelper.utils.f:
    java.lang.String WECHATSTART_ACTION -> a
    java.lang.String ALIPAYSTART_ACTION -> b
    java.util.List qrCodeBeans -> c
    java.util.List orderBeans -> d
    33:37:void startAPP() -> a
    77:86:void sendAppMsg(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
    93:97:java.lang.String stampToDate(java.lang.String) -> a
    108:118:boolean isAppRunning(android.content.Context,java.lang.String) -> a
    126:130:void startAPP(android.content.Context,java.lang.String) -> b
com.tools.payhelper.utils.QrCodeBean -> com.tools.payhelper.utils.QrCodeBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String money -> money
    java.lang.String mark -> mark
    java.lang.String type -> type
    java.lang.String payurl -> payurl
    java.lang.String dt -> dt
    28:28:java.lang.String getMoney() -> getMoney
    32:33:void setMoney(java.lang.String) -> setMoney
    36:36:java.lang.String getMark() -> getMark
    40:41:void setMark(java.lang.String) -> setMark
    44:44:java.lang.String getType() -> getType
    48:49:void setType(java.lang.String) -> setType
    52:52:java.lang.String getPayurl() -> getPayurl
    56:57:void setPayurl(java.lang.String) -> setPayurl
    60:60:java.lang.String getDt() -> getDt
    64:65:void setDt(java.lang.String) -> setDt
fi.iki.elonen.NanoHTTPD -> fi.iki.elonen.NanoHTTPD:
    java.util.regex.Pattern CONTENT_DISPOSITION_PATTERN -> a
    java.util.regex.Pattern CONTENT_TYPE_PATTERN -> b
    java.util.regex.Pattern CONTENT_DISPOSITION_ATTRIBUTE_PATTERN -> d
    java.util.logging.Logger LOG -> e
    java.lang.String hostname -> f
    int myPort -> g
    java.net.ServerSocket myServerSocket -> h
    fi.iki.elonen.NanoHTTPD$ServerSocketFactory serverSocketFactory -> i
    java.lang.Thread myThread -> j
    fi.iki.elonen.NanoHTTPD$AsyncRunner asyncRunner -> c
    fi.iki.elonen.NanoHTTPD$TempFileManagerFactory tempFileManagerFactory -> k
    1974:1988:void safeClose(java.lang.Object) -> b
    2053:2053:fi.iki.elonen.NanoHTTPD$ClientHandler createClientHandler(java.net.Socket,java.io.InputStream) -> a
    2065:2065:fi.iki.elonen.NanoHTTPD$ServerRunnable createServerRunnable(int) -> a
    2125:2131:java.lang.String decodePercent(java.lang.String) -> a
    2141:2141:boolean useGzipWhenAccepted(fi.iki.elonen.NanoHTTPD$Response) -> a
    2153:2153:fi.iki.elonen.NanoHTTPD$ServerSocketFactory getServerSocketFactory() -> a
    2186:2186:fi.iki.elonen.NanoHTTPD$Response newFixedLengthResponse(fi.iki.elonen.NanoHTTPD$Response$IStatus,java.lang.String,java.io.InputStream,long) -> a
    2193:2208:fi.iki.elonen.NanoHTTPD$Response newFixedLengthResponse(fi.iki.elonen.NanoHTTPD$Response$IStatus,java.lang.String,java.lang.String) -> a
    2216:2216:fi.iki.elonen.NanoHTTPD$Response newFixedLengthResponse(java.lang.String) -> b
    2230:2244:fi.iki.elonen.NanoHTTPD$Response serve(fi.iki.elonen.NanoHTTPD$IHTTPSession) -> a
    2267:2267:fi.iki.elonen.NanoHTTPD$Response serve(java.lang.String,fi.iki.elonen.NanoHTTPD$Method,java.util.Map,java.util.Map,java.util.Map) -> a
    2277:2278:void setAsyncRunner(fi.iki.elonen.NanoHTTPD$AsyncRunner) -> a
    2287:2288:void setTempFileManagerFactory(fi.iki.elonen.NanoHTTPD$TempFileManagerFactory) -> a
    2297:2298:void start() -> b
    2304:2305:void start(int) -> b
    2318:2338:void start(int,boolean) -> a
    2345:2353:void stop() -> c
    151:151:void access$000(java.lang.Object) -> a
    151:151:fi.iki.elonen.NanoHTTPD$TempFileManagerFactory access$100(fi.iki.elonen.NanoHTTPD) -> a
    151:151:java.util.logging.Logger access$200() -> d
    151:151:java.util.regex.Pattern access$300() -> e
    151:151:java.util.regex.Pattern access$400() -> f
    151:151:java.util.regex.Pattern access$500() -> g
    151:151:java.lang.String access$700(fi.iki.elonen.NanoHTTPD) -> b
    151:151:int access$800(fi.iki.elonen.NanoHTTPD) -> c
    151:151:java.net.ServerSocket access$900(fi.iki.elonen.NanoHTTPD) -> d
fi.iki.elonen.NanoHTTPD$1 -> fi.iki.elonen.NanoHTTPD$1:
fi.iki.elonen.NanoHTTPD$AsyncRunner -> fi.iki.elonen.NanoHTTPD$a:
    void closeAll() -> a
    void closed(fi.iki.elonen.NanoHTTPD$ClientHandler) -> a
    void exec(fi.iki.elonen.NanoHTTPD$ClientHandler) -> b
fi.iki.elonen.NanoHTTPD$ClientHandler -> fi.iki.elonen.NanoHTTPD$b:
    java.io.InputStream inputStream -> b
    java.net.Socket acceptSocket -> c
    fi.iki.elonen.NanoHTTPD this$0 -> a
    180:182:void close() -> a
    186:211:void run() -> run
fi.iki.elonen.NanoHTTPD$ContentType -> fi.iki.elonen.NanoHTTPD$c:
    java.util.regex.Pattern MIME_PATTERN -> a
    java.util.regex.Pattern CHARSET_PATTERN -> b
    java.util.regex.Pattern BOUNDARY_PATTERN -> c
    java.lang.String contentTypeHeader -> d
    java.lang.String contentType -> e
    java.lang.String encoding -> f
    java.lang.String boundary -> g
    571:572:java.lang.String getDetailFromContentHeader(java.lang.String,java.util.regex.Pattern,java.lang.String,int) -> a
    576:576:java.lang.String getContentTypeHeader() -> a
    580:580:java.lang.String getContentType() -> b
    584:584:java.lang.String getEncoding() -> c
    588:588:java.lang.String getBoundary() -> d
    592:592:boolean isMultipart() -> e
    596:599:fi.iki.elonen.NanoHTTPD$ContentType tryUTF8() -> f
fi.iki.elonen.NanoHTTPD$Cookie -> fi.iki.elonen.NanoHTTPD$d:
    java.lang.String n -> a
    java.lang.String v -> b
    java.lang.String e -> c
    243:244:java.lang.String getHTTPHeader() -> a
fi.iki.elonen.NanoHTTPD$CookieHandler -> fi.iki.elonen.NanoHTTPD$e:
    java.util.HashMap cookies -> b
    java.util.ArrayList queue -> c
    fi.iki.elonen.NanoHTTPD this$0 -> a
    287:287:java.util.Iterator iterator() -> iterator
    328:331:void unloadQueue(fi.iki.elonen.NanoHTTPD$Response) -> a
fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner -> fi.iki.elonen.NanoHTTPD$f:
    long requestCount -> a
    java.util.List running -> b
    359:362:void closeAll() -> a
    366:367:void closed(fi.iki.elonen.NanoHTTPD$ClientHandler) -> a
    371:377:void exec(fi.iki.elonen.NanoHTTPD$ClientHandler) -> b
fi.iki.elonen.NanoHTTPD$DefaultServerSocketFactory -> fi.iki.elonen.NanoHTTPD$g:
    480:480:java.net.ServerSocket create() -> a
fi.iki.elonen.NanoHTTPD$DefaultTempFile -> fi.iki.elonen.NanoHTTPD$h:
    java.io.File file -> a
    java.io.OutputStream fstream -> b
    401:405:void delete() -> a
    409:409:java.lang.String getName() -> b
fi.iki.elonen.NanoHTTPD$DefaultTempFileManager -> fi.iki.elonen.NanoHTTPD$i:
    java.io.File tmpdir -> a
    java.util.List tempFiles -> b
    444:452:void clear() -> a
    456:458:fi.iki.elonen.NanoHTTPD$TempFile createTempFile(java.lang.String) -> a
fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory -> fi.iki.elonen.NanoHTTPD$j:
    fi.iki.elonen.NanoHTTPD this$0 -> a
    469:469:fi.iki.elonen.NanoHTTPD$TempFileManager create() -> a
fi.iki.elonen.NanoHTTPD$HTTPSession -> fi.iki.elonen.NanoHTTPD$k:
    fi.iki.elonen.NanoHTTPD$TempFileManager tempFileManager -> b
    java.io.OutputStream outputStream -> c
    java.io.BufferedInputStream inputStream -> d
    int splitbyte -> e
    int rlen -> f
    java.lang.String uri -> g
    fi.iki.elonen.NanoHTTPD$Method method -> h
    java.util.Map parms -> i
    java.util.Map headers -> j
    fi.iki.elonen.NanoHTTPD$CookieHandler cookies -> k
    java.lang.String queryParameterString -> l
    java.lang.String remoteIp -> m
    java.lang.String remoteHostname -> n
    java.lang.String protocolVersion -> o
    fi.iki.elonen.NanoHTTPD this$0 -> a
    662:712:void decodeHeader(java.io.BufferedReader,java.util.Map,java.util.Map,java.util.Map) -> a
    718:819:void decodeMultipartFormData(fi.iki.elonen.NanoHTTPD$ContentType,java.nio.ByteBuffer,java.util.Map,java.util.Map) -> a
    822:825:int scipOverNewLine(byte[],int) -> a
    834:863:void decodeParms(java.lang.String,java.util.Map) -> a
    867:986:void execute() -> a
    993:1007:int findHeaderEnd(byte[],int) -> b
    1016:1053:int[] getBoundaryPositions(java.nio.ByteBuffer,byte[]) -> a
    1063:1063:java.util.Map getHeaders() -> b
    1073:1073:fi.iki.elonen.NanoHTTPD$Method getMethod() -> c
    1082:1087:java.util.Map getParms() -> d
    1097:1097:java.lang.String getQueryParameterString() -> e
    1102:1105:java.io.RandomAccessFile getTmpBucket() -> h
    1111:1111:java.lang.String getUri() -> f
    1119:1124:long getBodySize() -> g
    1129:1193:void parseBody(java.util.Map) -> a
    1200:1217:java.lang.String saveTmpFile(java.nio.ByteBuffer,int,int,java.lang.String) -> a
fi.iki.elonen.NanoHTTPD$IHTTPSession -> fi.iki.elonen.NanoHTTPD$l:
    java.util.Map getHeaders() -> b
    fi.iki.elonen.NanoHTTPD$Method getMethod() -> c
    java.util.Map getParms() -> d
    java.lang.String getQueryParameterString() -> e
    java.lang.String getUri() -> f
    void parseBody(java.util.Map) -> a
fi.iki.elonen.NanoHTTPD$Method -> fi.iki.elonen.NanoHTTPD$Method:
    fi.iki.elonen.NanoHTTPD$Method GET -> GET
    fi.iki.elonen.NanoHTTPD$Method PUT -> PUT
    fi.iki.elonen.NanoHTTPD$Method POST -> POST
    fi.iki.elonen.NanoHTTPD$Method DELETE -> DELETE
    fi.iki.elonen.NanoHTTPD$Method HEAD -> HEAD
    fi.iki.elonen.NanoHTTPD$Method OPTIONS -> OPTIONS
    fi.iki.elonen.NanoHTTPD$Method TRACE -> TRACE
    fi.iki.elonen.NanoHTTPD$Method CONNECT -> CONNECT
    fi.iki.elonen.NanoHTTPD$Method PATCH -> PATCH
    fi.iki.elonen.NanoHTTPD$Method PROPFIND -> PROPFIND
    fi.iki.elonen.NanoHTTPD$Method PROPPATCH -> PROPPATCH
    fi.iki.elonen.NanoHTTPD$Method MKCOL -> MKCOL
    fi.iki.elonen.NanoHTTPD$Method MOVE -> MOVE
    fi.iki.elonen.NanoHTTPD$Method COPY -> COPY
    fi.iki.elonen.NanoHTTPD$Method LOCK -> LOCK
    fi.iki.elonen.NanoHTTPD$Method UNLOCK -> UNLOCK
    fi.iki.elonen.NanoHTTPD$Method[] $VALUES -> a
    1293:1293:fi.iki.elonen.NanoHTTPD$Method[] values() -> values
    1293:1293:fi.iki.elonen.NanoHTTPD$Method valueOf(java.lang.String) -> valueOf
    1312:1319:fi.iki.elonen.NanoHTTPD$Method lookup(java.lang.String) -> lookup
fi.iki.elonen.NanoHTTPD$Response -> fi.iki.elonen.NanoHTTPD$Response:
    fi.iki.elonen.NanoHTTPD$Response$IStatus status -> a
    java.lang.String mimeType -> b
    java.io.InputStream data -> c
    long contentLength -> d
    java.util.Map header -> e
    java.util.Map lowerCaseHeader -> f
    fi.iki.elonen.NanoHTTPD$Method requestMethod -> g
    boolean chunkedTransfer -> h
    boolean encodeAsGzip -> i
    boolean keepAlive -> j
    1522:1525:void close() -> close
    1531:1532:void addHeader(java.lang.String,java.lang.String) -> a
    1553:1553:boolean isCloseConnection() -> a
    1561:1561:java.lang.String getHeader(java.lang.String) -> a
    1565:1565:java.lang.String getMimeType() -> b
    1577:1578:void setGzipEncoding(boolean) -> a
    1581:1582:void setKeepAlive(boolean) -> b
    1588:1630:void send(java.io.OutputStream) -> a
    1634:1635:void printHeader(java.io.PrintWriter,java.lang.String,java.lang.String) -> a
    1638:1648:long sendContentLengthHeaderIfNotAlreadyPresent(java.io.PrintWriter,long) -> a
    1652:1659:void sendBodyWithCorrectTransferAndEncoding(java.io.OutputStream,long) -> a
    1662:1669:void sendBodyWithCorrectEncoding(java.io.OutputStream,long) -> b
    1685:1699:void sendBody(java.io.OutputStream,long) -> c
    1702:1703:void setChunkedTransfer(boolean) -> c
    1714:1715:void setRequestMethod(fi.iki.elonen.NanoHTTPD$Method) -> a
    1327:1327:java.util.Map access$600(fi.iki.elonen.NanoHTTPD$Response) -> a
fi.iki.elonen.NanoHTTPD$Response$1 -> fi.iki.elonen.NanoHTTPD$Response$1:
    fi.iki.elonen.NanoHTTPD$Response this$0 -> this$0
    1478:1479:java.lang.String put(java.lang.String,java.lang.String) -> put
    1475:1475:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
fi.iki.elonen.NanoHTTPD$Response$ChunkedOutputStream -> fi.iki.elonen.NanoHTTPD$Response$a:
    1427:1431:void write(int) -> write
    1435:1436:void write(byte[]) -> write
    1440:1445:void write(byte[],int,int) -> write
    1448:1449:void finish() -> a
fi.iki.elonen.NanoHTTPD$Response$IStatus -> fi.iki.elonen.NanoHTTPD$Response$b:
    java.lang.String getDescription() -> getDescription
fi.iki.elonen.NanoHTTPD$Response$Status -> fi.iki.elonen.NanoHTTPD$Response$Status:
    fi.iki.elonen.NanoHTTPD$Response$Status SWITCH_PROTOCOL -> SWITCH_PROTOCOL
    fi.iki.elonen.NanoHTTPD$Response$Status OK -> OK
    fi.iki.elonen.NanoHTTPD$Response$Status CREATED -> CREATED
    fi.iki.elonen.NanoHTTPD$Response$Status ACCEPTED -> ACCEPTED
    fi.iki.elonen.NanoHTTPD$Response$Status NO_CONTENT -> NO_CONTENT
    fi.iki.elonen.NanoHTTPD$Response$Status PARTIAL_CONTENT -> PARTIAL_CONTENT
    fi.iki.elonen.NanoHTTPD$Response$Status MULTI_STATUS -> MULTI_STATUS
    fi.iki.elonen.NanoHTTPD$Response$Status REDIRECT -> REDIRECT
    fi.iki.elonen.NanoHTTPD$Response$Status FOUND -> FOUND
    fi.iki.elonen.NanoHTTPD$Response$Status REDIRECT_SEE_OTHER -> REDIRECT_SEE_OTHER
    fi.iki.elonen.NanoHTTPD$Response$Status NOT_MODIFIED -> NOT_MODIFIED
    fi.iki.elonen.NanoHTTPD$Response$Status TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    fi.iki.elonen.NanoHTTPD$Response$Status BAD_REQUEST -> BAD_REQUEST
    fi.iki.elonen.NanoHTTPD$Response$Status UNAUTHORIZED -> UNAUTHORIZED
    fi.iki.elonen.NanoHTTPD$Response$Status FORBIDDEN -> FORBIDDEN
    fi.iki.elonen.NanoHTTPD$Response$Status NOT_FOUND -> NOT_FOUND
    fi.iki.elonen.NanoHTTPD$Response$Status METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    fi.iki.elonen.NanoHTTPD$Response$Status NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    fi.iki.elonen.NanoHTTPD$Response$Status REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    fi.iki.elonen.NanoHTTPD$Response$Status CONFLICT -> CONFLICT
    fi.iki.elonen.NanoHTTPD$Response$Status GONE -> GONE
    fi.iki.elonen.NanoHTTPD$Response$Status LENGTH_REQUIRED -> LENGTH_REQUIRED
    fi.iki.elonen.NanoHTTPD$Response$Status PRECONDITION_FAILED -> PRECONDITION_FAILED
    fi.iki.elonen.NanoHTTPD$Response$Status PAYLOAD_TOO_LARGE -> PAYLOAD_TOO_LARGE
    fi.iki.elonen.NanoHTTPD$Response$Status UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    fi.iki.elonen.NanoHTTPD$Response$Status RANGE_NOT_SATISFIABLE -> RANGE_NOT_SATISFIABLE
    fi.iki.elonen.NanoHTTPD$Response$Status EXPECTATION_FAILED -> EXPECTATION_FAILED
    fi.iki.elonen.NanoHTTPD$Response$Status TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    fi.iki.elonen.NanoHTTPD$Response$Status INTERNAL_ERROR -> INTERNAL_ERROR
    fi.iki.elonen.NanoHTTPD$Response$Status NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    fi.iki.elonen.NanoHTTPD$Response$Status SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    fi.iki.elonen.NanoHTTPD$Response$Status UNSUPPORTED_HTTP_VERSION -> UNSUPPORTED_HTTP_VERSION
    int requestStatus -> requestStatus
    java.lang.String description -> description
    fi.iki.elonen.NanoHTTPD$Response$Status[] $VALUES -> a
    1339:1339:fi.iki.elonen.NanoHTTPD$Response$Status[] values() -> values
    1339:1339:fi.iki.elonen.NanoHTTPD$Response$Status valueOf(java.lang.String) -> valueOf
    1394:1399:fi.iki.elonen.NanoHTTPD$Response$Status lookup(int) -> lookup
    1404:1404:java.lang.String getDescription() -> getDescription
    1409:1409:int getRequestStatus() -> getRequestStatus
fi.iki.elonen.NanoHTTPD$ResponseException -> fi.iki.elonen.NanoHTTPD$ResponseException:
    long serialVersionUID -> serialVersionUID
    fi.iki.elonen.NanoHTTPD$Response$Status status -> status
    1739:1739:fi.iki.elonen.NanoHTTPD$Response$Status getStatus() -> getStatus
fi.iki.elonen.NanoHTTPD$ServerRunnable -> fi.iki.elonen.NanoHTTPD$m:
    int timeout -> b
    java.io.IOException bindException -> c
    boolean hasBinded -> d
    fi.iki.elonen.NanoHTTPD this$0 -> a
    1761:1779:void run() -> run
    1746:1746:boolean access$1100(fi.iki.elonen.NanoHTTPD$ServerRunnable) -> a
    1746:1746:java.io.IOException access$1200(fi.iki.elonen.NanoHTTPD$ServerRunnable) -> b
fi.iki.elonen.NanoHTTPD$ServerSocketFactory -> fi.iki.elonen.NanoHTTPD$n:
    java.net.ServerSocket create() -> a
fi.iki.elonen.NanoHTTPD$TempFile -> fi.iki.elonen.NanoHTTPD$o:
    void delete() -> a
    java.lang.String getName() -> b
fi.iki.elonen.NanoHTTPD$TempFileManager -> fi.iki.elonen.NanoHTTPD$p:
    void clear() -> a
    fi.iki.elonen.NanoHTTPD$TempFile createTempFile(java.lang.String) -> a
fi.iki.elonen.NanoHTTPD$TempFileManagerFactory -> fi.iki.elonen.NanoHTTPD$q:
    fi.iki.elonen.NanoHTTPD$TempFileManager create() -> a
org.apache.commons.codec.BinaryDecoder -> org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
org.apache.commons.codec.BinaryEncoder -> org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.Decoder -> org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.DecoderException:
org.apache.commons.codec.Encoder -> org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.EncoderException:
org.apache.commons.codec.StringDecoder -> org.apache.commons.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
org.apache.commons.codec.StringEncoder -> org.apache.commons.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.StringEncoderComparator -> org.apache.commons.codec.StringEncoderComparator:
    8:8:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.Base64:
    7:7:boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    8:8:byte[] encodeBase64(byte[]) -> encodeBase64
    9:9:byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    10:10:java.lang.Object decode(java.lang.Object) -> decode
    11:11:byte[] decode(byte[]) -> decode
    12:12:byte[] encodeBase64(byte[],boolean) -> encodeBase64
    13:13:byte[] decodeBase64(byte[]) -> decodeBase64
    14:14:java.lang.Object encode(java.lang.Object) -> encode
    15:15:byte[] encode(byte[]) -> encode
org.apache.commons.codec.binary.BinaryCodec -> org.apache.commons.codec.binary.BinaryCodec:
    7:7:byte[] encode(byte[]) -> encode
    8:8:java.lang.Object encode(java.lang.Object) -> encode
    9:9:java.lang.Object decode(java.lang.Object) -> decode
    10:10:byte[] decode(byte[]) -> decode
    11:11:byte[] toByteArray(java.lang.String) -> toByteArray
    12:12:byte[] fromAscii(char[]) -> fromAscii
    13:13:byte[] fromAscii(byte[]) -> fromAscii
    14:14:byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    15:15:char[] toAsciiChars(byte[]) -> toAsciiChars
    16:16:java.lang.String toAsciiString(byte[]) -> toAsciiString
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.Hex:
    7:7:byte[] decodeHex(char[]) -> decodeHex
    8:8:int toDigit(char,int) -> toDigit
    9:9:char[] encodeHex(byte[]) -> encodeHex
    10:10:byte[] decode(byte[]) -> decode
    11:11:java.lang.Object decode(java.lang.Object) -> decode
    12:12:byte[] encode(byte[]) -> encode
    13:13:java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.language.DoubleMetaphone -> org.apache.commons.codec.language.DoubleMetaphone:
    int maxCodeLen -> maxCodeLen
    22:22:java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    23:23:java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    24:24:java.lang.Object encode(java.lang.Object) -> encode
    25:25:java.lang.String encode(java.lang.String) -> encode
    26:26:boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    27:27:boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    28:28:int getMaxCodeLen() -> getMaxCodeLen
    29:29:void setMaxCodeLen(int) -> setMaxCodeLen
    30:30:char charAt(java.lang.String,int) -> charAt
    31:31:boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    org.apache.commons.codec.language.DoubleMetaphone this$0 -> this$0
    9:9:void append(char) -> append
    10:10:void append(char,char) -> append
    11:11:void appendPrimary(char) -> appendPrimary
    12:12:void appendAlternate(char) -> appendAlternate
    13:13:void append(java.lang.String) -> append
    14:14:void append(java.lang.String,java.lang.String) -> append
    15:15:void appendPrimary(java.lang.String) -> appendPrimary
    16:16:void appendAlternate(java.lang.String) -> appendAlternate
    17:17:java.lang.String getPrimary() -> getPrimary
    18:18:java.lang.String getAlternate() -> getAlternate
    19:19:boolean isComplete() -> isComplete
org.apache.commons.codec.language.Metaphone -> org.apache.commons.codec.language.Metaphone:
    7:7:java.lang.String metaphone(java.lang.String) -> metaphone
    8:8:java.lang.Object encode(java.lang.Object) -> encode
    9:9:java.lang.String encode(java.lang.String) -> encode
    10:10:boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    11:11:int getMaxCodeLen() -> getMaxCodeLen
    12:12:void setMaxCodeLen(int) -> setMaxCodeLen
org.apache.commons.codec.language.RefinedSoundex -> org.apache.commons.codec.language.RefinedSoundex:
    org.apache.commons.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    8:8:int difference(java.lang.String,java.lang.String) -> difference
    9:9:java.lang.Object encode(java.lang.Object) -> encode
    10:10:java.lang.String encode(java.lang.String) -> encode
    11:11:java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.Soundex -> org.apache.commons.codec.language.Soundex:
    org.apache.commons.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    8:8:int difference(java.lang.String,java.lang.String) -> difference
    9:9:java.lang.Object encode(java.lang.Object) -> encode
    10:10:java.lang.String encode(java.lang.String) -> encode
    12:12:int getMaxLength() -> getMaxLength
    14:14:void setMaxLength(int) -> setMaxLength
    15:15:java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.net.BCodec -> org.apache.commons.codec.net.BCodec:
    9:9:java.lang.String getEncoding() -> getEncoding
    10:10:byte[] doEncoding(byte[]) -> doEncoding
    11:11:byte[] doDecoding(byte[]) -> doDecoding
    12:12:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    13:13:java.lang.String encode(java.lang.String) -> encode
    14:14:java.lang.String decode(java.lang.String) -> decode
    15:15:java.lang.Object encode(java.lang.Object) -> encode
    16:16:java.lang.Object decode(java.lang.Object) -> decode
    17:17:java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.codec.net.QCodec -> org.apache.commons.codec.net.QCodec:
    9:9:java.lang.String getEncoding() -> getEncoding
    10:10:byte[] doEncoding(byte[]) -> doEncoding
    11:11:byte[] doDecoding(byte[]) -> doDecoding
    12:12:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    13:13:java.lang.String encode(java.lang.String) -> encode
    14:14:java.lang.String decode(java.lang.String) -> decode
    15:15:java.lang.Object encode(java.lang.Object) -> encode
    16:16:java.lang.Object decode(java.lang.Object) -> decode
    17:17:java.lang.String getDefaultCharset() -> getDefaultCharset
    18:18:boolean isEncodeBlanks() -> isEncodeBlanks
    19:19:void setEncodeBlanks(boolean) -> setEncodeBlanks
org.apache.commons.codec.net.QuotedPrintableCodec -> org.apache.commons.codec.net.QuotedPrintableCodec:
    8:8:byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    9:9:byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    10:10:byte[] encode(byte[]) -> encode
    11:11:byte[] decode(byte[]) -> decode
    12:12:java.lang.String encode(java.lang.String) -> encode
    13:13:java.lang.String decode(java.lang.String,java.lang.String) -> decode
    14:14:java.lang.String decode(java.lang.String) -> decode
    15:15:java.lang.Object encode(java.lang.Object) -> encode
    16:16:java.lang.Object decode(java.lang.Object) -> decode
    17:17:java.lang.String getDefaultCharset() -> getDefaultCharset
    18:18:java.lang.String encode(java.lang.String,java.lang.String) -> encode
org.apache.commons.codec.net.RFC1522Codec -> org.apache.commons.codec.net.RFC1522Codec:
    6:6:java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    7:7:java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
org.apache.commons.codec.net.URLCodec -> org.apache.commons.codec.net.URLCodec:
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    java.lang.String charset -> charset
    8:8:byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    9:9:byte[] decodeUrl(byte[]) -> decodeUrl
    10:10:byte[] encode(byte[]) -> encode
    11:11:byte[] decode(byte[]) -> decode
    12:12:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    13:13:java.lang.String encode(java.lang.String) -> encode
    14:14:java.lang.String decode(java.lang.String,java.lang.String) -> decode
    15:15:java.lang.String decode(java.lang.String) -> decode
    16:16:java.lang.Object encode(java.lang.Object) -> encode
    17:17:java.lang.Object decode(java.lang.Object) -> decode
    19:19:java.lang.String getEncoding() -> getEncoding
    20:20:java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.logging.Log -> org.apache.commons.logging.Log:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
org.apache.commons.logging.LogConfigurationException -> org.apache.commons.logging.LogConfigurationException:
    java.lang.Throwable cause -> cause
    10:10:java.lang.Throwable getCause() -> getCause
org.apache.commons.logging.LogFactory -> org.apache.commons.logging.LogFactory:
    java.lang.String DIAGNOSTICS_DEST_PROPERTY -> DIAGNOSTICS_DEST_PROPERTY
    java.lang.String FACTORY_DEFAULT -> FACTORY_DEFAULT
    java.lang.String FACTORY_PROPERTIES -> FACTORY_PROPERTIES
    java.lang.String FACTORY_PROPERTY -> FACTORY_PROPERTY
    java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY -> HASHTABLE_IMPLEMENTATION_PROPERTY
    java.lang.String PRIORITY_KEY -> PRIORITY_KEY
    java.lang.String SERVICE_ID -> SERVICE_ID
    java.lang.String TCCL_KEY -> TCCL_KEY
    java.util.Hashtable factories -> factories
    org.apache.commons.logging.LogFactory nullClassLoaderFactory -> nullClassLoaderFactory
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    13:13:org.apache.commons.logging.LogFactory getFactory() -> getFactory
    14:14:org.apache.commons.logging.Log getLog(java.lang.Class) -> getLog
    15:15:org.apache.commons.logging.Log getLog(java.lang.String) -> getLog
    16:16:void release(java.lang.ClassLoader) -> release
    17:17:void releaseAll() -> releaseAll
    18:18:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    19:19:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    20:20:java.lang.ClassLoader directGetContextClassLoader() -> directGetContextClassLoader
    21:21:org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader) -> newFactory
    22:22:org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    23:23:java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader) -> createFactory
    24:24:boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    25:25:void logRawDiagnostic(java.lang.String) -> logRawDiagnostic
    26:26:java.lang.String objectId(java.lang.Object) -> objectId
org.apache.commons.logging.LogSource -> org.apache.commons.logging.LogSource:
    boolean jdk14IsAvailable -> jdk14IsAvailable
    boolean log4jIsAvailable -> log4jIsAvailable
    java.lang.reflect.Constructor logImplctor -> logImplctor
    java.util.Hashtable logs -> logs
    6:6:void setLogImplementation(java.lang.String) -> setLogImplementation
    7:7:void setLogImplementation(java.lang.Class) -> setLogImplementation
    8:8:org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    9:9:org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    10:10:org.apache.commons.logging.Log makeNewLogInstance(java.lang.String) -> makeNewLogInstance
    11:11:java.lang.String[] getLogNames() -> getLogNames
org.apache.commons.logging.impl.Jdk14Logger -> org.apache.commons.logging.impl.Jdk14Logger:
    java.util.logging.Level dummyLevel -> dummyLevel
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    7:7:void debug(java.lang.Object) -> debug
    8:8:void debug(java.lang.Object,java.lang.Throwable) -> debug
    9:9:void error(java.lang.Object) -> error
    10:10:void error(java.lang.Object,java.lang.Throwable) -> error
    11:11:void fatal(java.lang.Object) -> fatal
    12:12:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    13:13:java.util.logging.Logger getLogger() -> getLogger
    14:14:void info(java.lang.Object) -> info
    15:15:void info(java.lang.Object,java.lang.Throwable) -> info
    16:16:boolean isDebugEnabled() -> isDebugEnabled
    17:17:boolean isErrorEnabled() -> isErrorEnabled
    18:18:boolean isFatalEnabled() -> isFatalEnabled
    19:19:boolean isInfoEnabled() -> isInfoEnabled
    20:20:boolean isTraceEnabled() -> isTraceEnabled
    21:21:boolean isWarnEnabled() -> isWarnEnabled
    22:22:void trace(java.lang.Object) -> trace
    23:23:void trace(java.lang.Object,java.lang.Throwable) -> trace
    24:24:void warn(java.lang.Object) -> warn
    25:25:void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.commons.logging.impl.LogFactoryImpl -> org.apache.commons.logging.impl.LogFactoryImpl:
    java.lang.String ALLOW_FLAWED_CONTEXT_PROPERTY -> ALLOW_FLAWED_CONTEXT_PROPERTY
    java.lang.String ALLOW_FLAWED_DISCOVERY_PROPERTY -> ALLOW_FLAWED_DISCOVERY_PROPERTY
    java.lang.String ALLOW_FLAWED_HIERARCHY_PROPERTY -> ALLOW_FLAWED_HIERARCHY_PROPERTY
    java.lang.String LOG_PROPERTY -> LOG_PROPERTY
    java.lang.String LOG_PROPERTY_OLD -> LOG_PROPERTY_OLD
    java.util.Hashtable attributes -> attributes
    java.util.Hashtable instances -> instances
    java.lang.reflect.Constructor logConstructor -> logConstructor
    java.lang.Class[] logConstructorSignature -> logConstructorSignature
    java.lang.reflect.Method logMethod -> logMethod
    java.lang.Class[] logMethodSignature -> logMethodSignature
    7:7:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    8:8:java.lang.String[] getAttributeNames() -> getAttributeNames
    9:9:org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    10:10:org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    11:11:void release() -> release
    12:12:void removeAttribute(java.lang.String) -> removeAttribute
    13:13:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    14:14:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    15:15:boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    16:16:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    17:17:void logDiagnostic(java.lang.String) -> logDiagnostic
    19:19:java.lang.String getLogClassName() -> getLogClassName
    21:21:java.lang.reflect.Constructor getLogConstructor() -> getLogConstructor
    23:23:boolean isJdk13LumberjackAvailable() -> isJdk13LumberjackAvailable
    25:25:boolean isJdk14Available() -> isJdk14Available
    27:27:boolean isLog4JAvailable() -> isLog4JAvailable
    28:28:org.apache.commons.logging.Log newInstance(java.lang.String) -> newInstance
org.apache.commons.logging.impl.NoOpLog -> org.apache.commons.logging.impl.NoOpLog:
    8:8:void trace(java.lang.Object) -> trace
    9:9:void trace(java.lang.Object,java.lang.Throwable) -> trace
    10:10:void debug(java.lang.Object) -> debug
    11:11:void debug(java.lang.Object,java.lang.Throwable) -> debug
    12:12:void info(java.lang.Object) -> info
    13:13:void info(java.lang.Object,java.lang.Throwable) -> info
    14:14:void warn(java.lang.Object) -> warn
    15:15:void warn(java.lang.Object,java.lang.Throwable) -> warn
    16:16:void error(java.lang.Object) -> error
    17:17:void error(java.lang.Object,java.lang.Throwable) -> error
    18:18:void fatal(java.lang.Object) -> fatal
    19:19:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    20:20:boolean isDebugEnabled() -> isDebugEnabled
    21:21:boolean isErrorEnabled() -> isErrorEnabled
    22:22:boolean isFatalEnabled() -> isFatalEnabled
    23:23:boolean isInfoEnabled() -> isInfoEnabled
    24:24:boolean isTraceEnabled() -> isTraceEnabled
    25:25:boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.SimpleLog -> org.apache.commons.logging.impl.SimpleLog:
    java.lang.String DEFAULT_DATE_TIME_FORMAT -> DEFAULT_DATE_TIME_FORMAT
    int LOG_LEVEL_ALL -> LOG_LEVEL_ALL
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_FATAL -> LOG_LEVEL_FATAL
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_OFF -> LOG_LEVEL_OFF
    int LOG_LEVEL_TRACE -> LOG_LEVEL_TRACE
    int LOG_LEVEL_WARN -> LOG_LEVEL_WARN
    int currentLogLevel -> currentLogLevel
    java.text.DateFormat dateFormatter -> dateFormatter
    java.lang.String dateTimeFormat -> dateTimeFormat
    java.lang.String logName -> logName
    boolean showDateTime -> showDateTime
    boolean showLogName -> showLogName
    boolean showShortName -> showShortName
    java.util.Properties simpleLogProps -> simpleLogProps
    java.lang.String systemPrefix -> systemPrefix
    7:7:void setLevel(int) -> setLevel
    8:8:int getLevel() -> getLevel
    9:9:void log(int,java.lang.Object,java.lang.Throwable) -> log
    10:10:void write(java.lang.StringBuffer) -> write
    11:11:boolean isLevelEnabled(int) -> isLevelEnabled
    12:12:void debug(java.lang.Object) -> debug
    13:13:void debug(java.lang.Object,java.lang.Throwable) -> debug
    14:14:void trace(java.lang.Object) -> trace
    15:15:void trace(java.lang.Object,java.lang.Throwable) -> trace
    16:16:void info(java.lang.Object) -> info
    17:17:void info(java.lang.Object,java.lang.Throwable) -> info
    18:18:void warn(java.lang.Object) -> warn
    19:19:void warn(java.lang.Object,java.lang.Throwable) -> warn
    20:20:void error(java.lang.Object) -> error
    21:21:void error(java.lang.Object,java.lang.Throwable) -> error
    22:22:void fatal(java.lang.Object) -> fatal
    23:23:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    24:24:boolean isDebugEnabled() -> isDebugEnabled
    25:25:boolean isErrorEnabled() -> isErrorEnabled
    26:26:boolean isFatalEnabled() -> isFatalEnabled
    27:27:boolean isInfoEnabled() -> isInfoEnabled
    28:28:boolean isTraceEnabled() -> isTraceEnabled
    29:29:boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.WeakHashtable -> org.apache.commons.logging.impl.WeakHashtable:
    7:7:boolean containsKey(java.lang.Object) -> containsKey
    8:8:java.util.Enumeration elements() -> elements
    9:9:java.util.Set entrySet() -> entrySet
    10:10:java.lang.Object get(java.lang.Object) -> get
    11:11:java.util.Enumeration keys() -> keys
    12:12:java.util.Set keySet() -> keySet
    13:13:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    14:14:void putAll(java.util.Map) -> putAll
    15:15:java.util.Collection values() -> values
    16:16:java.lang.Object remove(java.lang.Object) -> remove
    17:17:boolean isEmpty() -> isEmpty
    18:18:int size() -> size
    19:19:java.lang.String toString() -> toString
    20:20:void rehash() -> rehash
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    9:9:java.lang.String getHostName() -> getHostName
    10:10:int getPort() -> getPort
    11:11:java.lang.String getSchemeName() -> getSchemeName
    12:12:java.lang.String toURI() -> toURI
    13:13:java.lang.String toHostString() -> toHostString
    14:14:java.lang.String toString() -> toString
    15:15:boolean equals(java.lang.Object) -> equals
    16:16:int hashCode() -> hashCode
    17:17:java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_CONFLICT -> SC_CONFLICT
    int SC_CONTINUE -> SC_CONTINUE
    int SC_CREATED -> SC_CREATED
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_GONE -> SC_GONE
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_LOCKED -> SC_LOCKED
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_OK -> SC_OK
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_PROCESSING -> SC_PROCESSING
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_USE_PROXY -> SC_USE_PROXY
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    8:8:org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
org.apache.http.ParseException -> org.apache.http.ParseException:
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    int major -> major
    int minor -> minor
    java.lang.String protocol -> protocol
    7:7:java.lang.String getProtocol() -> getProtocol
    8:8:int getMajor() -> getMajor
    9:9:int getMinor() -> getMinor
    10:10:org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    11:11:int hashCode() -> hashCode
    12:12:boolean equals(java.lang.Object) -> equals
    13:13:boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    14:14:int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    15:15:boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    16:16:boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    17:17:java.lang.String toString() -> toString
    18:18:java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    6:6:void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    7:7:void unregister(java.lang.String) -> unregister
    8:8:org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    9:9:java.util.List getSchemeNames() -> getSchemeNames
    10:10:void setItems(java.util.Map) -> setItems
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    9:9:java.lang.String getHost() -> getHost
    10:10:int getPort() -> getPort
    11:11:java.lang.String getRealm() -> getRealm
    12:12:java.lang.String getScheme() -> getScheme
    13:13:int match(org.apache.http.auth.AuthScope) -> match
    14:14:boolean equals(java.lang.Object) -> equals
    15:15:java.lang.String toString() -> toString
    16:16:int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    6:6:void invalidate() -> invalidate
    7:7:boolean isValid() -> isValid
    8:8:void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    9:9:org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    10:10:org.apache.http.auth.Credentials getCredentials() -> getCredentials
    11:11:void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    12:12:org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    13:13:void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    14:14:java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    7:7:java.lang.String getName() -> getName
    8:8:int hashCode() -> hashCode
    9:9:boolean equals(java.lang.Object) -> equals
    10:10:java.lang.String toString() -> toString
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    8:8:java.security.Principal getUserPrincipal() -> getUserPrincipal
    9:9:java.lang.String getUserName() -> getUserName
    10:10:java.lang.String getPassword() -> getPassword
    11:11:java.lang.String getDomain() -> getDomain
    12:12:java.lang.String getWorkstation() -> getWorkstation
    13:13:int hashCode() -> hashCode
    14:14:boolean equals(java.lang.Object) -> equals
    15:15:java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    7:7:java.lang.String getName() -> getName
    8:8:java.lang.String getDomain() -> getDomain
    9:9:java.lang.String getUsername() -> getUsername
    10:10:int hashCode() -> hashCode
    11:11:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    8:8:java.security.Principal getUserPrincipal() -> getUserPrincipal
    9:9:java.lang.String getUserName() -> getUserName
    10:10:java.lang.String getPassword() -> getPassword
    11:11:int hashCode() -> hashCode
    12:12:boolean equals(java.lang.Object) -> equals
    13:13:java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    7:7:void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    6:6:java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    7:7:void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    7:7:int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    8:8:org.apache.http.HttpEntity getEntity() -> getEntity
    9:9:void setEntity(org.apache.http.HttpEntity) -> setEntity
    10:10:boolean expectContinue() -> expectContinue
    11:11:java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
    10:10:java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    java.lang.String getMethod() -> getMethod
    9:9:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    10:10:java.net.URI getURI() -> getURI
    11:11:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    12:12:void setURI(java.net.URI) -> setURI
    13:13:void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    14:14:void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    15:15:void abort() -> abort
    16:16:boolean isAborted() -> isAborted
    17:17:java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    9:9:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String BASIC -> BASIC
    java.lang.String DIGEST -> DIGEST
    java.lang.String NTLM -> NTLM
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String CONNECTION_MANAGER_FACTORY -> CONNECTION_MANAGER_FACTORY
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    7:7:void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    8:8:void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory) -> setConnectionManagerFactory
    9:9:void setHandleRedirects(boolean) -> setHandleRedirects
    10:10:void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    11:11:void setMaxRedirects(int) -> setMaxRedirects
    12:12:void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    13:13:void setHandleAuthentication(boolean) -> setHandleAuthentication
    14:14:void setCookiePolicy(java.lang.String) -> setCookiePolicy
    15:15:void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    16:16:void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    17:17:void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    6:6:boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    7:7:void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    8:8:boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    9:9:void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    10:10:java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    11:11:void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String USER_TOKEN -> USER_TOKEN
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    7:7:void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    8:8:void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    9:9:void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    10:10:void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    11:11:void setAuthSchemePref(java.util.List) -> setAuthSchemePref
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    7:7:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    6:6:java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    6:6:java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    7:7:java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    8:8:java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    9:9:java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    10:10:java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    6:6:java.util.List parse(java.net.URI,java.lang.String) -> parse
    7:7:java.util.List parse(org.apache.http.HttpEntity) -> parse
    8:8:boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    9:9:void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    10:10:java.lang.String format(java.util.List,java.lang.String) -> format
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    boolean attemptReuse -> attemptReuse
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    7:7:boolean eofDetected(java.io.InputStream) -> eofDetected
    8:8:boolean streamClosed(java.io.InputStream) -> streamClosed
    9:9:boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    boolean attemptReuse -> attemptReuse
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    8:8:boolean isRepeatable() -> isRepeatable
    9:9:java.io.InputStream getContent() -> getContent
    10:10:void consumeContent() -> consumeContent
    11:11:void writeTo(java.io.OutputStream) -> writeTo
    12:12:void releaseConnection() -> releaseConnection
    13:13:void abortConnection() -> abortConnection
    14:14:boolean eofDetected(java.io.InputStream) -> eofDetected
    15:15:boolean streamClosed(java.io.InputStream) -> streamClosed
    16:16:boolean streamAbort(java.io.InputStream) -> streamAbort
    17:17:void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    8:8:boolean isReadAllowed() -> isReadAllowed
    9:9:int read() -> read
    10:10:int read(byte[],int,int) -> read
    11:11:int read(byte[]) -> read
    12:12:int available() -> available
    13:13:void close() -> close
    14:14:void checkEOF(int) -> checkEOF
    15:15:void checkClose() -> checkClose
    16:16:void checkAbort() -> checkAbort
    17:17:void releaseConnection() -> releaseConnection
    18:18:void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    7:7:org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    7:7:org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    8:8:java.net.Socket createSocket() -> createSocket
    9:9:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    10:10:boolean isSecure(java.net.Socket) -> isSecure
    11:11:boolean equals(java.lang.Object) -> equals
    12:12:int hashCode() -> hashCode
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    7:7:void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
    java.lang.String TIMEOUT -> TIMEOUT
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    7:7:void setTimeout(long) -> setTimeout
    8:8:void setMaxTotalConnections(int) -> setMaxTotalConnections
    9:9:void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    7:7:long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    8:8:void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    9:9:void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    10:10:org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    11:11:void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    12:12:int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    8:8:int getDefaultMax() -> getDefaultMax
    9:9:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    10:10:void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    11:11:int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    12:12:void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    7:7:void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    8:8:void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    9:9:void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    7:7:org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    8:8:void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    9:9:org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    10:10:void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    11:11:java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    12:12:void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    7:7:int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    8:8:int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    9:9:int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    10:10:int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    11:11:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    12:12:java.net.InetAddress getLocalAddress() -> getLocalAddress
    13:13:int getHopCount() -> getHopCount
    14:14:org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    15:15:org.apache.http.HttpHost getProxyHost() -> getProxyHost
    16:16:org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    17:17:boolean isTunnelled() -> isTunnelled
    18:18:org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    19:19:boolean isLayered() -> isLayered
    20:20:boolean isSecure() -> isSecure
    21:21:boolean equals(java.lang.Object) -> equals
    22:22:int hashCode() -> hashCode
    23:23:java.lang.String toString() -> toString
    24:24:java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int COMPLETE -> COMPLETE
    int CONNECT_PROXY -> CONNECT_PROXY
    int CONNECT_TARGET -> CONNECT_TARGET
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int UNREACHABLE -> UNREACHABLE
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    10:10:org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    10:10:org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    5:5:org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    5:5:org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    8:8:void connectTarget(boolean) -> connectTarget
    9:9:void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    10:10:void tunnelTarget(boolean) -> tunnelTarget
    11:11:void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    12:12:void layerProtocol(boolean) -> layerProtocol
    13:13:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    14:14:java.net.InetAddress getLocalAddress() -> getLocalAddress
    15:15:int getHopCount() -> getHopCount
    16:16:org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    17:17:org.apache.http.HttpHost getProxyHost() -> getProxyHost
    18:18:boolean isConnected() -> isConnected
    19:19:org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    20:20:boolean isTunnelled() -> isTunnelled
    21:21:org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    22:22:boolean isLayered() -> isLayered
    23:23:boolean isSecure() -> isSecure
    24:24:org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    25:25:boolean equals(java.lang.Object) -> equals
    26:26:int hashCode() -> hashCode
    27:27:java.lang.String toString() -> toString
    28:28:java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    8:8:org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    9:9:java.net.Socket createSocket() -> createSocket
    10:10:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    11:11:boolean isSecure(java.net.Socket) -> isSecure
    12:12:boolean equals(java.lang.Object) -> equals
    13:13:int hashCode() -> hashCode
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    6:6:int getDefaultPort() -> getDefaultPort
    7:7:org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    8:8:java.lang.String getName() -> getName
    9:9:boolean isLayered() -> isLayered
    10:10:int resolvePort(int) -> resolvePort
    11:11:java.lang.String toString() -> toString
    12:12:boolean equals(java.lang.Object) -> equals
    13:13:int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    6:6:org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    7:7:org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    8:8:org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    9:9:org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    10:10:org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    11:11:java.util.List getSchemeNames() -> getSchemeNames
    12:12:void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    6:6:boolean isIPv4Address(java.lang.String) -> isIPv4Address
    7:7:boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    8:8:boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    9:9:boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    7:7:int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    2:2:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    6:6:java.lang.String getHost() -> getHost
    7:7:java.lang.String getPath() -> getPath
    8:8:int getPort() -> getPort
    9:9:boolean isSecure() -> isSecure
    10:10:java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    7:7:int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    2:2:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    6:6:void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    7:7:void unregister(java.lang.String) -> unregister
    8:8:org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    9:9:org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    10:10:java.util.List getSpecNames() -> getSpecNames
    11:11:void setItems(java.util.Map) -> setItems
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    7:7:void setDatePatterns(java.util.Collection) -> setDatePatterns
    8:8:void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    boolean chunked -> chunked
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header contentType -> contentType
    7:7:org.apache.http.Header getContentType() -> getContentType
    8:8:org.apache.http.Header getContentEncoding() -> getContentEncoding
    9:9:boolean isChunked() -> isChunked
    10:10:void setContentType(org.apache.http.Header) -> setContentType
    11:11:void setContentType(java.lang.String) -> setContentType
    12:12:void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    13:13:void setContentEncoding(java.lang.String) -> setContentEncoding
    14:14:void setChunked(boolean) -> setChunked
    15:15:void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    7:7:long getContentLength() -> getContentLength
    8:8:java.io.InputStream getContent() -> getContent
    9:9:boolean isRepeatable() -> isRepeatable
    10:10:void setContentLength(long) -> setContentLength
    11:11:void setContent(java.io.InputStream) -> setContent
    12:12:void writeTo(java.io.OutputStream) -> writeTo
    13:13:boolean isStreaming() -> isStreaming
    14:14:void consumeContent() -> consumeContent
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    7:7:long getContentLength() -> getContentLength
    8:8:java.io.InputStream getContent() -> getContent
    9:9:boolean isChunked() -> isChunked
    10:10:boolean isRepeatable() -> isRepeatable
    11:11:void writeTo(java.io.OutputStream) -> writeTo
    12:12:boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    7:7:boolean isRepeatable() -> isRepeatable
    8:8:long getContentLength() -> getContentLength
    9:9:java.io.InputStream getContent() -> getContent
    10:10:void writeTo(java.io.OutputStream) -> writeTo
    11:11:boolean isStreaming() -> isStreaming
    12:12:java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int CHUNKED -> CHUNKED
    int IDENTITY -> IDENTITY
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    7:7:long getContentLength() -> getContentLength
    8:8:java.io.InputStream getContent() -> getContent
    9:9:boolean isRepeatable() -> isRepeatable
    10:10:void writeTo(java.io.OutputStream) -> writeTo
    11:11:boolean isStreaming() -> isStreaming
    12:12:void consumeContent() -> consumeContent
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    7:7:boolean isRepeatable() -> isRepeatable
    8:8:long getContentLength() -> getContentLength
    9:9:java.io.InputStream getContent() -> getContent
    10:10:void writeTo(java.io.OutputStream) -> writeTo
    11:11:boolean isStreaming() -> isStreaming
    12:12:java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    7:7:boolean isRepeatable() -> isRepeatable
    8:8:boolean isChunked() -> isChunked
    9:9:long getContentLength() -> getContentLength
    10:10:org.apache.http.Header getContentType() -> getContentType
    11:11:org.apache.http.Header getContentEncoding() -> getContentEncoding
    12:12:java.io.InputStream getContent() -> getContent
    13:13:void writeTo(java.io.OutputStream) -> writeTo
    14:14:boolean isStreaming() -> isStreaming
    15:15:void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    7:7:boolean isRepeatable() -> isRepeatable
    8:8:long getContentLength() -> getContentLength
    9:9:java.io.InputStream getContent() -> getContent
    10:10:void writeTo(java.io.OutputStream) -> writeTo
    11:11:boolean isStreaming() -> isStreaming
    12:12:void consumeContent() -> consumeContent
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    7:7:java.io.InputStream getContent() -> getContent
    8:8:long getContentLength() -> getContentLength
    9:9:boolean isRepeatable() -> isRepeatable
    10:10:boolean isStreaming() -> isStreaming
    11:11:void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    8:8:boolean isRepeatable() -> isRepeatable
    9:9:long getContentLength() -> getContentLength
    10:10:java.io.InputStream getContent() -> getContent
    11:11:void writeTo(java.io.OutputStream) -> writeTo
    12:12:boolean isStreaming() -> isStreaming
    13:13:java.lang.Object clone() -> clone
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    void assertOpen() -> assertOpen
    8:8:org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    9:9:org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    10:10:org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    11:11:org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    12:12:org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    13:13:void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    14:14:boolean isResponseAvailable(int) -> isResponseAvailable
    15:15:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    16:16:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    17:17:void doFlush() -> doFlush
    18:18:void flush() -> flush
    19:19:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    20:20:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    21:21:boolean isStale() -> isStale
    22:22:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    void assertOpen() -> assertOpen
    8:8:org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    9:9:org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    10:10:org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    11:11:org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    12:12:org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    13:13:void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    14:14:org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    15:15:void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    16:16:void doFlush() -> doFlush
    17:17:void flush() -> flush
    18:18:void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    19:19:void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    20:20:boolean isStale() -> isStale
    21:21:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    7:7:boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    8:8:org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    7:7:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    8:8:java.lang.String toString() -> toString
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    7:7:org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    8:8:org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    8:8:org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    9:9:org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    10:10:java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    7:7:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    8:8:java.lang.String toString() -> toString
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    7:7:java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    7:7:long getReceivedBytesCount() -> getReceivedBytesCount
    8:8:long getSentBytesCount() -> getSentBytesCount
    9:9:long getRequestCount() -> getRequestCount
    10:10:void incrementRequestCount() -> incrementRequestCount
    11:11:long getResponseCount() -> getResponseCount
    12:12:void incrementResponseCount() -> incrementResponseCount
    13:13:java.lang.Object getMetric(java.lang.String) -> getMetric
    14:14:void setMetric(java.lang.String,java.lang.Object) -> setMetric
    15:15:void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    7:7:boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    8:8:void assertNotOpen() -> assertNotOpen
    9:9:void assertOpen() -> assertOpen
    10:10:org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    11:11:org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    12:12:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    13:13:boolean isOpen() -> isOpen
    14:14:java.net.Socket getSocket() -> getSocket
    15:15:java.net.InetAddress getLocalAddress() -> getLocalAddress
    16:16:int getLocalPort() -> getLocalPort
    17:17:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    18:18:int getRemotePort() -> getRemotePort
    19:19:void setSocketTimeout(int) -> setSocketTimeout
    20:20:int getSocketTimeout() -> getSocketTimeout
    21:21:void shutdown() -> shutdown
    22:22:void close() -> close
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    8:8:void assertNotOpen() -> assertNotOpen
    9:9:void assertOpen() -> assertOpen
    10:10:org.apache.http.io.SessionInputBuffer createHttpDataReceiver(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataReceiver
    11:11:org.apache.http.io.SessionOutputBuffer createHttpDataTransmitter(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataTransmitter
    12:12:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    13:13:java.net.Socket getSocket() -> getSocket
    14:14:boolean isOpen() -> isOpen
    15:15:java.net.InetAddress getLocalAddress() -> getLocalAddress
    16:16:int getLocalPort() -> getLocalPort
    17:17:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    18:18:int getRemotePort() -> getRemotePort
    19:19:void setSocketTimeout(int) -> setSocketTimeout
    20:20:int getSocketTimeout() -> getSocketTimeout
    21:21:void shutdown() -> shutdown
    22:22:void close() -> close
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    7:7:void processChallenge(org.apache.http.Header) -> processChallenge
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    9:9:boolean isProxy() -> isProxy
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    7:7:java.lang.String getSchemeName() -> getSchemeName
    8:8:void processChallenge(org.apache.http.Header) -> processChallenge
    9:9:boolean isComplete() -> isComplete
    10:10:boolean isConnectionBased() -> isConnectionBased
    11:11:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    12:12:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    7:7:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    7:7:void processChallenge(org.apache.http.Header) -> processChallenge
    8:8:boolean isComplete() -> isComplete
    9:9:java.lang.String getSchemeName() -> getSchemeName
    10:10:boolean isConnectionBased() -> isConnectionBased
    11:11:void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    12:12:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    13:13:java.lang.String createCnonce() -> createCnonce
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    7:7:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    7:7:java.lang.String getSchemeName() -> getSchemeName
    8:8:java.lang.String getParameter(java.lang.String) -> getParameter
    9:9:java.lang.String getRealm() -> getRealm
    10:10:boolean isConnectionBased() -> isConnectionBased
    11:11:void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    12:12:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    13:13:boolean isComplete() -> isComplete
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    7:7:void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    8:8:java.util.Map getParameters() -> getParameters
    9:9:java.lang.String getParameter(java.lang.String) -> getParameter
    10:10:java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    7:7:java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    8:8:java.util.List getAuthPreferences() -> getAuthPreferences
    9:9:org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    24:24:org.apache.http.params.HttpParams getParams() -> getParams
    25:25:void setParams(org.apache.http.params.HttpParams) -> setParams
    26:26:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    27:27:org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    28:28:org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    29:29:void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    30:30:org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    31:31:void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    32:32:org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    33:33:void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    34:34:org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    35:35:void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    36:36:org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    37:37:void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    38:38:org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    39:39:void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    40:40:org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    41:41:void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    42:42:org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    43:43:void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    44:44:org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    45:45:void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    46:46:org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    47:47:void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    48:48:org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    49:49:void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    50:50:org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    51:51:void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    52:52:org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    53:53:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    54:54:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    55:55:org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    56:56:int getResponseInterceptorCount() -> getResponseInterceptorCount
    57:57:void clearResponseInterceptors() -> clearResponseInterceptors
    58:58:void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    59:59:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    60:60:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    61:61:org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    62:62:int getRequestInterceptorCount() -> getRequestInterceptorCount
    63:63:void clearRequestInterceptors() -> clearRequestInterceptors
    64:64:void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    65:65:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    66:66:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    67:67:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    68:68:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    69:69:org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    70:70:org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    71:71:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    72:72:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    73:73:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    74:74:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    7:7:void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    8:8:void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    9:9:java.util.List getCookies() -> getCookies
    10:10:boolean clearExpired(java.util.Date) -> clearExpired
    11:11:java.lang.String toString() -> toString
    12:12:void clear() -> clear
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    7:7:void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    8:8:org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    9:9:java.lang.String toString() -> toString
    10:10:void clear() -> clear
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    7:7:java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    2:2:java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    9:9:org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    10:10:org.apache.http.params.HttpParams getClientParams() -> getClientParams
    11:11:org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    12:12:org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    13:13:java.lang.Object getParameter(java.lang.String) -> getParameter
    14:14:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    15:15:boolean removeParameter(java.lang.String) -> removeParameter
    16:16:org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    7:7:long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    9:9:org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    10:10:org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    11:11:org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    12:12:org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    13:13:org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    14:14:org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    15:15:org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    16:16:org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    17:17:org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    18:18:org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    19:19:org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    20:20:org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    21:21:org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    22:22:org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    23:23:org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    24:24:org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    25:25:org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    8:8:boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    9:9:boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    10:10:int getRetryCount() -> getRetryCount
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    7:7:boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    8:8:java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    7:7:boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    8:8:java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.params.HttpParams params -> params
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    7:7:void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    8:8:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    9:9:void releaseConnection() -> releaseConnection
    10:10:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    11:11:void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    12:12:boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    13:13:boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    14:14:org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    15:15:org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    7:7:boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    8:8:java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    7:7:java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    8:8:org.apache.http.HttpEntity getEntity() -> getEntity
    9:9:void setEntity(org.apache.http.HttpEntity) -> setEntity
    10:10:boolean expectContinue() -> expectContinue
    11:11:boolean isRepeatable() -> isRepeatable
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    6:6:boolean contains(java.net.URI) -> contains
    7:7:void add(java.net.URI) -> add
    8:8:boolean remove(java.net.URI) -> remove
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    8:8:void resetHeaders() -> resetHeaders
    9:9:java.lang.String getMethod() -> getMethod
    10:10:void setMethod(java.lang.String) -> setMethod
    11:11:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    12:12:void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    13:13:java.net.URI getURI() -> getURI
    14:14:void setURI(java.net.URI) -> setURI
    15:15:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    16:16:void abort() -> abort
    17:17:boolean isAborted() -> isAborted
    18:18:org.apache.http.HttpRequest getOriginal() -> getOriginal
    19:19:boolean isRepeatable() -> isRepeatable
    20:20:int getExecCount() -> getExecCount
    21:21:void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    6:6:org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    7:7:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    7:7:org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    7:7:void detach() -> detach
    8:8:org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    9:9:org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    10:10:void assertNotAborted() -> assertNotAborted
    11:11:void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    12:12:boolean isOpen() -> isOpen
    13:13:boolean isStale() -> isStale
    14:14:void setSocketTimeout(int) -> setSocketTimeout
    15:15:int getSocketTimeout() -> getSocketTimeout
    16:16:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    17:17:void flush() -> flush
    18:18:boolean isResponseAvailable(int) -> isResponseAvailable
    19:19:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    20:20:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    21:21:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    22:22:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    23:23:java.net.InetAddress getLocalAddress() -> getLocalAddress
    24:24:int getLocalPort() -> getLocalPort
    25:25:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    26:26:int getRemotePort() -> getRemotePort
    27:27:boolean isSecure() -> isSecure
    28:28:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    29:29:void markReusable() -> markReusable
    30:30:void unmarkReusable() -> unmarkReusable
    31:31:boolean isMarkedReusable() -> isMarkedReusable
    32:32:void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    33:33:void releaseConnection() -> releaseConnection
    34:34:void abortConnection() -> abortConnection
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    6:6:java.lang.Object getState() -> getState
    7:7:void setState(java.lang.Object) -> setState
    8:8:void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    9:9:void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    10:10:void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    11:11:void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    12:12:void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    7:7:void assertAttached() -> assertAttached
    8:8:void detach() -> detach
    9:9:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    10:10:void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    11:11:void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    12:12:void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    13:13:void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    14:14:void close() -> close
    15:15:void shutdown() -> shutdown
    16:16:java.lang.Object getState() -> getState
    17:17:void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    8:8:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    9:9:boolean isSecure() -> isSecure
    10:10:java.net.Socket getSocket() -> getSocket
    11:11:void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    12:12:void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    13:13:void shutdown() -> shutdown
    14:14:void close() -> close
    15:15:org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    16:16:org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    17:17:org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    18:18:void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    19:19:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    20:20:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    7:7:org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    8:8:void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    9:9:void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    10:10:void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    7:7:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    7:7:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    6:6:void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    7:7:boolean remove(org.apache.http.HttpConnection) -> remove
    8:8:void removeAll() -> removeAll
    9:9:void closeIdleConnections(long) -> closeIdleConnections
    10:10:void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    7:7:boolean isDataAvailable(int) -> isDataAvailable
    8:8:int read(byte[],int,int) -> read
    9:9:int read() -> read
    10:10:int read(byte[]) -> read
    11:11:java.lang.String readLine() -> readLine
    12:12:int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    13:13:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    7:7:void write(byte[],int,int) -> write
    8:8:void write(int) -> write
    9:9:void write(byte[]) -> write
    10:10:void flush() -> flush
    11:11:void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    12:12:void writeLine(java.lang.String) -> writeLine
    13:13:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    java.net.ProxySelector proxySelector -> proxySelector
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    7:7:java.net.ProxySelector getProxySelector() -> getProxySelector
    8:8:void setProxySelector(java.net.ProxySelector) -> setProxySelector
    9:9:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    10:10:org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    11:11:java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    12:12:java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    long lastReleaseTime -> lastReleaseTime
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    19:19:void finalize() -> finalize
    20:20:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    21:21:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    22:22:void assertStillUp() -> assertStillUp
    23:23:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    24:24:org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    25:25:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    26:26:void closeExpiredConnections() -> closeExpiredConnections
    27:27:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    28:28:void shutdown() -> shutdown
    29:29:void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    10:10:void close() -> close
    11:11:void shutdown() -> shutdown
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    6:6:boolean enabled() -> enabled
    7:7:void output(java.io.InputStream) -> output
    8:8:void input(java.io.InputStream) -> input
    9:9:void output(byte[],int,int) -> output
    10:10:void input(byte[],int,int) -> input
    11:11:void output(byte[]) -> output
    12:12:void input(byte[]) -> input
    13:13:void output(int) -> output
    14:14:void input(int) -> input
    15:15:void output(java.lang.String) -> output
    16:16:void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    7:7:void enableConnectionGC() -> enableConnectionGC
    8:8:org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    11:11:void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    13:13:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    14:14:void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    16:16:void shutdown() -> shutdown
    17:17:void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    7:7:org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    8:8:org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    9:9:org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    7:7:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    7:7:org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    8:8:org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    9:9:void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    java.util.Queue freeConnections -> freeConnections
    int maxTotalConnections -> maxTotalConnections
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    java.util.Map routeToPool -> routeToPool
    java.util.Queue waitingThreads -> waitingThreads
    7:7:java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    8:8:java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    9:9:java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    10:10:org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    11:11:org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    12:12:org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    13:13:int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    14:14:org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    15:15:org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    16:16:void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    17:17:org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    18:18:org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    19:19:void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    20:20:void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    21:21:void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    22:22:void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    23:23:void deleteClosedConnections() -> deleteClosedConnections
    24:24:void shutdown() -> shutdown
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RefQueueHandler -> org.apache.http.impl.conn.tsccm.RefQueueHandler:
    void handleReference(java.lang.ref.Reference) -> handleReference
org.apache.http.impl.conn.tsccm.RefQueueWorker -> org.apache.http.impl.conn.tsccm.RefQueueWorker:
    org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler -> refHandler
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    java.lang.Thread workerThread -> workerThread
    7:7:void run() -> run
    8:8:void shutdown() -> shutdown
    9:9:java.lang.String toString() -> toString
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    java.util.LinkedList freeEntries -> freeEntries
    int maxEntries -> maxEntries
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute route -> route
    java.util.Queue waitingThreads -> waitingThreads
    6:6:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    7:7:int getMaxEntries() -> getMaxEntries
    8:8:boolean isUnused() -> isUnused
    9:9:int getCapacity() -> getCapacity
    10:10:int getEntryCount() -> getEntryCount
    11:11:org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    12:12:void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    13:13:void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    14:14:boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    15:15:void dropEntry() -> dropEntry
    16:16:void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    17:17:boolean hasThread() -> hasThread
    18:18:org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    19:19:void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    7:7:void finalize() -> finalize
    8:8:org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    9:9:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    10:10:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    11:11:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    12:12:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    13:13:void shutdown() -> shutdown
    14:14:int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    15:15:int getConnectionsInPool() -> getConnectionsInPool
    16:16:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    17:17:void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    6:6:java.util.concurrent.locks.Condition getCondition() -> getCondition
    7:7:org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    8:8:java.lang.Thread getThread() -> getThread
    9:9:boolean await(java.util.Date) -> await
    10:10:void wakeup() -> wakeup
    11:11:void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    6:6:void abort() -> abort
    7:7:void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    7:7:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    8:8:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    7:7:void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    8:8:org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    9:9:org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    10:10:java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    7:7:java.lang.String getName() -> getName
    8:8:java.lang.String getValue() -> getValue
    9:9:void setValue(java.lang.String) -> setValue
    10:10:java.lang.String getComment() -> getComment
    11:11:void setComment(java.lang.String) -> setComment
    12:12:java.lang.String getCommentURL() -> getCommentURL
    13:13:java.util.Date getExpiryDate() -> getExpiryDate
    14:14:void setExpiryDate(java.util.Date) -> setExpiryDate
    15:15:boolean isPersistent() -> isPersistent
    16:16:java.lang.String getDomain() -> getDomain
    17:17:void setDomain(java.lang.String) -> setDomain
    18:18:java.lang.String getPath() -> getPath
    19:19:void setPath(java.lang.String) -> setPath
    20:20:boolean isSecure() -> isSecure
    21:21:void setSecure(boolean) -> setSecure
    22:22:int[] getPorts() -> getPorts
    23:23:int getVersion() -> getVersion
    24:24:void setVersion(int) -> setVersion
    25:25:boolean isExpired(java.util.Date) -> isExpired
    26:26:void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    27:27:java.lang.String getAttribute(java.lang.String) -> getAttribute
    28:28:boolean containsAttribute(java.lang.String) -> containsAttribute
    29:29:java.lang.Object clone() -> clone
    30:30:java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    8:8:int[] getPorts() -> getPorts
    9:9:void setPorts(int[]) -> setPorts
    10:10:java.lang.String getCommentURL() -> getCommentURL
    11:11:void setCommentURL(java.lang.String) -> setCommentURL
    12:12:void setDiscard(boolean) -> setDiscard
    13:13:boolean isPersistent() -> isPersistent
    14:14:boolean isExpired(java.util.Date) -> isExpired
    15:15:java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    8:8:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    9:9:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    10:10:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    11:11:java.util.List formatCookies(java.util.List) -> formatCookies
    12:12:int getVersion() -> getVersion
    13:13:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    7:7:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    8:8:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    9:9:java.util.List formatCookies(java.util.List) -> formatCookies
    10:10:int getVersion() -> getVersion
    11:11:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    7:7:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    7:7:java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    8:8:java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    9:9:java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    10:10:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    11:11:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.util.TimeZone GMT -> GMT
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    6:6:java.util.Date parseDate(java.lang.String) -> parseDate
    7:7:java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    8:8:java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    9:9:java.lang.String formatDate(java.util.Date) -> formatDate
    10:10:java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    7:7:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    8:8:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    6:6:org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    8:8:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    9:9:java.util.List formatCookies(java.util.List) -> formatCookies
    10:10:int getVersion() -> getVersion
    11:11:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    7:7:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    8:8:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    9:9:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    10:10:java.util.List formatCookies(java.util.List) -> formatCookies
    11:11:void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    12:12:void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    13:13:int getVersion() -> getVersion
    14:14:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    7:7:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    9:9:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    10:10:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    8:8:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    9:9:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    10:10:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    11:11:void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    12:12:int getVersion() -> getVersion
    13:13:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    7:7:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    7:7:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    8:8:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    9:9:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    6:6:org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    7:7:org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    6:6:java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    7:7:void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    7:7:long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    7:7:long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    org.apache.http.message.LineParser lineParser -> lineParser
    7:7:org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    9:9:org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    8:8:void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    7:7:void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    8:8:int fillBuffer() -> fillBuffer
    9:9:boolean hasBufferedData() -> hasBufferedData
    10:10:int read() -> read
    11:11:int read(byte[],int,int) -> read
    12:12:int read(byte[]) -> read
    13:13:int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    14:14:java.lang.String readLine() -> readLine
    15:15:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    7:7:void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    8:8:void flushBuffer() -> flushBuffer
    9:9:void flush() -> flush
    10:10:void write(byte[],int,int) -> write
    11:11:void write(byte[]) -> write
    12:12:void write(int) -> write
    13:13:void writeLine(java.lang.String) -> writeLine
    14:14:void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    15:15:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    7:7:int read() -> read
    8:8:int read(byte[],int,int) -> read
    9:9:int read(byte[]) -> read
    10:10:void close() -> close
    11:11:org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    8:8:void flushCache() -> flushCache
    9:9:void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    10:10:void writeClosingChunk() -> writeClosingChunk
    11:11:void finish() -> finish
    12:12:void write(int) -> write
    13:13:void write(byte[]) -> write
    14:14:void write(byte[],int,int) -> write
    15:15:void flush() -> flush
    16:16:void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    7:7:void close() -> close
    8:8:int read() -> read
    9:9:int read(byte[],int,int) -> read
    10:10:int read(byte[]) -> read
    11:11:long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    7:7:void close() -> close
    8:8:void flush() -> flush
    9:9:void write(byte[],int,int) -> write
    10:10:void write(byte[]) -> write
    11:11:void write(int) -> write
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    7:7:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    7:7:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    7:7:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    7:7:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    7:7:long getBytesTransferred() -> getBytesTransferred
    8:8:void setBytesTransferred(long) -> setBytesTransferred
    9:9:void incrementBytesTransferred(long) -> incrementBytesTransferred
    10:10:void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    7:7:int available() -> available
    8:8:void close() -> close
    9:9:int read() -> read
    10:10:int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    7:7:void close() -> close
    8:8:void flush() -> flush
    9:9:void write(byte[],int,int) -> write
    10:10:void write(byte[]) -> write
    11:11:void write(int) -> write
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    7:7:boolean isDataAvailable(int) -> isDataAvailable
    8:8:boolean isStale() -> isStale
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    8:8:boolean containsHeader(java.lang.String) -> containsHeader
    9:9:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    10:10:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    11:11:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    12:12:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    13:13:void addHeader(org.apache.http.Header) -> addHeader
    14:14:void addHeader(java.lang.String,java.lang.String) -> addHeader
    15:15:void setHeader(org.apache.http.Header) -> setHeader
    16:16:void setHeader(java.lang.String,java.lang.String) -> setHeader
    17:17:void setHeaders(org.apache.http.Header[]) -> setHeaders
    18:18:void removeHeader(org.apache.http.Header) -> removeHeader
    19:19:void removeHeaders(java.lang.String) -> removeHeaders
    20:20:org.apache.http.HeaderIterator headerIterator() -> headerIterator
    21:21:org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    22:22:org.apache.http.params.HttpParams getParams() -> getParams
    23:23:void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    7:7:java.lang.String getName() -> getName
    8:8:java.lang.String getValue() -> getValue
    9:9:java.lang.String toString() -> toString
    10:10:org.apache.http.HeaderElement[] getElements() -> getElements
    11:11:java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    8:8:java.lang.String getName() -> getName
    9:9:java.lang.String getValue() -> getValue
    10:10:org.apache.http.NameValuePair[] getParameters() -> getParameters
    11:11:int getParameterCount() -> getParameterCount
    12:12:org.apache.http.NameValuePair getParameter(int) -> getParameter
    13:13:org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    14:14:boolean equals(java.lang.Object) -> equals
    15:15:int hashCode() -> hashCode
    16:16:java.lang.String toString() -> toString
    17:17:java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    8:8:boolean hasNext() -> hasNext
    9:9:org.apache.http.HeaderElement nextElement() -> nextElement
    10:10:java.lang.Object next() -> next
    11:11:void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    7:7:int findNext(int) -> findNext
    8:8:boolean filterHeader(int) -> filterHeader
    9:9:boolean hasNext() -> hasNext
    10:10:org.apache.http.Header nextHeader() -> nextHeader
    11:11:java.lang.Object next() -> next
    12:12:void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    7:7:java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    8:8:org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    9:9:int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    10:10:java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    11:11:org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    12:12:int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    13:13:java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    14:14:org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    15:15:int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    16:16:java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    17:17:org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    18:18:int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    19:19:void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    20:20:boolean isSeparator(char) -> isSeparator
    21:21:boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    7:7:org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    8:8:org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    9:9:org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    10:10:org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    11:11:org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    12:12:org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    13:13:org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    14:14:org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    15:15:org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    16:16:org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    17:17:org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    10:10:org.apache.http.HttpEntity getEntity() -> getEntity
    11:11:void setEntity(org.apache.http.HttpEntity) -> setEntity
    12:12:boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    10:10:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    11:11:org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    10:10:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    11:11:org.apache.http.StatusLine getStatusLine() -> getStatusLine
    12:12:org.apache.http.HttpEntity getEntity() -> getEntity
    13:13:java.util.Locale getLocale() -> getLocale
    14:14:void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    15:15:void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    16:16:void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    17:17:void setStatusCode(int) -> setStatusCode
    18:18:void setReasonPhrase(java.lang.String) -> setReasonPhrase
    19:19:void setEntity(org.apache.http.HttpEntity) -> setEntity
    20:20:void setLocale(java.util.Locale) -> setLocale
    21:21:java.lang.String getReason(int) -> getReason
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    7:7:org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    8:8:java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    9:9:org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    10:10:int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    11:11:java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    12:12:org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    13:13:void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    14:14:java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    15:15:org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    16:16:void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    17:17:java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    18:18:org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    19:19:void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.ProtocolVersion protocol -> protocol
    8:8:org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    9:9:org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    10:10:org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    11:11:boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    12:12:org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    13:13:org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    14:14:org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    15:15:org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    16:16:org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    17:17:org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    18:18:org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    19:19:org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    20:20:void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int lastIndex -> lastIndex
    7:7:int findNext(int) -> findNext
    8:8:boolean filterHeader(int) -> filterHeader
    9:9:boolean hasNext() -> hasNext
    10:10:org.apache.http.Header nextHeader() -> nextHeader
    11:11:java.lang.Object next() -> next
    12:12:void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    7:7:java.lang.String getName() -> getName
    8:8:java.lang.String getValue() -> getValue
    9:9:java.lang.String toString() -> toString
    10:10:boolean equals(java.lang.Object) -> equals
    11:11:int hashCode() -> hashCode
    12:12:java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    7:7:java.lang.String getMethod() -> getMethod
    8:8:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    9:9:java.lang.String getUri() -> getUri
    10:10:java.lang.String toString() -> toString
    11:11:java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    7:7:int getStatusCode() -> getStatusCode
    8:8:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    9:9:java.lang.String getReasonPhrase() -> getReasonPhrase
    10:10:java.lang.String toString() -> toString
    11:11:java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    org.apache.http.HeaderIterator headerIt -> headerIt
    int searchPos -> searchPos
    7:7:boolean hasNext() -> hasNext
    8:8:java.lang.String nextToken() -> nextToken
    9:9:java.lang.Object next() -> next
    10:10:void remove() -> remove
    11:11:int findNext(int) -> findNext
    12:12:java.lang.String createToken(java.lang.String,int,int) -> createToken
    13:13:int findTokenStart(int) -> findTokenStart
    14:14:int findTokenSeparator(int) -> findTokenSeparator
    15:15:int findTokenEnd(int) -> findTokenEnd
    16:16:boolean isTokenSeparator(char) -> isTokenSeparator
    17:17:boolean isWhitespace(char) -> isWhitespace
    18:18:boolean isTokenChar(char) -> isTokenChar
    19:19:boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    7:7:java.lang.String getName() -> getName
    8:8:java.lang.String getValue() -> getValue
    9:9:org.apache.http.HeaderElement[] getElements() -> getElements
    10:10:int getValuePos() -> getValuePos
    11:11:org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    12:12:java.lang.String toString() -> toString
    13:13:java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    6:6:void clear() -> clear
    7:7:void addHeader(org.apache.http.Header) -> addHeader
    8:8:void removeHeader(org.apache.http.Header) -> removeHeader
    9:9:void updateHeader(org.apache.http.Header) -> updateHeader
    10:10:void setHeaders(org.apache.http.Header[]) -> setHeaders
    11:11:org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    12:12:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    13:13:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    14:14:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    15:15:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    16:16:boolean containsHeader(java.lang.String) -> containsHeader
    17:17:org.apache.http.HeaderIterator iterator() -> iterator
    18:18:org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    19:19:org.apache.http.message.HeaderGroup copy() -> copy
    20:20:java.lang.Object clone() -> clone
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    6:6:int getLowerBound() -> getLowerBound
    7:7:int getUpperBound() -> getUpperBound
    8:8:int getPos() -> getPos
    9:9:void updatePos(int) -> updatePos
    10:10:boolean atEnd() -> atEnd
    11:11:java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    7:7:long getLongParameter(java.lang.String,long) -> getLongParameter
    8:8:org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    9:9:int getIntParameter(java.lang.String,int) -> getIntParameter
    10:10:org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    11:11:double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    12:12:org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    13:13:boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    14:14:org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    15:15:boolean isParameterTrue(java.lang.String) -> isParameterTrue
    16:16:boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    8:8:java.lang.Object getParameter(java.lang.String) -> getParameter
    9:9:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    10:10:boolean removeParameter(java.lang.String) -> removeParameter
    11:11:void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    12:12:boolean isParameterSet(java.lang.String) -> isParameterSet
    13:13:boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    14:14:void clear() -> clear
    15:15:org.apache.http.params.HttpParams copy() -> copy
    16:16:java.lang.Object clone() -> clone
    17:17:void copyParams(org.apache.http.params.HttpParams) -> copyParams
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    7:7:org.apache.http.params.HttpParams copy() -> copy
    8:8:java.lang.Object getParameter(java.lang.String) -> getParameter
    9:9:boolean removeParameter(java.lang.String) -> removeParameter
    10:10:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    11:11:org.apache.http.params.HttpParams getDefaults() -> getDefaults
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    7:7:void setSoTimeout(int) -> setSoTimeout
    8:8:void setTcpNoDelay(boolean) -> setTcpNoDelay
    9:9:void setSocketBufferSize(int) -> setSocketBufferSize
    10:10:void setLinger(int) -> setLinger
    11:11:void setConnectionTimeout(int) -> setConnectionTimeout
    12:12:void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    7:7:void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    8:8:void setContentCharset(java.lang.String) -> setContentCharset
    9:9:void setVersion(org.apache.http.HttpVersion) -> setVersion
    10:10:void setUserAgent(java.lang.String) -> setUserAgent
    11:11:void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    7:7:java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    8:8:void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    9:9:java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    10:10:void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    11:11:org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    12:12:void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    13:13:java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    14:14:void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    15:15:boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    16:16:void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    8:8:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    9:9:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    10:10:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    7:7:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    8:8:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    9:9:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    10:10:void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    11:11:void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    12:12:void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    13:13:void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    14:14:int getRequestInterceptorCount() -> getRequestInterceptorCount
    15:15:org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    16:16:void clearRequestInterceptors() -> clearRequestInterceptors
    17:17:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    18:18:void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    19:19:void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    20:20:int getResponseInterceptorCount() -> getResponseInterceptorCount
    21:21:org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    22:22:void clearResponseInterceptors() -> clearResponseInterceptors
    23:23:void setInterceptors(java.util.List) -> setInterceptors
    24:24:void clearInterceptors() -> clearInterceptors
    25:25:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    26:26:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    27:27:void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    28:28:org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    29:29:java.lang.Object clone() -> clone
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    7:7:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    8:8:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    9:9:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    10:10:org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    java.lang.String ASCII -> ASCII
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    int CR -> CR
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    int HT -> HT
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.lang.String ISO_8859_1 -> ISO_8859_1
    int LF -> LF
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    int SP -> SP
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_8 -> UTF_8
    6:6:boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.util.TimeZone GMT -> GMT
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    6:6:java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    6:6:boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    7:7:org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    8:8:void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    9:9:org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    10:10:org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    11:11:void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    7:7:void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    8:8:void unregister(java.lang.String) -> unregister
    9:9:void setHandlers(java.util.Map) -> setHandlers
    10:10:org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
    12:12:boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    6:6:void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    7:7:void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    8:8:void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    9:9:void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    10:10:void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    11:11:org.apache.http.params.HttpParams getParams() -> getParams
    12:12:void setParams(org.apache.http.params.HttpParams) -> setParams
    13:13:void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    14:14:void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    15:15:void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    7:7:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    7:7:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    7:7:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    7:7:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    7:7:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    7:7:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    8:8:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    9:9:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    6:6:void register(java.lang.String,java.lang.Object) -> register
    7:7:void unregister(java.lang.String) -> unregister
    8:8:void setHandlers(java.util.Map) -> setHandlers
    9:9:java.lang.Object lookup(java.lang.String) -> lookup
    10:10:boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    6:6:void append(byte[],int,int) -> append
    7:7:void append(int) -> append
    8:8:void append(char[],int,int) -> append
    9:9:void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    10:10:void clear() -> clear
    11:11:byte[] toByteArray() -> toByteArray
    12:12:int byteAt(int) -> byteAt
    13:13:int capacity() -> capacity
    14:14:int length() -> length
    15:15:byte[] buffer() -> buffer
    16:16:void setLength(int) -> setLength
    17:17:boolean isEmpty() -> isEmpty
    18:18:boolean isFull() -> isFull
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    6:6:void append(char[],int,int) -> append
    7:7:void append(java.lang.String) -> append
    8:8:void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    9:9:void append(org.apache.http.util.CharArrayBuffer) -> append
    10:10:void append(char) -> append
    11:11:void append(byte[],int,int) -> append
    12:12:void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    13:13:void append(java.lang.Object) -> append
    14:14:void clear() -> clear
    15:15:char[] toCharArray() -> toCharArray
    16:16:char charAt(int) -> charAt
    17:17:char[] buffer() -> buffer
    18:18:int capacity() -> capacity
    19:19:int length() -> length
    20:20:void ensureCapacity(int) -> ensureCapacity
    21:21:void setLength(int) -> setLength
    22:22:boolean isEmpty() -> isEmpty
    23:23:boolean isFull() -> isFull
    24:24:int indexOf(int,int,int) -> indexOf
    25:25:int indexOf(int) -> indexOf
    26:26:java.lang.String substring(int,int) -> substring
    27:27:java.lang.String substringTrimmed(int,int) -> substringTrimmed
    28:28:java.lang.String toString() -> toString
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    6:6:java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    7:7:java.lang.String getString(byte[],java.lang.String) -> getString
    8:8:byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    9:9:byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    10:10:java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    11:11:java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    6:6:byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    7:7:java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    8:8:java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    9:9:java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    6:6:void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_OFFSET -> HASH_OFFSET
    int HASH_SEED -> HASH_SEED
    6:6:int hashCode(int,int) -> hashCode
    7:7:int hashCode(int,boolean) -> hashCode
    8:8:int hashCode(int,java.lang.Object) -> hashCode
    9:9:boolean equals(java.lang.Object,java.lang.Object) -> equals
    10:10:boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    6:6:java.lang.String getPackage() -> getPackage
    7:7:java.lang.String getModule() -> getModule
    8:8:java.lang.String getRelease() -> getRelease
    9:9:java.lang.String getTimestamp() -> getTimestamp
    10:10:java.lang.String getClassloader() -> getClassloader
    11:11:java.lang.String toString() -> toString
    12:12:org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    13:13:org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    14:14:org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
